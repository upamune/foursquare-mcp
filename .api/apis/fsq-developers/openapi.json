{
  "components": {
    "securitySchemes": {
      "ManagedUserTokenAuth": {
        "description": "Enter the oauth token associated with the individual user. Learn about [user-ful authentication and how to create Foursquare managed users](https://location.foursquare.com/developer/reference/personalization-apis-authentication#user-ful-authentication)",
        "in": "query",
        "name": "oauth_token",
        "type": "apiKey"
      },
      "ServiceKeyBearerTokenAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "info": {
    "title": "Personalization APIs",
    "version": "1.0"
  },
  "openapi": "3.1.0",
  "paths": {
    "/checkins/add": {
      "post": {
        "deprecated": false,
        "description": "Allow a user to create a check-in.",
        "operationId": "create-a-checkin",
        "parameters": [
          {
            "description": "The API version date as documented [here](/reference/versioning); e.g. 20240109",
            "in": "query",
            "name": "v",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of a venue, provided only when adding a public photo of the venue in general, rather than a photo for a private check-in, tip, or page update.",
            "in": "query",
            "name": "venueId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A message about your check-in. The maximum length of this field is 140 characters.",
            "in": "query",
            "name": "shout",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"meta\": {\n    \"code\": 200,\n    \"requestId\": \"6421f092f5e2da1fdeb4f888\"\n  },\n  \"notifications\": [\n    {\n      \"type\": \"notificationTray\",\n      \"item\": {\n        \"unreadCount\": 3\n      }\n    },\n    {\n      \"type\": \"unconfirmed\",\n      \"item\": {\n        \"unreadCount\": 0\n      }\n    }\n  ],\n  \"response\": {\n    \"checkin\": {\n      \"id\": \"6421f0405c8d094658112a56\",\n      \"createdAt\": 1679945792,\n      \"type\": \"checkin\",\n      \"timeZoneOffset\": -420,\n      \"editableUntil\": 1680032192000,\n      \"user\": {\n        \"id\": \"12345678\",\n        \"firstName\": \"John\",\n        \"lastName\": \"Smith\",\n        \"gender\": \"male\",\n        \"address\": \"\",\n        \"city\": \"\",\n        \"state\": \"\",\n        \"countryCode\": \"US\",\n        \"relationship\": \"self\",\n        \"photo\": {\n          \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n          \"suffix\": \"/blank_boy.png\"\n        },\n        \"isAnonymous\": false\n      },\n      \"venue\": {\n        \"id\": \"4b88822df964a52018fd31e3\",\n        \"name\": \"Lucky Dragon - Chinese Restaurant\"},\n      \"source\": {\n        \"name\": \"Foursquare for iOS\",\n        \"url\": \"https://foursquare.com/download/#/iphone\"\n      },\n      \"photos\": {\n        \"count\": 0,\n        \"items\": []\n      },\n      \"posts\": {\n        \"count\": 0,\n        \"textCount\": 0\n      },\n      \"checkinShortUrl\": \"https://www.swarmapp.com/user/123456/checkin/6421f0405c8d094658112a56?s=qtRZqSvVhWt8pNB8fFUsjbMaoLM\",\n      \"likes\": {\n        \"count\": 0,\n        \"groups\": []\n      },\n      \"like\": false,\n      \"comments\": {\n        \"count\": 0,\n        \"items\": []\n      },\n      \"isMayor\": false,\n      \"score\": {\n        \"total\": 0\n      }\n    },\n    \"notifications\": [\n      {\n        \"type\": \"message\",\n        \"item\": {\n          \"message\": \"You've been here 2 times!\",\n          \"entities\": [\n            {\n              \"indices\": [\n                17,\n                18\n              ],\n              \"type\": \"count\",\n              \"value\": 2\n            }\n          ]\n        },\n        \"alert\": false\n      }\n    ],\n    \"notificationsOrder\": [\n      \"score\",\n      \"leaderboard\",\n      \"replies\"\n    ]\n  }\n}"
                  }
                },
                "schema": {
                  "description": "Successful check-in addition response for the specified user.",
                  "properties": {
                    "description": "Properties for the response to a successful check-in creation request.",
                    "meta": {
                      "description": "Metadata object containing additional information about the successful check-in request.",
                      "properties": {
                        "code": {
                          "default": 0,
                          "description": "Status code indicating the result of the check-ins/add POST request.",
                          "example": 200,
                          "type": "integer"
                        },
                        "description": "Metadata object containing additional information about the response for successful check-in addition.",
                        "requestId": {
                          "description": "Unique identifier for the API request.",
                          "example": "6421f092f5e2da1fdeb4f888",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "notifications": {
                      "description": "Array of notification objects containing information about the check-in.",
                      "items": {
                        "description": "The response object for successful check-in addition including any notifications.",
                        "properties": {
                          "description": "Array of notification objects containing information about the user's check-in.",
                          "item": {
                            "description": "Response object containing information about the notification of a successful check-in.",
                            "properties": {
                              "description": "Array of notification objects containing information about a user's check-in.",
                              "unreadCount": {
                                "default": 0,
                                "description": "Number of unread items associated with a notification from a successful check-in addition.",
                                "example": 3,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": {
                            "description": "The type of notification.",
                            "example": "notificationTray",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "response": {
                      "description": "Object containing the retrieved data for successfully added check-ins.",
                      "properties": {
                        "checkin": {
                          "description": "The response object for the successful creation of a check-in contains information about the newly created check-in.",
                          "properties": {
                            "checkinShortUrl": {
                              "description": "Unique identifier for the short URL of a newly created check-in.",
                              "example": "https://www.swarmapp.com/user/123456/checkin/6421f0405c8d094658112a56?s=qtRZqSvVhWt8pNB8fFUsjbMaoLM",
                              "type": "string"
                            },
                            "comments": {
                              "description": "Comments associated with a successful check-in addition.",
                              "properties": {
                                "count": {
                                  "default": 0,
                                  "description": "Count of comments on a check-in post response.",
                                  "example": 0,
                                  "type": "integer"
                                },
                                "description": "Array of comment objects containing additional information about the check-in.",
                                "items": {
                                  "description": "Array of comments for a check-in at a venue.",
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            },
                            "createdAt": {
                              "default": 0,
                              "description": "Timestamp indicating when the check-in was created; UNIX timestamp in seconds since Epoch.",
                              "example": 1679945792,
                              "type": "integer"
                            },
                            "description": "Unique identifier for the check-in associated with the photo.",
                            "editableUntil": {
                              "default": 0,
                              "description": "The check-in's editable time limit.",
                              "example": 1680032192000,
                              "type": "integer"
                            },
                            "id": {
                              "description": "Unique identifier for the check-in.",
                              "example": "6421f0405c8d094658112a56",
                              "type": "string"
                            },
                            "isMayor": {
                              "default": true,
                              "description": "Flag indicating if the user is the mayor of the venue associated with the check-in.",
                              "example": false,
                              "type": "boolean"
                            },
                            "like": {
                              "default": true,
                              "description": "Flag indicating whether the user has liked the associated check-in.",
                              "example": false,
                              "type": "boolean"
                            },
                            "likes": {
                              "description": "Number of likes for the check-in.",
                              "properties": {
                                "count": {
                                  "default": 0,
                                  "description": "Total number of likes for the check-in.",
                                  "example": 0,
                                  "type": "integer"
                                },
                                "description": "Array of user objects who have liked the check-in.",
                                "groups": {
                                  "description": "Groups that have liked the check-in.",
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            },
                            "photos": {
                              "description": "Array of photo objects associated with the newly created check-in.",
                              "properties": {
                                "count": {
                                  "default": 0,
                                  "description": "Total number of photos associated with the check-in.",
                                  "example": 0,
                                  "type": "integer"
                                },
                                "description": "Response object containing information about the check-in including associated photos.",
                                "items": {
                                  "description": "Array of photo objects associated with the check-in.",
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            },
                            "posts": {
                              "description": "List of posts associated with the check-in.",
                              "properties": {
                                "count": {
                                  "default": 0,
                                  "description": "Number of posts associated with a check-in.",
                                  "example": 0,
                                  "type": "integer"
                                },
                                "description": "Array of post objects associated with the check-in.",
                                "textCount": {
                                  "default": 0,
                                  "description": "Number of characters in the post text associated with the check-in.",
                                  "example": 0,
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            },
                            "score": {
                              "description": "Check-in score associated with the check-in.",
                              "properties": {
                                "description": "Check-in score for successfully adding a new check-in.",
                                "total": {
                                  "default": 0,
                                  "description": "Total score of the check-in being added.",
                                  "example": 0,
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            },
                            "source": {
                              "description": "Check-in source associated with the new check-in.",
                              "properties": {
                                "description": "The source of the check-in.",
                                "name": {
                                  "description": "Name of the source where the check-in was obtained.",
                                  "example": "Foursquare for iOS",
                                  "type": "string"
                                },
                                "url": {
                                  "description": "The URL of the source of the checkin.",
                                  "example": "https://foursquare.com/download/#/iphone",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "timeZoneOffset": {
                              "default": 0,
                              "description": "The time zone offset of the newly created check-in.",
                              "example": -420,
                              "type": "integer"
                            },
                            "type": {
                              "description": "Type of check-in being added.",
                              "example": "checkin",
                              "type": "string"
                            },
                            "user": {
                              "description": "User who performed the check-in.",
                              "properties": {
                                "address": {
                                  "description": "The address of the user who added the check-in.",
                                  "example": "",
                                  "type": "string"
                                },
                                "city": {
                                  "description": "City of the user who created the check-in.",
                                  "example": "",
                                  "type": "string"
                                },
                                "countryCode": {
                                  "description": "User's country code.",
                                  "example": "US",
                                  "type": "string"
                                },
                                "description": "Object containing additional information about the user associated with the added check-in.",
                                "firstName": {
                                  "description": "First name of the user who checked in.",
                                  "example": "John",
                                  "type": "string"
                                },
                                "gender": {
                                  "description": "The gender of the user who created the check-in.",
                                  "example": "male",
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Unique identifier for the user associated with the created check-in.",
                                  "example": "12345678",
                                  "type": "string"
                                },
                                "isAnonymous": {
                                  "default": true,
                                  "description": "Flag indicating if the user who uploaded the photo is anonymous.",
                                  "example": false,
                                  "type": "boolean"
                                },
                                "lastName": {
                                  "description": "Last name of the user associated with the added check-in.",
                                  "example": "Smith",
                                  "type": "string"
                                },
                                "photo": {
                                  "description": "The user's profile photo associated with the check-in.",
                                  "properties": {
                                    "description": "Photo information for the user associated with the check-in.",
                                    "prefix": {
                                      "description": "Prefix for the photo URL of the user associated with the check-in.",
                                      "example": "https://fastly.4sqi.net/img/user/",
                                      "type": "string"
                                    },
                                    "suffix": {
                                      "description": "The suffix property for the user's photo URL.",
                                      "example": "/blank_boy.png",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "relationship": {
                                  "description": "The requester's relationship to the user who created the check-in.",
                                  "example": "self",
                                  "type": "string"
                                },
                                "state": {
                                  "description": "The state of the user who created the check-in.",
                                  "example": "",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "venue": {
                              "description": "The venue associated with the check-in response.",
                              "properties": {
                                "description": "Properties of the venue.",
                                "id": {
                                  "description": "The unique identifier for the venue associated with the check-in.",
                                  "example": "4b88822df964a52018fd31e3",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "The name of the venue associated with the added check-in.",
                                  "example": "Lucky Dragon - Chinese Restaurant",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "description": "Object containing the retrieved check-in data.",
                        "notifications": {
                          "description": "Array of notification objects containing information about the check-in.",
                          "items": {
                            "description": "Array of notification objects containing information about the number of unread items in the check-in response.",
                            "properties": {
                              "alert": {
                                "default": true,
                                "description": "Flag indicating if the notification item should trigger an alert.",
                                "example": false,
                                "type": "boolean"
                              },
                              "description": "Array of notification objects for the successfully added check-in.",
                              "item": {
                                "description": "Notification item associated with a successful response to adding a check-in.",
                                "properties": {
                                  "description": "Array of notification objects containing information about unread items for the check-in.",
                                  "entities": {
                                    "description": "Array of entities associated with a notification item for the check-in.",
                                    "items": {
                                      "description": "Notification entities for individual check-in items.",
                                      "properties": {
                                        "description": "Number of entities associated with the item in a notification response for a successful check-in addition.",
                                        "indices": {
                                          "description": "An array of indices indicating the location of entities within a notification item's content.",
                                          "items": {
                                            "default": 0,
                                            "description": "Response notification item entities indices. Response data for individual notification entities, including indices for specific items.",
                                            "example": 17,
                                            "type": "integer"
                                          },
                                          "type": "array"
                                        },
                                        "type": {
                                          "description": "Type of notification associated with the the check-in.",
                                          "example": "count",
                                          "type": "string"
                                        },
                                        "value": {
                                          "default": 0,
                                          "description": "The value of an item in the entities array within the notifications array within the check-in.",
                                          "example": 2,
                                          "type": "integer"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "message": {
                                    "description": "Check-in response with message from notifications.",
                                    "example": "You've been here 2 times!",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": {
                                "description": "The type of notification in a successful response.",
                                "example": "message",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "notificationsOrder": {
                          "description": "Order of notifications in the response for adding a check-in.",
                          "items": {
                            "description": "Response object containing the notifications order for added check-ins.",
                            "example": "score",
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "200"
          }
        },
        "security": [
          {
            "ManagedUserTokenAuth": []
          }
        ],
        "summary": "Create Check-in",
        "tags": [
          "Checkins"
        ]
      }
    },
    "/checkins/{checkin_id}": {
      "get": {
        "deprecated": false,
        "description": "Get the details of a user's check-in.",
        "operationId": "get-checkin-details",
        "parameters": [
          {
            "description": "The ID of the check-in to retrieve information for.",
            "in": "path",
            "name": "checkin_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The API version date as documented [here](/reference/versioning); e.g. 20231010",
            "in": "query",
            "name": "v",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"meta\": {\n    \"code\": 200,\n    \"requestId\": \"641b40254de0ba36cb9d0f5b\"\n  },\n  \"notifications\": [\n    {\n      \"type\": \"notificationTray\",\n      \"item\": {\n        \"unreadCount\": 0\n      }\n    }\n  ],\n  \"response\": {\n    \"checkin\": {\n      \"id\": \"59b97e2a0d173f01fd48252e\",\n      \"createdAt\": 1505328682,\n      \"type\": \"checkin\",\n      \"canonicalUrl\": \"https://foursquare.com/user/123456/checkin/59b97e2a0d173f01fd48252e\",\n      \"canonicalPath\": \"/user/123456/checkin/59b97e2a0d173f01fd48252e\",\n      \"timeZoneOffset\": -240,\n      \"user\": {\n        \"id\": \"123456\",\n        \"firstName\": \"John\",\n        \"lastName\": \"Smith\",\n        \"gender\": \"male\",\n        \"countryCode\": \"US\",\n        \"relationship\": \"self\",\n        \"canonicalUrl\": \"https://foursquare.com/user/123456\",\n        \"canonicalPath\": \"/user/123456\",\n        \"photo\": {\n          \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n          \"suffix\": \"/blank_boy.png\",\n          \"default\": true\n        },\n        \"isAnonymous\": false\n      },  \n      \"venue\": {\n        \"id\": \"4f21c7e27beb6c5a9479b1d8\",\n        \"name\": \"Smarmia\"},\n      \"source\": {\n        \"name\": \"Swarm for iOS\",\n        \"url\": \"https://www.swarmapp.com\"\n      },\n      \"photos\": {\n        \"count\": 1,\n        \"items\": [\n          {\n            \"id\": \"59b97e2c9cadd90e7e9d34d7\",\n            \"createdAt\": 1505328684,\n            \"prefix\": \"https://fastly.4sqi.net/img/general/\",\n            \"suffix\": \"/7294631_KwCujD9q6_WvkyCxFXePxehjhkDRCBo7QixqdLXK-ls.jpg\",\n            \"width\": 1440,\n            \"height\": 1920,\n            \"user\": {\n              \"id\": \"123456\",\n              \"firstName\": \"John\",\n              \"lastName\": \"Smith\",\n              \"gender\": \"male\",\n              \"countryCode\": \"US\",\n              \"relationship\": \"self\",\n              \"canonicalUrl\": \"https://foursquare.com/user/123456\",\n              \"canonicalPath\": \"/user/123456\",\n              \"photo\": {\n                \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n                \"suffix\": \"/blank_boy.png\",\n                \"default\": true\n              },\n              \"isAnonymous\": false\n            }\n          }\n        ],\n        \"layout\": {\n          \"name\": \"single\"\n        }\n      },\n      \"posts\": {\n        \"count\": 0,\n        \"textCount\": 0\n      },\n      \"checkinShortUrl\": \"https://www.swarmapp.com/user/123456/checkin/59b97e2a0d173f01fd48252e?s=NGWtGIBccpKeOKH_SB9EEnGqrI4\",\n      \"likes\": {\n        \"count\": 0,\n        \"groups\": []\n      },\n      \"like\": false,\n      \"comments\": {\n        \"count\": 0,\n        \"items\": []\n      },\n      \"isMayor\": false,\n      \"score\": {\n        \"total\": 0\n      }\n    }\n  }\n}"
                  }
                },
                "schema": {
                  "description": "Response object containing information about a specific check-in, including associated photos and venue details.",
                  "properties": {
                    "description": "Properties related to a successful response from the endpoint to retrieve information about a specific check-in.",
                    "meta": {
                      "description": "Metadata object containing information about the success of the check-in retrieval.",
                      "properties": {
                        "code": {
                          "default": 0,
                          "description": "Status code indicating the result of the API request for retrieving a specific check-in.",
                          "example": 200,
                          "type": "integer"
                        },
                        "description": "Response metadata for a successful check-in retrieval.",
                        "requestId": {
                          "description": "Unique identifier for the API request.",
                          "example": "641b40254de0ba36cb9d0f5b",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "notifications": {
                      "description": "Array of notification objects containing information about the check-in.",
                      "items": {
                        "description": "Array of notification objects for the given check-in.",
                        "properties": {
                          "description": "Array of notification objects containing information about unread notifications related to the given check-in.",
                          "item": {
                            "description": "Notification object for a specific check-in, containing the number of unread items.",
                            "properties": {
                              "description": "Information about notifications related to a specific check-in.",
                              "unreadCount": {
                                "default": 0,
                                "description": "Number of unread items in the notification for a specific check-in.",
                                "example": 0,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": {
                            "description": "Type of notification for a specific check-in response.",
                            "example": "notificationTray",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "response": {
                      "description": "Check-in response object for a specific check-in, including the check-in's associated photos and venue information.",
                      "properties": {
                        "checkin": {
                          "description": "The check-in associated with the specified ID.",
                          "properties": {
                            "canonicalPath": {
                              "description": "The canonical path for the check-in associated with the given check-in ID.",
                              "example": "/user/123456/checkin/59b97e2a0d173f01fd48252e",
                              "type": "string"
                            },
                            "canonicalUrl": {
                              "description": "The canonical URL for the check-in associated with the specified ID.",
                              "example": "https://foursquare.com/user/123456/checkin/59b97e2a0d173f01fd48252e",
                              "type": "string"
                            },
                            "checkinShortUrl": {
                              "description": "The short URL for a specific check-in.",
                              "example": "https://www.swarmapp.com/user/123456/checkin/59b97e2a0d173f01fd48252e?s=NGWtGIBccpKeOKH_SB9EEnGqrI4",
                              "type": "string"
                            },
                            "comments": {
                              "description": "Array of comment objects for a specific check-in.",
                              "properties": {
                                "count": {
                                  "default": 0,
                                  "description": "Total number of comments on the check-in associated with the specified ID.",
                                  "example": 0,
                                  "type": "integer"
                                },
                                "description": "Comment objects for the specified check-in.",
                                "items": {
                                  "description": "Array of comment objects for the specified check-in.",
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            },
                            "createdAt": {
                              "default": 0,
                              "description": "Timestamp indicating when the associated check-in was created; UNIX timestamp in seconds since Epoch.",
                              "example": 1505328682,
                              "type": "integer"
                            },
                            "description": "The response object for retrieving a specific check-in, including information about the check-in itself.",
                            "id": {
                              "description": "Check-in ID for a specific check-in.",
                              "example": "59b97e2a0d173f01fd48252e",
                              "type": "string"
                            },
                            "isMayor": {
                              "default": true,
                              "description": "Flag indicating if the user is the mayor of the venue associated with the check-in.",
                              "example": false,
                              "type": "boolean"
                            },
                            "like": {
                              "default": true,
                              "description": "Flag indicating if the current user has liked the associated check-in.",
                              "example": false,
                              "type": "boolean"
                            },
                            "likes": {
                              "description": "List of users who have liked the specified check-in. ",
                              "properties": {
                                "count": {
                                  "default": 0,
                                  "description": "Number of likes on a specific check-in.",
                                  "example": 0,
                                  "type": "integer"
                                },
                                "description": "Number of likes for the specified check-in.",
                                "groups": {
                                  "description": "Array of groups containing users who have liked the check-in associated with the given checkin_id.",
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            },
                            "photos": {
                              "description": "Array of photo objects associated with the specified check-in.",
                              "properties": {
                                "count": {
                                  "default": 0,
                                  "description": "Number of photos associated with the check-in.",
                                  "example": 1,
                                  "type": "integer"
                                },
                                "description": "Check-in photos associated with the specified check-in. ",
                                "items": {
                                  "description": "Array of photo objects containing information about photos associated with the given check-in.",
                                  "items": {
                                    "description": "An array of photo objects associated with the check-in, including unique identifiers, timestamps, source information, URLs, dimensions, user information, and check-in information.",
                                    "properties": {
                                      "createdAt": {
                                        "default": 0,
                                        "description": "Timestamp for when the photo was created in the associated check-in; UNIX timestamp in seconds since Epoch.",
                                        "example": 1505328684,
                                        "type": "integer"
                                      },
                                      "description": "List of photos associated with a specific check-in, including information such as ID, creation timestamp, source, URL, width, height, and user details.",
                                      "height": {
                                        "default": 0,
                                        "description": "Height of photos associated with a specific check-in.",
                                        "example": 1920,
                                        "type": "integer"
                                      },
                                      "id": {
                                        "description": "Unique identifier for the photos associated with the specified check-in.",
                                        "example": "59b97e2c9cadd90e7e9d34d7",
                                        "type": "string"
                                      },
                                      "prefix": {
                                        "description": "Prefixes for the photos associated with the check-in.",
                                        "example": "https://fastly.4sqi.net/img/general/",
                                        "type": "string"
                                      },
                                      "suffix": {
                                        "description": "URL suffix for the image.",
                                        "example": "/7294631_KwCujD9q6_WvkyCxFXePxehjhkDRCBo7QixqdLXK-ls.jpg",
                                        "type": "string"
                                      },
                                      "user": {
                                        "description": "User object for the photo associated with the specified check-in.",
                                        "properties": {
                                          "canonicalPath": {
                                            "description": "Canonical user path.",
                                            "example": "/user/123456",
                                            "type": "string"
                                          },
                                          "canonicalUrl": {
                                            "description": "Canonical user URL.",
                                            "example": "https://foursquare.com/user/123456",
                                            "type": "string"
                                          },
                                          "countryCode": {
                                            "description": "Country code of the user who uploaded the photo associated with the given check-in.",
                                            "example": "US",
                                            "type": "string"
                                          },
                                          "description": " Response object for a check-in's photos, including information about the user who uploaded the photo.\n\nResponse object for a check-in's photos and the associated user who uploaded it.",
                                          "firstName": {
                                            "description": "Unique identifier for the user who uploaded the photo associated with the given check-in.",
                                            "example": "John",
                                            "type": "string"
                                          },
                                          "gender": {
                                            "description": "The gender of the user who uploaded the photo.",
                                            "example": "male",
                                            "type": "string"
                                          },
                                          "id": {
                                            "description": "Unique identifier for the user who uploaded the photo associated with the given check-in.",
                                            "example": "123456",
                                            "type": "string"
                                          },
                                          "isAnonymous": {
                                            "default": true,
                                            "description": "Flag indicating if the user who uploaded the photo is anonymous.",
                                            "example": false,
                                            "type": "boolean"
                                          },
                                          "lastName": {
                                            "description": "Get the last name of the user associated with the photos that were part of a specific check-in.",
                                            "example": "Smith",
                                            "type": "string"
                                          },
                                          "photo": {
                                            "description": "Photo object for the user who uploaded the photo associated with the specified check-in.",
                                            "properties": {
                                              "default": {
                                                "default": true,
                                                "description": "Default profile photo of the user who uploaded the photo associated with the check-in retrieved from the API endpoint.",
                                                "example": true,
                                                "type": "boolean"
                                              },
                                              "description": "User's profile photo information for a specific check-in.",
                                              "prefix": {
                                                "description": "Prefix for the profile photo URL of the user associated with the check-in's photo.",
                                                "example": "https://fastly.4sqi.net/img/user/",
                                                "type": "string"
                                              },
                                              "suffix": {
                                                "description": "URL suffix for the image.",
                                                "example": "/blank_boy.png",
                                                "type": "string"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "relationship": {
                                            "description": "Gets the relationship of the user who uploaded the photo associated with the specified check-in.",
                                            "example": "self",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "width": {
                                        "default": 0,
                                        "description": "The width of photos associated with a specific check-in.",
                                        "example": 1440,
                                        "type": "integer"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "layout": {
                                  "description": "Layout of photos associated with a specific check-in.",
                                  "properties": {
                                    "description": "Object containing information about the layout of photos associated with a specific check-in.",
                                    "name": {
                                      "description": "Layout name for photos associated with a specific check-in.",
                                      "example": "single",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            },
                            "posts": {
                              "description": "Array of posts associated with the specified check-in.",
                              "properties": {
                                "count": {
                                  "default": 0,
                                  "description": "Number of posts associated with a specific check-in.",
                                  "example": 0,
                                  "type": "integer"
                                },
                                "description": "Array of post objects associated with the check-in.",
                                "textCount": {
                                  "default": 0,
                                  "description": "Number of characters in the post text for a specific check-in.",
                                  "example": 0,
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            },
                            "score": {
                              "description": "Check-in score associated with a specific check-in.",
                              "properties": {
                                "description": "The score associated with a specific check-in.",
                                "total": {
                                  "default": 0,
                                  "description": "Total score of a specific check-in.",
                                  "example": 0,
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            },
                            "source": {
                              "description": "Source of the check-in associated with the response.",
                              "properties": {
                                "description": "Nested object containing information about the source of the check-in.",
                                "name": {
                                  "description": "The name of the source where the check-in was obtained for a successful response from retrieving a specific check-in.",
                                  "example": "Swarm for iOS",
                                  "type": "string"
                                },
                                "url": {
                                  "description": "Retrieves the URL of the source of a specific check-in.",
                                  "example": "https://www.swarmapp.com",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "timeZoneOffset": {
                              "default": 0,
                              "description": "Time zone offset for the specified check-in.",
                              "example": -240,
                              "type": "integer"
                            },
                            "type": {
                              "description": "Type of check-in associated with the specified check-in ID.",
                              "example": "checkin",
                              "type": "string"
                            },
                            "user": {
                              "description": "Check-in user information for a specific check-in.",
                              "properties": {
                                "canonicalPath": {
                                  "description": "The canonical path for the user associated with the specified check-in.",
                                  "example": "/user/123456",
                                  "type": "string"
                                },
                                "canonicalUrl": {
                                  "description": "The canonical URL of the user associated with the specified check-in.",
                                  "example": "https://foursquare.com/user/123456",
                                  "type": "string"
                                },
                                "countryCode": {
                                  "description": "The country code of the user who created the specified check-in.",
                                  "example": "US",
                                  "type": "string"
                                },
                                "description": "User object for the associated check-in.",
                                "firstName": {
                                  "description": "First name of the user associated with the selected check-in.",
                                  "example": "John",
                                  "type": "string"
                                },
                                "gender": {
                                  "description": "The gender of the user associated with the specified check-in.",
                                  "example": "male",
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Unique identifier for the user who created the check-in associated with the provided checkin_id.",
                                  "example": "123456",
                                  "type": "string"
                                },
                                "isAnonymous": {
                                  "default": true,
                                  "description": "Flag indicating if the user who uploaded the check-in associated with the given checkin_id is anonymous.",
                                  "example": false,
                                  "type": "boolean"
                                },
                                "lastName": {
                                  "description": "Check-in user's last name for a successful response from the specified check-in ID.",
                                  "example": "Smith",
                                  "type": "string"
                                },
                                "photo": {
                                  "description": "User's profile photo associated with a specific check-in from the Foursquare API.",
                                  "properties": {
                                    "default": {
                                      "default": true,
                                      "description": "Default profile photo for user who submitted the check-in.",
                                      "example": true,
                                      "type": "boolean"
                                    },
                                    "description": "User's photo associated with the check-in at the specified check-in ID.",
                                    "prefix": {
                                      "description": "The prefix URL for the profile photo of the user who created the check-in associated with the given check-in ID.",
                                      "example": "https://fastly.4sqi.net/img/user/",
                                      "type": "string"
                                    },
                                    "suffix": {
                                      "description": "URL suffix for the image.",
                                      "example": "/blank_boy.png",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "relationship": {
                                  "description": "Relationship of the user who created the check-in response for a specific check-in.",
                                  "example": "self",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "venue": {
                              "description": "Venue object associated with the check-in.",
                              "properties": {
                                "description": "Venue information for a specific check-in.",
                                "id": {
                                  "description": "Unique identifier for the venue associated with the check-in.",
                                  "example": "4f21c7e27beb6c5a9479b1d8",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "The name of the venue associated with the specified check-in.",
                                  "example": "Smarmia",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "description": "Check-in information for the specified check-in ID."
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "200"
          }
        },
        "security": [
          {
            "ManagedUserTokenAuth": []
          }
        ],
        "summary": "Get Check-in Details",
        "tags": [
          "Checkins"
        ]
      }
    },
    "/checkins/{checkin_id}/delete": {
      "post": {
        "deprecated": false,
        "description": "Remove a check-in, if the acting user is the owner of the check-in.",
        "operationId": "delete-a-check-in",
        "parameters": [
          {
            "in": "path",
            "name": "checkin_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The API version date as documented [here](/reference/versioning); e.g. 20231010",
            "in": "query",
            "name": "v",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"meta\": {\n    \"code\": 200,\n    \"requestId\": \"6421f17ee8dff96c74ea7a0e\"\n  },\n  \"notifications\": [\n    {\n      \"type\": \"notificationTray\",\n      \"item\": {\n        \"unreadCount\": 3\n      }\n    },\n    {\n      \"type\": \"unconfirmed\",\n      \"item\": {\n        \"unreadCount\": 0\n      }\n    }\n  ],\n  \"response\": {}\n}"
                  }
                },
                "schema": {
                  "description": "Response object detailing the check-in deletion.",
                  "properties": {
                    "description": "Deletes a check-in with the specified ID and returns a successful response.",
                    "meta": {
                      "description": "Metadata object containing additional information about the response for deleting a check-in with the given ID, returned if the API request is successful.",
                      "properties": {
                        "code": {
                          "default": 0,
                          "description": "Status code indicating the result of the check-in deletion request.",
                          "example": 200,
                          "type": "integer"
                        },
                        "description": "Metadata object containing additional information about the success of deleting a check-in.",
                        "requestId": {
                          "description": "Unique ID for the deletion request.",
                          "example": "6421f17ee8dff96c74ea7a0e",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "notifications": {
                      "description": "Array of notification objects indicating the success of deleting a check-in.",
                      "items": {
                        "description": "Array of notification objects for a successful deletion of a check-in.",
                        "properties": {
                          "description": "Array of notification objects for the successfully deleted check-in.",
                          "item": {
                            "description": "Notification object for a successfully deleted check-in.",
                            "properties": {
                              "description": "Array of notification objects containing information about the deleted check-in.",
                              "unreadCount": {
                                "default": 0,
                                "description": "The number of unread items in a notification for a deleted check-in.",
                                "example": 3,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": {
                            "description": "The type of notification.",
                            "example": "notificationTray",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "response": {
                      "description": "Successful deletion of a check-in.",
                      "properties": {
                        "description": "The check-in deletion response object for a 200 status code, containing information about the deleted check-in."
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "200"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "description": "Failed to delete a check-in due to invalid request parameters.",
                  "properties": {
                    "description": "Properties for handling 400 responses when attempting to delete a specific check-in."
                  },
                  "type": "object"
                }
              }
            },
            "description": "400"
          }
        },
        "security": [
          {
            "ManagedUserTokenAuth": []
          }
        ],
        "summary": "Delete Check-in",
        "tags": [
          "Checkins"
        ]
      }
    },
    "/checkins/{checkin_id}/update": {
      "post": {
        "deprecated": false,
        "description": "Allows the acting user to edit their check-ins after the fact.",
        "operationId": "update-a-checkin",
        "parameters": [
          {
            "in": "path",
            "name": "checkin_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The API version date as documented [here](/reference/versioning); e.g. 20231010",
            "in": "query",
            "name": "v",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A message about your check-in. The maximum length of this field is 200 characters.",
            "in": "query",
            "name": "shout",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"meta\": {\n    \"code\": 200,\n    \"requestId\": \"642216f6dca15c004ac90c64\"\n  },\n  \"notifications\": [\n    {\n      \"type\": \"notificationTray\",\n      \"item\": {\n        \"unreadCount\": 0\n      }\n    },\n    {\n      \"type\": \"unconfirmed\",\n      \"item\": {\n        \"unreadCount\": 0\n      }\n    }\n  ],\n  \"response\": {\n    \"checkin\": {\n      \"id\": \"59b97e6cf79faa0d5e23abeb\",\n      \"createdAt\": 1505328748,\n      \"type\": \"checkin\",\n      \"private\": true,\n      \"visibility\": \"private\",\n      \"entities\": [],\n      \"shout\": \"Monday monday!\",\n      \"timeZoneOffset\": -240,\n      \"venue\": {\n        \"id\": \"4f0de7267bebfc146005dcc0\",\n        \"name\": \"Mattlantis 🐳\"},\n      \"isMayor\": false,\n      \"posts\": {\n        \"count\": 0,\n        \"textCount\": 0\n      },\n      \"comments\": {\n        \"count\": 0\n      },\n      \"source\": {\n        \"name\": \"Swarm for iOS\",\n        \"url\": \"https://www.swarmapp.com\"\n      }\n    }\n  }\n}"
                  }
                },
                "schema": {
                  "description": "Updates a check-in with a 200 status code response.",
                  "properties": {
                    "description": "Properties of a successful update to a check-in with a given ID.",
                    "meta": {
                      "description": "Metadata object for a successful update of a check-in.",
                      "properties": {
                        "code": {
                          "default": 0,
                          "description": "Status code for successful update of a check-in, contained within the metadata object of the response.",
                          "example": 200,
                          "type": "integer"
                        },
                        "description": "Metadata object containing additional information about the successful check-in update request.",
                        "requestId": {
                          "description": "Unique identifier for the API request associated with updating a check-in response.",
                          "example": "642216f6dca15c004ac90c64",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "notifications": {
                      "description": "Response object containing notification information for a successful update to a check-in.",
                      "items": {
                        "description": "Array containing notification objects for the updated check-in.",
                        "properties": {
                          "description": "Array of notification objects for the updated check-in.",
                          "item": {
                            "description": "Array of notification objects for a successful check-in update request.",
                            "properties": {
                              "description": "Array of notification objects for a successful check-in update.",
                              "unreadCount": {
                                "default": 0,
                                "description": "Number of unread notifications for a specific check-in.",
                                "example": 0,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": {
                            "description": "The notification type for a specific check-in update.",
                            "example": "notificationTray",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "response": {
                      "description": "The response object for updating a check-in with a 200 status code.",
                      "properties": {
                        "checkin": {
                          "description": "Object containing information about the updated check-in associated with the given checkin_id.",
                          "properties": {
                            "comments": {
                              "description": "Array of comments associated with the updated check-in.",
                              "properties": {
                                "count": {
                                  "default": 0,
                                  "description": "Number of comments on a check-in update.",
                                  "example": 0,
                                  "type": "integer"
                                },
                                "description": "Update a check-in's comments in a specific check-in and retrieve information about the updated check-in's comments."
                              },
                              "type": "object"
                            },
                            "createdAt": {
                              "default": 0,
                              "description": "Timestamp indicating when the check-in was updated; UNIX timestamp in seconds since Epoch.",
                              "example": 1505328748,
                              "type": "integer"
                            },
                            "description": "The updated check-in object associated with the given check-in ID.",
                            "entities": {
                              "description": "Array of entities associated with the updated check-in referenced by the given checkin_id.",
                              "type": "array"
                            },
                            "id": {
                              "description": "The check-in ID.",
                              "example": "59b97e6cf79faa0d5e23abeb",
                              "type": "string"
                            },
                            "isMayor": {
                              "default": true,
                              "description": "Flag indicating if the current user is the mayor of the venue associated with the check-in.",
                              "example": false,
                              "type": "boolean"
                            },
                            "posts": {
                              "description": "Response object containing the updated check-in information and associated posts.",
                              "properties": {
                                "count": {
                                  "default": 0,
                                  "description": "Number of posts associated with the specified check-in.",
                                  "example": 0,
                                  "type": "integer"
                                },
                                "description": "Contains information about the posts associated with the updated check-in.",
                                "textCount": {
                                  "default": 0,
                                  "description": "Number of characters in the text of the post associated with the updated check-in for the given check-in ID.",
                                  "example": 0,
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            },
                            "private": {
                              "default": true,
                              "description": "Whether the check-in is set to private or not.",
                              "example": true,
                              "type": "boolean"
                            },
                            "shout": {
                              "description": "A shout for the check-in.",
                              "example": "Monday monday!",
                              "type": "string"
                            },
                            "source": {
                              "description": "The source associated with the updated check-in.",
                              "properties": {
                                "description": "Check-in object containing the source information for the updated check-in.",
                                "name": {
                                  "description": "The source name for the associated check-in.",
                                  "example": "Swarm for iOS",
                                  "type": "string"
                                },
                                "url": {
                                  "description": "Updates a check-in's source URL.",
                                  "example": "https://www.swarmapp.com",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "timeZoneOffset": {
                              "default": 0,
                              "description": "Time zone offset for the check-in associated with the updated post response.",
                              "example": -240,
                              "type": "integer"
                            },
                            "type": {
                              "description": "The type of the specified check-in.",
                              "example": "checkin",
                              "type": "string"
                            },
                            "venue": {
                              "description": "The venue where the check-in was updated.",
                              "properties": {
                                "description": "Check-in response object containing the updated venue information.",
                                "id": {
                                  "description": "Unique identifier for the venue associated with the updated check-in.",
                                  "example": "4f0de7267bebfc146005dcc0",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name of the venue associated with the updated check-in response for a specific check-in ID.",
                                  "example": "Mattlantis 🐳",
                                  "type": "string"
                                }
                              }
                            },
                            "visibility": {
                              "description": "The visibility of a check-in.",
                              "example": "private",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "description": "The response object for updating a check-in with a 200 status code."
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "200"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "description": "Updates a check-in with the given ID, returning a 400 error response if the update is unsuccessful.",
                  "properties": {
                    "description": "Bad request error properties for updating a specific check-in."
                  },
                  "type": "object"
                }
              }
            },
            "description": "400"
          }
        },
        "security": [
          {
            "ManagedUserTokenAuth": []
          }
        ],
        "summary": "Update Checkin",
        "tags": [
          "Checkins"
        ]
      }
    },
    "/lists/add": {
      "post": {
        "deprecated": false,
        "description": "Allow a user to create a list.",
        "operationId": "create-a-list",
        "parameters": [
          {
            "description": "The API version date as documented [here](/reference/versioning); e.g. 20231010",
            "in": "query",
            "name": "v",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Provide a name for the list being created.",
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Provide a description of the created list.",
            "in": "query",
            "name": "description",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"meta\": {\n    \"code\": 200,\n    \"requestId\": \"641a25e7d789ea1a17015592\"\n  },\n  \"notifications\": [\n    {\n      \"type\": \"notificationTray\",\n      \"item\": {\n        \"unreadCount\": 0\n      }\n    }\n  ],\n  \"response\": {\n    \"list\": {\n      \"id\": \"641a25e7cf08c07fbebbccc3\",\n      \"name\": \"Stay Away From List\",\n      \"description\": \"All the not so amazing things!\",\n      \"type\": \"created\",\n      \"user\": {\n        \"id\": \"123456\",\n        \"firstName\": \"John\",\n        \"lastName\": \"Smith\",\n        \"gender\": \"male\",\n        \"countryCode\": \"US\",\n        \"relationship\": \"self\",\n        \"canonicalUrl\": \"https://foursquare.com/user/123456\",\n        \"canonicalPath\": \"/user/123456\",\n        \"photo\": {\n          \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n          \"suffix\": \"/blank_boy.png\",\n          \"default\": true\n        },\n        \"isAnonymous\": false\n      },  \n\n      \"editable\": true,\n      \"public\": true,\n      \"collaborative\": false,\n      \"url\": \"/user/123456/list/stay-away-from-list\",\n      \"canonicalUrl\": \"https://foursquare.com/user/123456/list/stay-away-from-list\",\n      \"canonicalPath\": \"/user/123456/list/stay-away-from-list\",\n      \"createdAt\": 1679435239,\n      \"updatedAt\": 1679435239,\n      \"visitedCount\": 0,\n      \"venueCount\": 0,\n      \"categories\": {\n        \"count\": 0,\n        \"items\": []\n      },\n      \"following\": false,\n      \"followers\": {\n        \"count\": 0\n      },\n      \"collaborators\": {\n        \"count\": 0,\n        \"items\": []\n      },\n      \"sort\": \"list-order\",\n      \"listItems\": {\n        \"count\": 0,\n        \"items\": []\n      },\n      \"completedCount\": 0\n    }\n  }\n}"
                  }
                },
                "schema": {
                  "description": "Response object indicating a successful list addition with a status code of 200.",
                  "properties": {
                    "description": "This path contains a response object with properties for adding a new list, returning a 200 status code.",
                    "meta": {
                      "description": "Metadata object containing additional information about the response.",
                      "properties": {
                        "code": {
                          "default": 0,
                          "description": "Status code indicating the result of adding a new list.",
                          "example": 200,
                          "type": "integer"
                        },
                        "description": "Response object containing metadata for a successful addition of a new list.",
                        "requestId": {
                          "description": "Unique identifier for the API request.",
                          "example": "641a25e7d789ea1a17015592",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "notifications": {
                      "description": "Array of notification objects containing information about the successfully added list.",
                      "items": {
                        "description": "Array of notification objects for a successful response when adding a list.",
                        "properties": {
                          "description": "Array of notification objects in the response for the 'add' action on lists, with a successful 200 response code.",
                          "item": {
                            "description": "Object containing information about a notification item in the response from a successful POST request to add a new list.",
                            "properties": {
                              "description": "Array of notification objects containing information about notifications related to the added list.",
                              "unreadCount": {
                                "default": 0,
                                "description": "Number of unread items in the notification for a successful response when adding a list. ",
                                "example": 0,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": {
                            "description": "Type of notification for added items in a list.",
                            "example": "notificationTray",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "response": {
                      "description": "The response object for successfully adding a list, with a 200 status code. ",
                      "properties": {
                        "description": "Response object containing the retrieved data for a successful request to add a list.",
                        "list": {
                          "description": "Object containing the added list data for a successful POST request.",
                          "properties": {
                            "canonicalPath": {
                              "description": "The canonical path of the created list.",
                              "example": "/user/123456/list/stay-away-from-list",
                              "type": "string"
                            },
                            "canonicalUrl": {
                              "description": "Canonical URL for the list.",
                              "example": "https://foursquare.com/user/123456/list/stay-away-from-list",
                              "type": "string"
                            },
                            "categories": {
                              "description": "Array of category objects associated with the newly created list.",
                              "properties": {
                                "count": {
                                  "default": 0,
                                  "description": "Number of categories associated with the newly added list.",
                                  "example": 0,
                                  "type": "integer"
                                },
                                "description": "Array of category objects for a successful response when adding a list.",
                                "items": {
                                  "description": "List of categories associated with the added list.",
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            },
                            "collaborative": {
                              "default": true,
                              "description": "Indicates if the list being added to is a collaborative list.",
                              "example": false,
                              "type": "boolean"
                            },
                            "collaborators": {
                              "description": "List of collaborators added to the specified list.",
                              "properties": {
                                "count": {
                                  "default": 0,
                                  "description": "The total number of collaborators for the newly added list.",
                                  "example": 0,
                                  "type": "integer"
                                },
                                "description": "Response object containing the added collaborator to the specified list.",
                                "items": {
                                  "description": "List of collaborators for the newly added list.",
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            },
                            "completedCount": {
                              "default": 0,
                              "description": "Number of completed items in the list response.",
                              "example": 0,
                              "type": "integer"
                            },
                            "createdAt": {
                              "default": 0,
                              "description": "Creates a new list with the specified creation date; UNIX timestamp in seconds since Epoch.",
                              "example": 1679435239,
                              "type": "integer"
                            },
                            "description": {
                              "example": "All the not so amazing things!",
                              "type": "string"
                            },
                            "editable": {
                              "default": true,
                              "description": "Specifies whether the list being added to is editable.",
                              "example": true,
                              "type": "boolean"
                            },
                            "followers": {
                              "description": "Number of followers for the newly created list.",
                              "properties": {
                                "count": {
                                  "default": 0,
                                  "description": "The total number of followers for the newly added list.",
                                  "example": 0,
                                  "type": "integer"
                                },
                                "description": "Response object containing the new list's followers."
                              },
                              "type": "object"
                            },
                            "following": {
                              "default": true,
                              "description": "Indicates whether the user is following the specified list.",
                              "example": false,
                              "type": "boolean"
                            },
                            "id": {
                              "description": "Adds a list to the response with the specified ID.",
                              "example": "641a25e7cf08c07fbebbccc3",
                              "type": "string"
                            },
                            "listItems": {
                              "description": "Array of list items added to the specified list.",
                              "properties": {
                                "count": {
                                  "default": 0,
                                  "description": "Total number of list items added to the specified list.",
                                  "example": 0,
                                  "type": "integer"
                                },
                                "description": "Array of list items added to the specified list.",
                                "items": {
                                  "description": "List items for the specified list.",
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            },
                            "name": {
                              "description": "Adds a new list with the specified name.",
                              "example": "Stay Away From List",
                              "type": "string"
                            },
                            "public": {
                              "default": true,
                              "description": "Whether the list is public or not.",
                              "example": true,
                              "type": "boolean"
                            },
                            "sort": {
                              "description": "Adds a list to the response with sorting properties.",
                              "example": "list-order",
                              "type": "string"
                            },
                            "type": {
                              "description": "Adds a new list to the response with a specific type.",
                              "example": "created",
                              "type": "string"
                            },
                            "updatedAt": {
                              "default": 0,
                              "description": "The timestamp indicating when the list was last updated; UNIX timestamp in seconds since Epoch.",
                              "example": 1679435239,
                              "type": "integer"
                            },
                            "url": {
                              "description": "Adds a list to the response with the specified URL.",
                              "example": "/user/123456/list/stay-away-from-list",
                              "type": "string"
                            },
                            "user": {
                              "description": "User object containing information about the user who created the list being added.",
                              "properties": {
                                "canonicalPath": {
                                  "description": "The canonical path for the list's associated user.",
                                  "example": "/user/123456",
                                  "type": "string"
                                },
                                "canonicalUrl": {
                                  "description": "User's canonical URL.",
                                  "example": "https://foursquare.com/user/123456",
                                  "type": "string"
                                },
                                "countryCode": {
                                  "description": "Adds a list to the user's profile in the specified country.",
                                  "example": "US",
                                  "type": "string"
                                },
                                "description": "Response object containing information about the user who created the added list.",
                                "firstName": {
                                  "description": "Adds a user's first name to a list response when creating a new list.",
                                  "example": "John",
                                  "type": "string"
                                },
                                "gender": {
                                  "description": "Adds a user's gender to the properties of a list response in a POST request for adding lists.",
                                  "example": "male",
                                  "type": "string"
                                },
                                "id": {
                                  "description": "The unique identifier of the user associated with a successfully added list.",
                                  "example": "123456",
                                  "type": "string"
                                },
                                "isAnonymous": {
                                  "default": true,
                                  "description": "Indicates if the user who created the list is anonymous.",
                                  "example": false,
                                  "type": "boolean"
                                },
                                "lastName": {
                                  "description": "User last name in the response.",
                                  "example": "Smith",
                                  "type": "string"
                                },
                                "photo": {
                                  "description": "User's profile photo.",
                                  "properties": {
                                    "default": {
                                      "default": true,
                                      "description": "Flag indicating if the user's default profile photo is used for the added list.",
                                      "example": true,
                                      "type": "boolean"
                                    },
                                    "description": "Properties for a user's profile photo.",
                                    "prefix": {
                                      "description": "URL prefix.",
                                      "example": "https://fastly.4sqi.net/img/user/",
                                      "type": "string"
                                    },
                                    "suffix": {
                                      "description": "The user's photo suffix.",
                                      "example": "/blank_boy.png",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "relationship": {
                                  "description": "Adds a relationship to the specified list for the given user.",
                                  "example": "self",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "venueCount": {
                              "default": 0,
                              "description": "Number of venues added to the list.",
                              "example": 0,
                              "type": "integer"
                            },
                            "visitedCount": {
                              "default": 0,
                              "description": "Number of venues visited for a list.",
                              "example": 0,
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "200"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "description": "400 error response when adding a list.",
                  "properties": {
                    "description": " \"400 Bad Request: Error encountered while adding a list."
                  },
                  "type": "object"
                }
              }
            },
            "description": "400"
          }
        },
        "security": [
          {
            "ManagedUserTokenAuth": []
          }
        ],
        "summary": "Create List",
        "tags": [
          "Lists"
        ]
      }
    },
    "/lists/{list_id}": {
      "get": {
        "deprecated": false,
        "description": "Get details of the user's list.",
        "operationId": "get-list-details",
        "parameters": [
          {
            "description": "The ID of the list to be acted upon.",
            "in": "path",
            "name": "list_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The API version date as documented [here](/reference/versioning); e.g. 20231010",
            "in": "query",
            "name": "v",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"meta\": {\n    \"code\": 200,\n    \"requestId\": \"654a92f35669622b047c40d4\"\n  },\n  \"notifications\": [\n    {\n      \"type\": \"notificationTray\",\n      \"item\": {\n        \"unreadCount\": 0\n      }\n    }\n  ],\n  \"response\": {\n    \"list\": {\n      \"id\": \"5ad0e20146e1b61376729df3\",\n      \"name\": \"A Foursquare history tour in NYC\",\n      \"description\": \"The places on this list hold a special place in the history of Foursquare. As we celebrate our 10th anniversary on 4SQDay - 2019, we share these ten places and their significance in our journey.\",\n      \"type\": \"others\",\n      \"user\": {\n        \"id\": \"23438729\",\n        \"firstName\": \"Foursquare City Guide\",\n        \"handle\": \"FoursquareGuide\",\n        \"privateProfile\": false,\n        \"gender\": \"none\",\n        \"countryCode\": \"US\",\n        \"followingRelationship\": \"none\",\n        \"canonicalUrl\": \"https://foursquare.com/p/foursquare-city-guide/23438729\",\n        \"canonicalPath\": \"/FoursquareGuide\",\n        \"photo\": {\n          \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n          \"suffix\": \"/23438729-TODURDIUDUMY4JF5.png\"\n        },\n        \"type\": \"page\",\n        \"isAnonymous\": false\n      },\n      \"editable\": false,\n      \"public\": true,\n      \"collaborative\": false,\n      \"url\": \"/FoursquareGuide/list/a-foursquare-history-tour-in-nyc\",\n      \"canonicalUrl\": \"https://foursquare.com/FoursquareGuide/list/a-foursquare-history-tour-in-nyc\",\n      \"canonicalPath\": \"/FoursquareGuide/list/a-foursquare-history-tour-in-nyc\",\n      \"createdAt\": 1523638785,\n      \"updatedAt\": 1555356575,\n      \"photo\": {\n        \"id\": \"4fad38e6e4b0348adb9a1f81\",\n        \"createdAt\": 1336752358,\n        \"prefix\": \"https://fastly.4sqi.net/img/general/\",\n        \"suffix\": \"/lzF1d7-k6UyfdeTG7OHoI3htft0ped1oObzkAuPZH1w.jpg\",\n        \"width\": 720,\n        \"height\": 540,\n        \"demoted\": false,\n        \"adminNotes\": [],\n        \"containsFace\": false,\n        \"user\": {\n          \"id\": \"12345\",\n          \"firstName\": \"John\",\n          \"lastName\": \"Smith\",\n          \"handle\": \"johnsmith\",\n          \"privateProfile\": false,\n          \"gender\": \"male\",\n          \"countryCode\": \"US\",\n          \"followingRelationship\": \"none\",\n          \"canonicalUrl\": \"https://foursquare.com/user/12345\",\n          \"canonicalPath\": \"/johnsmith\",\n          \"photo\": {\n            \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n            \"suffix\": \"/blank_boy.png\"\n          },\n          \"isAnonymous\": false\n        },\n        \"visibility\": \"public\"\n      },\n      \"logView\": true,\n      \"guideType\": \"itinerary\",\n      \"guide\": true,\n      \"visitedCount\": 0,\n      \"venueCount\": 10,\n      \"categories\": {\n        \"count\": 4,\n        \"items\": [\n          {\n            \"category\": {\n              \"id\": \"4bf58dd8d48988d116941735\",\n              \"name\": \"Bar\",\n              \"pluralName\": \"Bars\",\n              \"shortName\": \"Bar\",\n              \"icon\": {\n                \"prefix\": \"https://ss3.4sqi.net/img/categories_v2/nightlife/pub_\",\n                \"mapPrefix\": \"https://ss3.4sqi.net/img/categories_map/nightlife/bar\",\n                \"suffix\": \".png\"\n              },\n              \"categoryCode\": 13003\n            },\n            \"count\": 5\n          },\n          {\n            \"category\": {\n              \"id\": \"4bf58dd8d48988d124941735\",\n              \"name\": \"Office\",\n              \"pluralName\": \"Offices\",\n              \"shortName\": \"Office\",\n              \"icon\": {\n                \"prefix\": \"https://ss3.4sqi.net/img/categories_v2/building/default_\",\n                \"mapPrefix\": \"https://ss3.4sqi.net/img/categories_map/building/default\",\n                \"suffix\": \".png\"\n              },\n              \"categoryCode\": 11124\n            },\n            \"count\": 3\n          },\n          {\n            \"category\": {\n              \"id\": \"4bf58dd8d48988d1d0941735\",\n              \"name\": \"Dessert Shop\",\n              \"pluralName\": \"Dessert Shops\",\n              \"shortName\": \"Desserts\",\n              \"icon\": {\n                \"prefix\": \"https://ss3.4sqi.net/img/categories_v2/food/dessert_\",\n                \"mapPrefix\": \"https://ss3.4sqi.net/img/categories_map/food/dessert\",\n                \"suffix\": \".png\"\n              },\n              \"categoryCode\": 13040\n            },\n            \"count\": 1\n          },\n          {\n            \"category\": {\n              \"id\": \"63be6904847c3692a84b9bb6\",\n              \"name\": \"Cafe, Coffee, and Tea House\",\n              \"pluralName\": \"Cafes, Coffee, and Tea Houses\",\n              \"shortName\": \"Cafe, Coffee, and Tea House\",\n              \"icon\": {\n                \"prefix\": \"https://ss3.4sqi.net/img/categories_v2/food/coffeeshop_\",\n                \"mapPrefix\": \"https://ss3.4sqi.net/img/categories_map/food/coffeeshop\",\n                \"suffix\": \".png\"\n              },\n              \"categoryCode\": 13032\n            },\n            \"count\": 1\n          }\n        ]\n      },\n      \"following\": false,\n      \"followers\": {\n        \"count\": 143,\n        \"items\": [\n          {\n            \"id\": \"12345\",\n            \"firstName\": \"John\",\n            \"lastName\": \"Smith\",\n            \"handle\": \"johnsmith\",\n            \"privateProfile\": false,\n            \"gender\": \"male\",\n            \"countryCode\": \"US\",\n            \"followingRelationship\": \"none\",\n            \"canonicalUrl\": \"https://foursquare.com/user/12345\",\n            \"canonicalPath\": \"/johnsmith\",\n            \"photo\": {\n              \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n              \"suffix\": \"/blank_boy.png\"\n            },\n            \"isAnonymous\": false,\n            \"tips\": {\n              \"count\": 15\n            },\n            \"lists\": {\n              \"groups\": [\n                {\n                  \"type\": \"created\",\n                  \"count\": 71,\n                  \"items\": []\n                }\n              ]\n            },\n            \"homeCity\": \"Praha, Česká republika\",\n            \"bio\": \"\",\n            \"contact\": {},\n            \"superuser\": 9\n          },\n          {\n            \"id\": \"12345\",\n            \"firstName\": \"John\",\n            \"lastName\": \"Smith\",\n            \"handle\": \"johnsmith\",\n            \"privateProfile\": false,\n            \"gender\": \"male\",\n            \"countryCode\": \"US\",\n            \"followingRelationship\": \"none\",\n            \"canonicalUrl\": \"https://foursquare.com/user/12345\",\n            \"canonicalPath\": \"/johnsmith\",\n            \"photo\": {\n              \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n              \"suffix\": \"/blank_boy.png\"\n            },\n            \"isAnonymous\": false,\n            \"tips\": {\n              \"count\": 667\n            },\n            \"lists\": {\n              \"groups\": [\n                {\n                  \"type\": \"created\",\n                  \"count\": 13,\n                  \"items\": []\n                }\n              ]\n            },\n            \"homeCity\": \"Winter Haven, Florida\",\n            \"bio\": \"Love exploring new places and making friends. Married to Ryan Larrabee. Here to life blog and make friends.\",\n            \"contact\": {\n              \"facebook\": \"1285570303\"\n            }\n          },\n          {\n            \"id\": \"12345\",\n            \"firstName\": \"John\",\n            \"lastName\": \"Smith\",\n            \"handle\": \"johnsmith\",\n            \"privateProfile\": false,\n            \"gender\": \"male\",\n            \"countryCode\": \"US\",\n            \"followingRelationship\": \"none\",\n            \"canonicalUrl\": \"https://foursquare.com/user/12345\",\n            \"canonicalPath\": \"/johnsmith\",\n            \"photo\": {\n              \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n              \"suffix\": \"/blank_boy.png\"\n            },\n            \"isAnonymous\": false,\n            \"tips\": {\n              \"count\": 1\n            },\n            \"lists\": {\n              \"groups\": [\n                {\n                  \"type\": \"created\",\n                  \"count\": 5,\n                  \"items\": []\n                }\n              ]\n            },\n            \"homeCity\": \"New York, NY\",\n            \"bio\": \"\",\n            \"contact\": {\n              \"twitter\": \"dharathtot\"\n            },\n            \"superuser\": 3\n          },\n          {\n            \"id\": \"12345\",\n            \"firstName\": \"John\",\n            \"lastName\": \"Smith\",\n            \"handle\": \"johnsmith\",\n            \"privateProfile\": false,\n            \"gender\": \"male\",\n            \"countryCode\": \"US\",\n            \"followingRelationship\": \"none\",\n            \"canonicalUrl\": \"https://foursquare.com/user/12345\",\n            \"canonicalPath\": \"/johnsmith\",\n            \"photo\": {\n              \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n              \"suffix\": \"/blank_boy.png\"\n            },\n            \"isAnonymous\": false,\n            \"tips\": {\n              \"count\": 192\n            },\n            \"lists\": {\n              \"groups\": [\n                {\n                  \"type\": \"created\",\n                  \"count\": 48,\n                  \"items\": []\n                }\n              ]\n            },\n            \"homeCity\": \"\",\n            \"bio\": \"Product Manager @ Lyft\",\n            \"contact\": {\n              \"twitter\": \"johnsmith\",\n              \"facebook\": \"1234567890\"\n            },\n            \"superuser\": 8\n          },\n          {\n            \"id\": \"12345\",\n            \"firstName\": \"John\",\n            \"lastName\": \"Smith\",\n            \"handle\": \"johnsmith\",\n            \"privateProfile\": false,\n            \"gender\": \"male\",\n            \"countryCode\": \"US\",\n            \"followingRelationship\": \"none\",\n            \"canonicalUrl\": \"https://foursquare.com/user/12345\",\n            \"canonicalPath\": \"/johnsmith\",\n            \"photo\": {\n              \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n              \"suffix\": \"/blank_boy.png\"\n            },\n            \"isAnonymous\": false,\n            \"tips\": {\n              \"count\": 19\n            },\n            \"lists\": {\n              \"groups\": [\n                {\n                  \"type\": \"created\",\n                  \"count\": 2,\n                  \"items\": []\n                }\n              ]\n            },\n            \"homeCity\": \"Harrison Township, MI\",\n            \"bio\": \"\",\n            \"contact\": {\n            \"facebook\": \"1411655446\"\n            }\n          }\n        ]\n      },\n      \"collaborators\": {\n        \"count\": 0,\n        \"items\": []\n      },\n      \"sort\": \"list-order\",\n      \"listItems\": {\n        \"count\": 10,\n        \"items\": [\n          {\n            \"id\": \"t4e5b9cdcb61c4aaa3e1891e5\",\n            \"createdAt\": 1523639309,\n            \"tip\": {\n              \"id\": \"4e5b9cdcb61c4aaa3e1891e5\",\n              \"createdAt\": 1314626780,\n              \"text\": \"This place was ground zero for the blogger/Gawker scene in 2003-2004 and has always been a big hangout for the early dodgeball.com crowd. My brain is hardwired to use \\\"The Magician\\\" as a test search.\",\n              \"type\": \"user\",\n              \"canonicalUrl\": \"https://foursquare.com/item/4e5b9cdcb61c4aaa3e1891e5\",\n              \"canonicalPath\": \"/item/4e5b9cdcb61c4aaa3e1891e5\",\n              \"likes\": {\n                \"count\": 25,\n                \"groups\": [],\n                \"summary\": \"25 likes\"\n              },\n              \"logView\": true,\n              \"agreeCount\": 29,\n              \"disagreeCount\": 0,\n              \"lastVoteText\": \"Upvoted Sep 18\",\n              \"lastUpvoteTimestamp\": 1695074275,\n              \"todo\": {\n                \"count\": 19\n              },\n              \"saves\": {},\n              \"user\": {\n                \"id\": \"12345\",\n                \"firstName\": \"John\",\n                \"lastName\": \"Smith\",\n                \"handle\": \"johnsmith\",\n                \"privateProfile\": false,\n                \"gender\": \"male\",\n                \"countryCode\": \"US\",\n                \"followingRelationship\": \"none\",\n                \"canonicalUrl\": \"https://foursquare.com/user/12345\",\n                \"canonicalPath\": \"/johnsmith\",\n                \"photo\": {\n                  \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n                  \"suffix\": \"/blank_boy.png\"\n                },\n                \"isAnonymous\": false\n              }\n            },\n            \"photo\": {\n              \"id\": \"5833ae086d632545b11cfbb8\",\n              \"createdAt\": 1479781896,\n              \"prefix\": \"https://fastly.4sqi.net/img/general/\",\n              \"suffix\": \"/47321_C5McLAz3K7HEN7OaemMpdAyoSMp18W0Al0hYqGBw05U.jpg\",\n              \"width\": 1440,\n              \"height\": 1440,\n              \"demoted\": false,\n              \"adminNotes\": [],\n              \"containsFace\": false,\n              \"user\": {\n                \"id\": \"12345\",\n                \"firstName\": \"John\",\n                \"lastName\": \"Smith\",\n                \"handle\": \"johnsmith\",\n                \"privateProfile\": false,\n                \"gender\": \"male\",\n                \"countryCode\": \"US\",\n                \"followingRelationship\": \"none\",\n                \"canonicalUrl\": \"https://foursquare.com/user/12345\",\n                \"canonicalPath\": \"/johnsmith\",\n                \"photo\": {\n                  \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n                  \"suffix\": \"/blank_boy.png\"\n                },\n                \"isAnonymous\": false\n              },\n              \"visibility\": \"public\"\n           },\n            \"venue\": {\n              \"id\": \"3fd66200f964a52005e41ee3\",\n              \"name\": \"The Magician\"\n            },\n            \"index\": 0,\n            \"isNew\": true\n          },\n          {\n            \"id\": \"t4e5bbdd1b61c4aaa3e1a73cb\",\n            \"createdAt\": 1523639463,\n            \"tip\": {\n              \"id\": \"4e5bbdd1b61c4aaa3e1a73cb\",\n              \"createdAt\": 1314635217,\n              \"text\": \"Bleecker Bar may be the home to the very first checkin ever (2001?) One of the orignal use cases from the dodgeball.com days: \\\"I want to know when my friends are at the bar watching a baseball game.\\\"\",\n              \"type\": \"user\",\n              \"canonicalUrl\": \"https://foursquare.com/item/4e5bbdd1b61c4aaa3e1a73cb\",\n              \"canonicalPath\": \"/item/4e5bbdd1b61c4aaa3e1a73cb\",\n              \"likes\": {\n                \"count\": 28,\n                \"groups\": [],\n                \"summary\": \"28 likes\"\n              },\n              \"logView\": true,\n              \"agreeCount\": 37,\n              \"disagreeCount\": 0,\n              \"todo\": {\n                \"count\": 11\n              },\n              \"saves\": {},\n              \"user\": {\n                \"id\": \"12345\",\n                \"firstName\": \"John\",\n                \"lastName\": \"Smith\",\n                \"handle\": \"johnsmith\",\n                \"privateProfile\": false,\n                \"gender\": \"male\",\n                \"countryCode\": \"US\",\n                \"followingRelationship\": \"none\",\n                \"canonicalUrl\": \"https://foursquare.com/user/12345\",\n                \"canonicalPath\": \"/johnsmith\",\n                \"photo\": {\n                  \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n                  \"suffix\": \"/blank_boy.png\"\n                },\n                \"isAnonymous\": false\n              }\n            },\n            \"photo\": {\n              \"id\": \"50b881b2e4b0fb1ae2282efc\",\n              \"createdAt\": 1354269106,\n              \"prefix\": \"https://fastly.4sqi.net/img/general/\",\n              \"suffix\": \"/18841900_C9fYlkpnssWl1qJ7k52G9ssaLBR9vtPNnwDpgLSz4y8.jpg\",\n              \"width\": 540,\n              \"height\": 540,\n              \"demoted\": false,\n              \"adminNotes\": [],\n              \"containsFace\": false,\n              \"user\": {\n                \"id\": \"12345\",\n                \"firstName\": \"John\",\n                \"lastName\": \"Smith\",\n                \"handle\": \"johnsmith\",\n                \"privateProfile\": false,\n                \"gender\": \"male\",\n                \"countryCode\": \"US\",\n                \"followingRelationship\": \"none\",\n                \"canonicalUrl\": \"https://foursquare.com/user/12345\",\n                \"canonicalPath\": \"/johnsmith\",\n                \"photo\": {\n                  \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n                  \"suffix\": \"/blank_boy.png\"\n                },\n                \"isAnonymous\": false\n              },\n              \"visibility\": \"public\"\n            },\n            \"venue\": {\n              \"id\": \"3fd66200f964a520dee51ee3\",\n              \"name\": \"Bleecker Street Bar\"\n            },\n            \"index\": 1,\n            \"isNew\": true\n          },\n          {\n            \"id\": \"t4e5b9ae9b61c4aaa3e1875c8\",\n            \"createdAt\": 1523639322,\n            \"tip\": {\n              \"id\": \"4e5b9ae9b61c4aaa3e1875c8\",\n              \"createdAt\": 1314626281,\n              \"text\": \"This was a go-to during my grad school days at NYU, Ace Bar was always used as the \\\"example\\\" for  dodgeball.com & foursquare use cases. It's still the first place I think of when testing new features.\",\n              \"type\": \"user\",\n              \"canonicalUrl\": \"https://foursquare.com/item/4e5b9ae9b61c4aaa3e1875c8\",\n              \"canonicalPath\": \"/item/4e5b9ae9b61c4aaa3e1875c8\",\n              \"likes\": {\n                \"count\": 37,\n                \"groups\": [],\n                \"summary\": \"37 likes\"\n              },\n              \"logView\": true,\n              \"agreeCount\": 47,\n              \"disagreeCount\": 0,\n              \"todo\": {\n                \"count\": 24\n              },\n              \"saves\": {},\n              \"user\": {\n                \"id\": \"12345\",\n                \"firstName\": \"John\",\n                \"lastName\": \"Smith\",\n                \"handle\": \"johnsmith\",\n                \"privateProfile\": false,\n                \"gender\": \"male\",\n                \"countryCode\": \"US\",\n                \"followingRelationship\": \"none\",\n                \"canonicalUrl\": \"https://foursquare.com/user/12345\",\n                \"canonicalPath\": \"/johnsmith\",\n                \"photo\": {\n                  \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n                  \"suffix\": \"/blank_boy.png\"\n                },\n                \"isAnonymous\": false\n              }\n            },\n            \"photo\": {\n              \"id\": \"5ad0c9156818073466924d26\",\n              \"createdAt\": 1523632405,\n              \"prefix\": \"https://fastly.4sqi.net/img/general/\",\n              \"suffix\": \"/32_B1C4dGLU8q2d3XYG39q8oMU19gIcVUBgqTlUVsNFTtU.png\",\n              \"width\": 2146,\n              \"height\": 1260,\n              \"demoted\": false,\n              \"adminNotes\": [],\n              \"containsFace\": false,\n              \"user\": {\n                \"id\": \"12345\",\n                \"firstName\": \"John\",\n                \"lastName\": \"Smith\",\n                \"handle\": \"johnsmith\",\n                \"privateProfile\": false,\n                \"gender\": \"male\",\n                \"countryCode\": \"US\",\n                \"followingRelationship\": \"none\",\n                \"canonicalUrl\": \"https://foursquare.com/user/12345\",\n                \"canonicalPath\": \"/johnsmith\",\n                \"photo\": {\n                  \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n                  \"suffix\": \"/blank_boy.png\"\n                },\n                \"isAnonymous\": false\n              },\n              \"visibility\": \"public\"\n            },\n            \"venue\": {\n              \"id\": \"3fd66200f964a520f8e41ee3\",\n              \"name\": \"Ace Bar\"\n            },\n            \"index\": 2,\n            \"isNew\": true\n          }\n        ]\n      },\n      \"completedCount\": 0\n    }\n  }\n}\n"
                  }
                },
                "schema": {
                  "description": "Information about a specific list.",
                  "properties": {
                    "description": "List of properties for the response object.",
                    "meta": {
                      "description": "Metadata object containing additional information about the response.",
                      "properties": {
                        "code": {
                          "default": 0,
                          "description": "Status code indicating the result of the API request.",
                          "example": 200,
                          "type": "integer"
                        },
                        "description": "Metadata object containing additional information about the response.",
                        "requestId": {
                          "description": "Unique identifier for the API request.",
                          "example": "654a92f35669622b047c40d4",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "notifications": {
                      "description": "Array of notification objects for a specific list.",
                      "items": {
                        "description": "Array of notification objects containing information about unread items in the response.",
                        "properties": {
                          "description": "Array of notification objects for the specified list.",
                          "item": {
                            "description": "Response object containing the list of notifications for the specified list ID.",
                            "properties": {
                              "description": "Response object containing the retrieved photos and associated user and check-in information for the specified list.",
                              "unreadCount": {
                                "default": 0,
                                "description": "Number of unread items in the notification for the specified list.",
                                "example": 0,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": {
                            "description": "Type of notification for a specific list.",
                            "example": "notificationTray",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "response": {
                      "description": "Response object containing information about the retrieved list.",
                      "properties": {
                        "description": "Response object containing the retrieved data for a specific list.",
                        "list": {
                          "description": "Response object containing the retrieved list information for the specified list ID.",
                          "properties": {
                            "canonicalPath": {
                              "description": "Cannocial path.",
                              "example": "/FoursquareGuide/list/a-foursquare-history-tour-in-nyc",
                              "type": "string"
                            },
                            "canonicalUrl": {
                              "description": "List's canonical URL.",
                              "example": "https://foursquare.com/FoursquareGuide/list/a-foursquare-history-tour-in-nyc",
                              "type": "string"
                            },
                            "categories": {
                              "description": "List of categories associated with a specific list.",
                              "properties": {
                                "count": {
                                  "default": 0,
                                  "description": "Number of categories in the list.",
                                  "example": 4,
                                  "type": "integer"
                                },
                                "description": "List of categories for a given list on Foursquare API.",
                                "items": {
                                  "description": "List of categories for a given list.",
                                  "items": {
                                    "description": "Array of category objects representing the categories associated with the specified list.",
                                    "properties": {
                                      "category": {
                                        "description": "List of categories for a specific list (identified by list ID) with their associated items and their respective properties.",
                                        "properties": {
                                          "description": "Array of category objects for venues in the list.",
                                          "categoryCode": {
                                            "description": "Unique 5-integer style code for the category associated with the given venue ID.",
                                            "type": "string"
                                          },
                                          "icon": {
                                            "description": "List of categories with associated icons for a given list ID from Foursquare API.",
                                            "properties": {
                                              "description": "Category icons for a specific list.",
                                              "mapPrefix": {
                                                "description": "The icon associated with the category of a list item in a specific list, returned as part of a successful response for the requested list ID.",
                                                "example": "https://ss3.4sqi.net/img/categories_map/nightlife/bar",
                                                "type": "string"
                                              },
                                              "prefix": {
                                                "description": "Prefix for categories and their associated icons.",
                                                "example": "https://ss3.4sqi.net/img/categories_v2/nightlife/pub_",
                                                "type": "string"
                                              },
                                              "suffix": {
                                                "description": "The icon suffix for each category.",
                                                "example": ".png",
                                                "type": "string"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "id": {
                                            "description": "Unique identifier for the category associated with a list retrieved by its ID.",
                                            "example": "4bf58dd8d48988d116941735",
                                            "type": "string"
                                          },
                                          "name": {
                                            "description": "The category name for the items belonging to the categories within the list with the specified ID.",
                                            "example": "Bar",
                                            "type": "string"
                                          },
                                          "pluralName": {
                                            "description": "List of categories for a specific list.",
                                            "example": "Bars",
                                            "type": "string"
                                          },
                                          "shortName": {
                                            "description": "A list's categories and their corresponding short names.",
                                            "example": "Bar",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "count": {
                                        "default": 0,
                                        "description": "Number of categories associated with a specific list.",
                                        "example": 5,
                                        "type": "integer"
                                      },
                                      "description": "Array of category objects for the specified list."
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            },
                            "collaborative": {
                              "default": true,
                              "description": "Indicates if the list is collaborative.",
                              "example": false,
                              "type": "boolean"
                            },
                            "collaborators": {
                              "description": "List collaborators for the specified list.",
                              "properties": {
                                "count": {
                                  "default": 0,
                                  "description": "Number of collaborators on a specified list in the response from a successful request to retrieve information about a specific list by list ID.",
                                  "example": 0,
                                  "type": "integer"
                                },
                                "description": "List of collaborators for the specified list.",
                                "items": {
                                  "description": "Array of collaborators for a specific list.",
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            },
                            "completedCount": {
                              "default": 0,
                              "description": "Number of completed items in the specified list.",
                              "example": 0,
                              "type": "integer"
                            },
                            "createdAt": {
                              "default": 0,
                              "description": "The creation date of a specific list; UNIX timestamp in seconds since Epoch.",
                              "example": 1523638785,
                              "type": "integer"
                            },
                            "description": {
                              "example": "The places on this list hold a special place in the history of Foursquare. As we celebrate our 10th anniversary on 4SQDay - 2019, we share these ten places and their significance in our journey.",
                              "type": "string"
                            },
                            "editable": {
                              "default": true,
                              "description": "Whether or not the specified list can be edited by the user.",
                              "example": false,
                              "type": "boolean"
                            },
                            "followers": {
                              "description": "Number of followers for a specific list.",
                              "properties": {
                                "count": {
                                  "default": 0,
                                  "description": "The number of followers of a list retrieved in the response for a successful API request.",
                                  "example": 143,
                                  "type": "integer"
                                },
                                "description": "An array of users who are following the list.",
                                "items": {
                                  "description": "List of users who follow the specified list.",
                                  "items": {
                                    "description": "Array of user objects containing the followers of the list.",
                                    "properties": {
                                      "bio": {
                                        "description": "List of followers' bios for the specified list.",
                                        "example": "",
                                        "type": "string"
                                      },
                                      "canonicalPath": {
                                        "description": "User canonical path.",
                                        "example": "/johnsmith",
                                        "type": "string"
                                      },
                                      "canonicalUrl": {
                                        "description": "User's canonical URL.",
                                        "example": "https://foursquare.com/user/12345",
                                        "type": "string"
                                      },
                                      "contact": {
                                        "description": "List of contacts that follow the specified list.",
                                        "properties": {
                                          "description": "List of contacts who are followers of a specific list."
                                        },
                                        "type": "object"
                                      },
                                      "countryCode": {
                                        "description": "Array of country codes for followers of a list.",
                                        "example": "US",
                                        "type": "string"
                                      },
                                      "description": "List of followers for the specified list.",
                                      "firstName": {
                                        "description": "List of followers' first names for a specific list.",
                                        "example": "John",
                                        "type": "string"
                                      },
                                      "followingRelationship": {
                                        "description": "List of followers of a specific list and their following relationship status.",
                                        "example": "none",
                                        "type": "string"
                                      },
                                      "gender": {
                                        "description": "Retrieves a list of followers' genders for the specified list.",
                                        "example": "male",
                                        "type": "string"
                                      },
                                      "handle": {
                                        "description": "Object containing the handles of followers of a given list.",
                                        "example": "johnsmith",
                                        "type": "string"
                                      },
                                      "homeCity": {
                                        "description": "The followers' home city.",
                                        "example": "Praha, Česká republika",
                                        "type": "string"
                                      },
                                      "id": {
                                        "description": "Unique identifiers for the followers of a list.",
                                        "example": "12345",
                                        "type": "string"
                                      },
                                      "isAnonymous": {
                                        "default": true,
                                        "description": "Boolean indicating if the user who uploaded the photo is anonymous.",
                                        "example": false,
                                        "type": "boolean"
                                      },
                                      "lastName": {
                                        "description": "List of followers' last names for a specific list.",
                                        "example": "Smith",
                                        "type": "string"
                                      },
                                      "lists": {
                                        "description": "List of followers of a list, including nested lists of their own followers.",
                                        "properties": {
                                          "description": "Array of list objects containing information about the followers of the specific list.",
                                          "groups": {
                                            "description": "An array of group objects containing information about the followers of a given list.",
                                            "items": {
                                              "description": "List of groups that are following the owners of the lists contained in the response.",
                                              "properties": {
                                                "count": {
                                                  "default": 0,
                                                  "description": "The number of groups that the followers of a specific list are members of.",
                                                  "example": 71,
                                                  "type": "integer"
                                                },
                                                "description": "List of groups that the followers of a list have created.",
                                                "items": {
                                                  "description": "Array of list objects containing information about the followers of the specified list.",
                                                  "type": "array"
                                                },
                                                "type": {
                                                  "description": "Get a list of the groups associated with the followers of the provided list.",
                                                  "example": "created",
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "photo": {
                                        "description": "List of photos of followers of a specific list for a given list ID.",
                                        "properties": {
                                          "description": "List of followers' photos for a specific list.",
                                          "prefix": {
                                            "description": "Get the prefix for the photos of the followers of the list with the given ID.",
                                            "example": "https://fastly.4sqi.net/img/user/",
                                            "type": "string"
                                          },
                                          "suffix": {
                                            "description": "The suffix for the user's profile photo for each follower in a list with the given ID.",
                                            "example": "/blank_boy.png",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "privateProfile": {
                                        "default": true,
                                        "description": "List of followers for a private profile.",
                                        "example": false,
                                        "type": "boolean"
                                      },
                                      "superuser": {
                                        "default": 0,
                                        "description": "Number of superusers following a specific list.",
                                        "example": 9,
                                        "type": "integer"
                                      },
                                      "tips": {
                                        "description": "Array of tips written by followers of users on the specified list.",
                                        "properties": {
                                          "count": {
                                            "default": 0,
                                            "description": "Number of tips for each user in a list of followers for a given list.",
                                            "example": 15,
                                            "type": "integer"
                                          },
                                          "description": "Array of tip objects containing information about the followers of a list."
                                        },
                                        "type": "object"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            },
                            "following": {
                              "default": true,
                              "description": "Indicates if the user is following the specified list.",
                              "example": false,
                              "type": "boolean"
                            },
                            "guide": {
                              "default": true,
                              "description": "Guide object for the list associated with the given list ID.",
                              "example": true,
                              "type": "boolean"
                            },
                            "guideType": {
                              "description": "The type of guide associated with the list.",
                              "example": "itinerary",
                              "type": "string"
                            },
                            "id": {
                              "description": "Unique identifer.",
                              "example": "5ad0e20146e1b61376729df3",
                              "type": "string"
                            },
                            "listItems": {
                              "description": "List items within the specified list.",
                              "properties": {
                                "count": {
                                  "default": 0,
                                  "description": "The total number of list items in the response for a specific list ID.",
                                  "example": 10,
                                  "type": "integer"
                                },
                                "description": "List items in a specific list.",
                                "items": {
                                  "description": "Array of items contained in the specified list.",
                                  "items": {
                                    "description": "List items within the specified list.",
                                    "properties": {
                                      "createdAt": {
                                        "default": 0,
                                        "description": "Creation date of items in a specific list; UNIX timestamp in seconds since Epoch.",
                                        "example": 1523639309,
                                        "type": "integer"
                                      },
                                      "description": "Array of list items in the specified list.",
                                      "id": {
                                        "description": "Unique identifier for the items in a specific list.",
                                        "example": "t4e5b9cdcb61c4aaa3e1891e5",
                                        "type": "string"
                                      },
                                      "index": {
                                        "default": 0,
                                        "description": "The index of each item.",
                                        "example": 0,
                                        "type": "integer"
                                      },
                                      "isNew": {
                                        "default": true,
                                        "description": "Indicates if the list item is new. ",
                                        "example": true,
                                        "type": "boolean"
                                      },
                                      "photo": {
                                        "description": "List items for photos in a specific list.",
                                        "properties": {
                                          "adminNotes": {
                                            "description": "Array of photo objects containing administrative notes for items in a specific list.",
                                            "type": "array"
                                          },
                                          "containsFace": {
                                            "default": true,
                                            "description": "Flag indicating if the photo in the list item contains a face.",
                                            "example": false,
                                            "type": "boolean"
                                          },
                                          "createdAt": {
                                            "default": 0,
                                            "description": "Time when the photo in the list was created; UNIX timestamp in seconds since Epoch.",
                                            "example": 1479781896,
                                            "type": "integer"
                                          },
                                          "demoted": {
                                            "default": true,
                                            "description": "Demoted photos in list items for a given list id.",
                                            "example": false,
                                            "type": "boolean"
                                          },
                                          "description": "List of photo items in a specific list.",
                                          "height": {
                                            "default": 0,
                                            "description": "Height of photos in a list item on a list retrieved by list ID.",
                                            "example": 1440,
                                            "type": "integer"
                                          },
                                          "id": {
                                            "description": "ID of a photo in a list of items from a specific list.",
                                            "example": "5833ae086d632545b11cfbb8",
                                            "type": "string"
                                          },
                                          "prefix": {
                                            "description": "URL prefix for photo.",
                                            "example": "https://fastly.4sqi.net/img/general/",
                                            "type": "string"
                                          },
                                          "suffix": {
                                            "description": "Array of photo suffixes for items in a list.",
                                            "example": "/47321_C5McLAz3K7HEN7OaemMpdAyoSMp18W0Al0hYqGBw05U.jpg",
                                            "type": "string"
                                          },
                                          "user": {
                                            "description": "List items containing photos and their associated users for a specific list.",
                                            "properties": {
                                              "canonicalPath": {
                                                "description": "User canonical path.",
                                                "example": "/johnsmith",
                                                "type": "string"
                                              },
                                              "canonicalUrl": {
                                                "description": "The user's canonical URL.",
                                                "example": "https://foursquare.com/user/12345",
                                                "type": "string"
                                              },
                                              "countryCode": {
                                                "description": "The country code of the user who uploaded the photo in the list's items.",
                                                "example": "US",
                                                "type": "string"
                                              },
                                              "description": "Array of photo objects containing information about the users who have uploaded photos associated with the list items of a specific list.",
                                              "firstName": {
                                                "description": "First names of users who have uploaded photos in a list item in a list retrieved from a list ID.",
                                                "example": "John",
                                                "type": "string"
                                              },
                                              "followingRelationship": {
                                                "description": "The following relationship of the user who created the list.",
                                                "example": "none",
                                                "type": "string"
                                              },
                                              "gender": {
                                                "description": "Gender information for the users who uploaded the photos in the list items of the specified list.",
                                                "example": "male",
                                                "type": "string"
                                              },
                                              "handle": {
                                                "description": "The user's handle.",
                                                "example": "johnsmith",
                                                "type": "string"
                                              },
                                              "id": {
                                                "description": "Response object containing the list items and associated photos and user information for the specified list ID.",
                                                "example": "12345",
                                                "type": "string"
                                              },
                                              "isAnonymous": {
                                                "default": true,
                                                "description": "Whether the user is anonymous.",
                                                "example": false,
                                                "type": "boolean"
                                              },
                                              "lastName": {
                                                "description": "User last name.",
                                                "example": "Smith",
                                                "type": "string"
                                              },
                                              "photo": {
                                                "description": "List items containing photos with user information.",
                                                "properties": {
                                                  "description": "Response object containing an array of photo objects for the specified list, including user and venue information.",
                                                  "prefix": {
                                                    "description": "URL prefix.",
                                                    "example": "https://fastly.4sqi.net/img/user/",
                                                    "type": "string"
                                                  },
                                                  "suffix": {
                                                    "description": "URL suffix.",
                                                    "example": "/blank_boy.png",
                                                    "type": "string"
                                                  }
                                                },
                                                "type": "object"
                                              },
                                              "privateProfile": {
                                                "default": true,
                                                "description": "Object containing information about the user's private profile in the list items associated with a specific list.",
                                                "example": false,
                                                "type": "boolean"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "visibility": {
                                            "description": "Photo visibility status.",
                                            "example": "public",
                                            "type": "string"
                                          },
                                          "width": {
                                            "default": 0,
                                            "description": "The width of the photo associated with each item.",
                                            "example": 1440,
                                            "type": "integer"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "tip": {
                                        "description": "List items containing tips for a specific list.",
                                        "properties": {
                                          "agreeCount": {
                                            "default": 0,
                                            "description": "Number of users who have agreed with this tip.",
                                            "example": 29,
                                            "type": "integer"
                                          },
                                          "canonicalPath": {
                                            "description": "Canonical path.",
                                            "example": "/item/4e5b9cdcb61c4aaa3e1891e5",
                                            "type": "string"
                                          },
                                          "canonicalUrl": {
                                            "description": "The canonical URL for each item.",
                                            "example": "https://foursquare.com/item/4e5b9cdcb61c4aaa3e1891e5",
                                            "type": "string"
                                          },
                                          "createdAt": {
                                            "default": 0,
                                            "description": "Creation date of tips for a list item in a given list; UNIX timestamp in seconds since Epoch.",
                                            "example": 1314626780,
                                            "type": "integer"
                                          },
                                          "description": "List items containing tips for a specific list.",
                                          "disagreeCount": {
                                            "default": 0,
                                            "description": "Number of users who disagreed with the tip associated with a specific item in a user-created list.",
                                            "example": 0,
                                            "type": "integer"
                                          },
                                          "id": {
                                            "description": "List items in a specified list associated with a particular venue ID.",
                                            "example": "4e5b9cdcb61c4aaa3e1891e5",
                                            "type": "string"
                                          },
                                          "lastUpvoteTimestamp": {
                                            "default": 0,
                                            "description": "Last upvote timestamp for tips in a list item.",
                                            "example": 1695074275,
                                            "type": "integer"
                                          },
                                          "lastVoteText": {
                                            "description": "Last vote text for tips on a specific list belonging to a user.",
                                            "example": "Upvoted Sep 18",
                                            "type": "string"
                                          },
                                          "likes": {
                                            "description": "List of likes for tips associated with items in a list.",
                                            "properties": {
                                              "count": {
                                                "default": 0,
                                                "description": "The number of likes for tips associated with items within a list.",
                                                "example": 25,
                                                "type": "integer"
                                              },
                                              "description": "Array of user objects representing the users who have liked the tip associated with the list item.",
                                              "groups": {
                                                "description": "Array of groups that have liked tips associated with items in the list items of a specific list.",
                                                "type": "array"
                                              },
                                              "summary": {
                                                "description": "Response object containing information about the likes summary for tips in a specific list.",
                                                "example": "25 likes",
                                                "type": "string"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "logView": {
                                            "default": true,
                                            "description": "The logView property for tips.",
                                            "example": true,
                                            "type": "boolean"
                                          },
                                          "saves": {
                                            "description": "Number of users who have saved the tips in the specified list.",
                                            "properties": {
                                              "description": "Array of saved tips associated with the specified list."
                                            },
                                            "type": "object"
                                          },
                                          "text": {
                                            "description": "Description of the properties of a list item's tip text.",
                                            "example": "This place was ground zero for the blogger/Gawker scene in 2003-2004 and has always been a big hangout for the early dodgeball.com crowd. My brain is hardwired to use \"The Magician\" as a test search.",
                                            "type": "string"
                                          },
                                          "todo": {
                                            "description": "List of items to do for a specific list within a user's account.",
                                            "properties": {
                                              "count": {
                                                "default": 0,
                                                "description": "Number of to-do items associated with a tip in a list.",
                                                "example": 19,
                                                "type": "integer"
                                              },
                                              "description": "List of to-do items associated with a specific list on Foursquare."
                                            },
                                            "type": "object"
                                          },
                                          "type": {
                                            "description": "The type of tip for the specified list item in the specified list.",
                                            "example": "user",
                                            "type": "string"
                                          },
                                          "user": {
                                            "description": "Information on the user who created the tip.",
                                            "properties": {
                                              "canonicalPath": {
                                                "description": "A single list item's tip user's canonical path from a successful response to a request for a list with a given ID.",
                                                "example": "/johnsmith",
                                                "type": "string"
                                              },
                                              "canonicalUrl": {
                                                "description": "The canonical URL for the user who created the tip.",
                                                "example": "https://foursquare.com/user/12345",
                                                "type": "string"
                                              },
                                              "countryCode": {
                                                "description": "The countryCode of the user who created the tip on the list item retrieved from the specified list.",
                                                "example": "US",
                                                "type": "string"
                                              },
                                              "description": "Information about the users who created them.",
                                              "firstName": {
                                                "description": "Response object containing the first name of the user who created a tip for an item in the list associated with the given list ID.",
                                                "example": "John",
                                                "type": "string"
                                              },
                                              "followingRelationship": {
                                                "description": "The following relationships for the tips of list items of a specific list owned by a user.",
                                                "example": "none",
                                                "type": "string"
                                              },
                                              "gender": {
                                                "description": "User gender.",
                                                "example": "male",
                                                "type": "string"
                                              },
                                              "handle": {
                                                "description": "User handle.",
                                                "example": "johnsmith",
                                                "type": "string"
                                              },
                                              "id": {
                                                "description": "The unique identifiers for a specific list.",
                                                "example": "12345",
                                                "type": "string"
                                              },
                                              "isAnonymous": {
                                                "default": true,
                                                "description": "Flag indicating if the user who created the tip associated with the list item is anonymous.",
                                                "example": false,
                                                "type": "boolean"
                                              },
                                              "lastName": {
                                                "description": "The user's last name associated with each tip.",
                                                "example": "Smith",
                                                "type": "string"
                                              },
                                              "photo": {
                                                "description": "Photos for tips.",
                                                "properties": {
                                                  "description": "List items containing tips from users with their associated photos.",
                                                  "prefix": {
                                                    "description": "URL photo prefix.",
                                                    "example": "https://fastly.4sqi.net/img/user/",
                                                    "type": "string"
                                                  },
                                                  "suffix": {
                                                    "description": "URL photo suffix.",
                                                    "example": "/blank_boy.png",
                                                    "type": "string"
                                                  }
                                                },
                                                "type": "object"
                                              },
                                              "privateProfile": {
                                                "default": true,
                                                "description": "Private tip user profiles for items in a list within a specified list ID.",
                                                "example": false,
                                                "type": "boolean"
                                              }
                                            },
                                            "type": "object"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "venue": {
                                        "description": "Array of venue objects contained in the list items of the list.",
                                        "properties": {
                                          "description": "Array of items associated with the list, including venue details.",
                                          "id": {
                                            "description": "Unique identifiers for the venues associated with the list items in the list with the specified ID.",
                                            "example": "3fd66200f964a52005e41ee3",
                                            "type": "string"
                                          },
                                          "name": {
                                            "description": "The name of the venues associated with the items contained in the list with the given ID.",
                                            "example": "The Magician",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            },
                            "logView": {
                              "default": true,
                              "description": "Details about the log view for a specific list.",
                              "example": true,
                              "type": "boolean"
                            },
                            "name": {
                              "description": "The name of the list associated with the specified ID.",
                              "example": "A Foursquare history tour in NYC",
                              "type": "string"
                            },
                            "photo": {
                              "description": "Response object containing the retrieved photos for a specific list.",
                              "properties": {
                                "adminNotes": {
                                  "description": "Array of admin notes for photos in a specific list.",
                                  "type": "array"
                                },
                                "containsFace": {
                                  "default": true,
                                  "description": "Whether or not the photo associated with the given list contains a person's face.",
                                  "example": false,
                                  "type": "boolean"
                                },
                                "createdAt": {
                                  "default": 0,
                                  "description": "The timestamp indicating when the photo was created for the given list; UNIX timestamp in seconds since Epoch.",
                                  "example": 1336752358,
                                  "type": "integer"
                                },
                                "demoted": {
                                  "default": true,
                                  "description": "Flag indicating if the photo associated with the list has been demoted.",
                                  "example": false,
                                  "type": "boolean"
                                },
                                "description": "List of photos associated with a specific list.",
                                "height": {
                                  "default": 0,
                                  "description": "Height of the photo associated with the requested list.",
                                  "example": 540,
                                  "type": "integer"
                                },
                                "id": {
                                  "description": "The photo ID.",
                                  "example": "4fad38e6e4b0348adb9a1f81",
                                  "type": "string"
                                },
                                "prefix": {
                                  "description": "Prefix for the photo URL of the list associated with the given list ID.",
                                  "example": "https://fastly.4sqi.net/img/general/",
                                  "type": "string"
                                },
                                "suffix": {
                                  "description": "URL Photo suffix.",
                                  "example": "/lzF1d7-k6UyfdeTG7OHoI3htft0ped1oObzkAuPZH1w.jpg",
                                  "type": "string"
                                },
                                "user": {
                                  "description": "User profile photo for a specific list on Foursquare.",
                                  "properties": {
                                    "canonicalPath": {
                                      "description": "The canonical path for the user's photo in a given list.",
                                      "example": "/johnsmith",
                                      "type": "string"
                                    },
                                    "canonicalUrl": {
                                      "description": "Canonical URL for the specified list.",
                                      "example": "https://foursquare.com/user/12345",
                                      "type": "string"
                                    },
                                    "countryCode": {
                                      "description": "Country code.",
                                      "example": "US",
                                      "type": "string"
                                    },
                                    "description": "User information for photos belonging to a specific list.",
                                    "firstName": {
                                      "description": "First name of the user who uploaded a photo for a specific list.",
                                      "example": "John",
                                      "type": "string"
                                    },
                                    "followingRelationship": {
                                      "description": "Retrieve the following relationship for a user's photo in a list.",
                                      "example": "none",
                                      "type": "string"
                                    },
                                    "gender": {
                                      "description": "The gender of the user who uploaded a photo.",
                                      "example": "male",
                                      "type": "string"
                                    },
                                    "handle": {
                                      "description": "The handle of the user who uploaded the photo associated with the specified list.",
                                      "example": "johnsmith",
                                      "type": "string"
                                    },
                                    "id": {
                                      "description": "Response object containing the user's unique identifier for the specified list's photo.",
                                      "example": "12345",
                                      "type": "string"
                                    },
                                    "isAnonymous": {
                                      "default": true,
                                      "description": "Flag indicating if the user who uploaded the photo associated with the list is anonymous.",
                                      "example": false,
                                      "type": "boolean"
                                    },
                                    "lastName": {
                                      "description": "Last name of the user who uploaded a photo in a list response.",
                                      "example": "Smith",
                                      "type": "string"
                                    },
                                    "photo": {
                                      "description": "Photo object for the user who uploaded the photo associated with a specific list.",
                                      "properties": {
                                        "description": "Photo information for the user who uploaded the photo associated with the specified list.",
                                        "prefix": {
                                          "description": "The prefix for a photo associated with a user in a specific list.",
                                          "example": "https://fastly.4sqi.net/img/user/",
                                          "type": "string"
                                        },
                                        "suffix": {
                                          "description": "Photo suffix for the user who uploaded the photo in the list retrieved from the specified list ID.",
                                          "example": "/blank_boy.png",
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "privateProfile": {
                                      "default": true,
                                      "description": "Indicates if the user's profile is private for the photo associated with the specified list.",
                                      "example": false,
                                      "type": "boolean"
                                    }
                                  },
                                  "type": "object"
                                },
                                "visibility": {
                                  "description": "The visibility property of the photo belonging to the list with the given ID.",
                                  "example": "public",
                                  "type": "string"
                                },
                                "width": {
                                  "default": 0,
                                  "description": "Width of the photo associated with the specified list.",
                                  "example": 720,
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            },
                            "public": {
                              "default": true,
                              "description": "Flag indicating whether the specified list is public.",
                              "example": true,
                              "type": "boolean"
                            },
                            "sort": {
                              "description": "The sorting method used for the specified list.",
                              "example": "list-order",
                              "type": "string"
                            },
                            "type": {
                              "description": "Type of list retrieved from the given list ID.",
                              "example": "others",
                              "type": "string"
                            },
                            "updatedAt": {
                              "default": 0,
                              "description": "List's updated at timestamp for a specific list ID; UNIX timestamp in seconds since Epoch.",
                              "example": 1555356575,
                              "type": "integer"
                            },
                            "url": {
                              "description": "Response property for the URL of a specific list.",
                              "example": "/FoursquareGuide/list/a-foursquare-history-tour-in-nyc",
                              "type": "string"
                            },
                            "user": {
                              "description": "Object containing information about the user who created the list.",
                              "properties": {
                                "canonicalPath": {
                                  "description": "Canonical path for a given list within a successful response.",
                                  "example": "/FoursquareGuide",
                                  "type": "string"
                                },
                                "canonicalUrl": {
                                  "description": "The canonical URL for the list's user.",
                                  "example": "https://foursquare.com/p/foursquare-city-guide/23438729",
                                  "type": "string"
                                },
                                "countryCode": {
                                  "description": "The country code of the user who created the list specified by the given list ID.",
                                  "example": "US",
                                  "type": "string"
                                },
                                "description": "User object containing information about the user who created the specified list.",
                                "firstName": {
                                  "description": "The first name of the user associated with a specific list.",
                                  "example": "Foursquare City Guide",
                                  "type": "string"
                                },
                                "followingRelationship": {
                                  "description": "Information about the user's following relationship.",
                                  "example": "none",
                                  "type": "string"
                                },
                                "gender": {
                                  "description": "The gender of the user who created the list with the specified ID.",
                                  "example": "none",
                                  "type": "string"
                                },
                                "handle": {
                                  "description": "The handle of the user who created the list with the specified ID.",
                                  "example": "FoursquareGuide",
                                  "type": "string"
                                },
                                "id": {
                                  "description": "The unique identifier for the user who created the specified list.",
                                  "example": "23438729",
                                  "type": "string"
                                },
                                "isAnonymous": {
                                  "default": true,
                                  "description": "Flag indicating if the user who created the list is anonymous.",
                                  "example": false,
                                  "type": "boolean"
                                },
                                "photo": {
                                  "description": "Unique identifier for the user's profile photo.",
                                  "properties": {
                                    "description": "Response object containing the photo of the user who created the specified list.",
                                    "prefix": {
                                      "description": "The prefix for the profile photo URL of the user.",
                                      "example": "https://fastly.4sqi.net/img/user/",
                                      "type": "string"
                                    },
                                    "suffix": {
                                      "description": "The suffix for the profile photo of the user who created the specified list.",
                                      "example": "/23438729-TODURDIUDUMY4JF5.png",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "privateProfile": {
                                  "default": true,
                                  "description": "Boolean indicating if the user's profile is private for the specified list.",
                                  "example": false,
                                  "type": "boolean"
                                },
                                "type": {
                                  "description": "The type of user associated with a list.",
                                  "example": "page",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "venueCount": {
                              "default": 0,
                              "description": "Number of venues in the retrieved list.",
                              "example": 10,
                              "type": "integer"
                            },
                            "visitedCount": {
                              "default": 0,
                              "description": "The number of times the list has been visited.",
                              "example": 0,
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "200"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "description": "Bad Request: Indicates that the request was invalid or missing required parameters.",
                  "properties": {
                    "description": "Error properties for bad request when retrieving a specific list by ID."
                  },
                  "type": "object"
                }
              }
            },
            "description": "400"
          }
        },
        "security": [
          {
            "ManagedUserTokenAuth": []
          }
        ],
        "summary": "Get List Details",
        "tags": [
          "Lists"
        ]
      }
    },
    "/lists/{list_id}/additem": {
      "post": {
        "deprecated": false,
        "description": "Add an item to the list, if the acting user is the author or the owner of the list.",
        "operationId": "add-item-to-list",
        "parameters": [
          {
            "description": "The ID of the list to be acted upon.",
            "in": "path",
            "name": "list_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The API version date as documented [here](/reference/versioning); e.g. 20231010",
            "in": "query",
            "name": "v",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The venue you want to add to the list; e.g., Foursquare HQ's venue_id = 5a187743ccad6b307315e6fe",
            "in": "query",
            "name": "venueId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional text provided as a tip; applicable only when specifying a venue ID.",
            "in": "query",
            "name": "text",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"meta\": {\n    \"code\": 200,\n    \"requestId\": \"6418ee246d5b3b4c674f93a6\"\n  },\n  \"notifications\": [\n    {\n      \"type\": \"notificationTray\",\n      \"item\": {\n        \"unreadCount\": 0\n      }\n    }\n  ],\n  \"response\": {\n    \"item\": {\n      \"id\": \"v552327e9498e46856f3ed445\",\n      \"venue\": {\n        \"id\": \"552327e9498e46856f3ed445\",\n        \"name\": \"Conto's Pizza & Pasta\"}\n    }\n  }\n}"
                  }
                },
                "schema": {
                  "description": "Adds an item to a list.",
                  "properties": {
                    "description": "Response object containing the retrieved data for adding an item to a list.",
                    "meta": {
                      "description": "Metadata object containing additional information about the response.",
                      "properties": {
                        "code": {
                          "default": 0,
                          "description": "The status code for the successful addition of an item to a list.",
                          "example": 200,
                          "type": "integer"
                        },
                        "description": "Metadata object for successful addition of an item to a list.",
                        "requestId": {
                          "description": "Unique identifier for the API request.",
                          "example": "6418ee246d5b3b4c674f93a6",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "notifications": {
                      "description": "Array of notification objects for a successful request to add items to a list.",
                      "items": {
                        "description": "Array of notification objects for a successful request to add an item to a list.",
                        "properties": {
                          "description": "An array of notification objects containing information about the number of unread items in the notification tray for a list item addition.",
                          "item": {
                            "description": "The response object containing an array of notification objects for adding an item to a list, with properties for the items in the notifications array.",
                            "properties": {
                              "description": "Array of notification objects containing information about the added item.",
                              "unreadCount": {
                                "default": 0,
                                "description": "Number of unread items in notification for adding an item to a list.",
                                "example": 0,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": {
                            "description": "Type of notification for successful addition of item to a list. ",
                            "example": "notificationTray",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "response": {
                      "description": "Response object containing the retrieved data for adding an item to a list.",
                      "properties": {
                        "description": "Properties of a successful response to adding an item to a list.",
                        "item": {
                          "description": "The property \"item\" in the response object for a successful request to add an item to a specific list.",
                          "properties": {
                            "description": "Information about the added item.",
                            "id": {
                              "description": "The item's unique identifier.",
                              "example": "v552327e9498e46856f3ed445",
                              "type": "string"
                            },
                            "venue": {
                              "description": "Venue object containing information about the added item in the list.",
                              "properties": {
                                "description": "Information about the added item's associated venue.",
                                "id": {
                                  "description": "The venue ID.",
                                  "example": "552327e9498e46856f3ed445",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "The name of the associated venue.",
                                  "example": "Conto's Pizza & Pasta",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "200"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "description": "The response if the API request to add an item to a list with the given ID fails with a 400 error.",
                  "properties": {
                    "description": "List of properties related to the response for a failed request to add an item to a list, with a status code of 400 indicating a bad request. "
                  },
                  "type": "object"
                }
              }
            },
            "description": "400"
          }
        },
        "security": [
          {
            "ManagedUserTokenAuth": []
          }
        ],
        "summary": "Add List Item",
        "tags": [
          "Lists"
        ]
      }
    },
    "/lists/{list_id}/delete": {
      "post": {
        "deprecated": false,
        "description": "Delete a list, if the acting user is the owner of the list.",
        "operationId": "delete-a-list",
        "parameters": [
          {
            "description": "The ID of the list to be acted upon.",
            "in": "path",
            "name": "list_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The API version date as documented [here](/reference/versioning); e.g. 20231010",
            "in": "query",
            "name": "v",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"meta\": {\n    \"code\": 200,\n    \"requestId\": \"6418cb0b6d5b3b4c67af1bde\"\n  },\n  \"notifications\": [\n    {\n      \"type\": \"notificationTray\",\n      \"item\": {\n        \"unreadCount\": 0\n      }\n    }\n  ],\n  \"response\": {}\n}"
                  }
                },
                "schema": {
                  "description": "Deletes a specified list and returns a response.",
                  "properties": {
                    "description": "Object containing metadata and response data for a successful deletion of a list.",
                    "meta": {
                      "description": "Metadata object for successful deletion of a list.",
                      "properties": {
                        "code": {
                          "default": 0,
                          "description": "Status code indicating the result of the API request for deleting a list with the given id.",
                          "example": 200,
                          "type": "integer"
                        },
                        "description": "Metadata object containing additional information about the successful deletion of a list.",
                        "requestId": {
                          "description": "The unique identifier for the API request.",
                          "example": "6418cb0b6d5b3b4c67af1bde",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "notifications": {
                      "description": "Array of notification objects containing information about the success of the deletion of a list.",
                      "items": {
                        "description": "Array of notification objects for the successful deletion of a list item.",
                        "properties": {
                          "description": "Notification objects for the deleted post in the specified list.",
                          "item": {
                            "description": "List of notifications for the item that was successfully deleted from the specified list.",
                            "properties": {
                              "description": "Information about the notification items associated with the deleted list, including the individual item properties.",
                              "unreadCount": {
                                "default": 0,
                                "description": "Number of unread items in a notification for a successful deletion of a list.",
                                "example": 0,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": {
                            "description": "The type of notification.",
                            "example": "notificationTray",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "response": {
                      "description": "Response object for successful deletion of a list.",
                      "properties": {
                        "description": "Response object containing information about the success of the deletion request."
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "200"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "description": "Bad request error response object for deleting a list.",
                  "properties": {
                    "description": "400 status code indicating a bad request when attempting to delete a list."
                  },
                  "type": "object"
                }
              }
            },
            "description": "400"
          }
        },
        "security": [
          {
            "ManagedUserTokenAuth": []
          }
        ],
        "summary": "Delete List",
        "tags": [
          "Lists"
        ]
      }
    },
    "/lists/{list_id}/deleteitem": {
      "post": {
        "deprecated": false,
        "description": "Delete an item to the list, if the acting user is the author or the owner of the list.",
        "operationId": "delete-item-from-list",
        "parameters": [
          {
            "description": "The ID of the list to be acted upon.",
            "in": "path",
            "name": "list_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The API version date as documented [here](/reference/versioning); e.g. 20231010",
            "in": "query",
            "name": "v",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The venue you want to add to the list; e.g., Foursquare HQ's venue_id = 5a187743ccad6b307315e6fe",
            "in": "query",
            "name": "venueId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional text provided as a tip; applicable only when specifying a venue ID.",
            "in": "query",
            "name": "text",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"meta\": {\n    \"code\": 200,\n    \"requestId\": \"6418ef863b62b02d0473f813\"\n  },\n  \"notifications\": [\n    {\n      \"type\": \"notificationTray\",\n      \"item\": {\n        \"unreadCount\": 0\n      }\n    }\n  ],\n  \"response\": {\n    \"items\": {\n      \"count\": 1,\n      \"items\": [\n        {\n          \"id\": \"v552327e9498e46856f3ed445\",\n          \"venue\": {\n            \"id\": \"552327e9498e46856f3ed445\",\n            \"name\": \"Conto's Pizza & Pasta\"}\n        }\n      ]\n    }\n  }\n}"
                  }
                },
                "schema": {
                  "description": "Deletes an item from a list successfully.",
                  "properties": {
                    "description": "Delete item from a list success response.",
                    "meta": {
                      "description": "Response metadata for successful deletion of an item from a list.",
                      "properties": {
                        "code": {
                          "default": 0,
                          "description": "Status code indicating the result of the list item deletion API request.",
                          "example": 200,
                          "type": "integer"
                        },
                        "description": "Response object containing the metadata for the success of deleting an item from a list.",
                        "requestId": {
                          "description": "The unique identifier for the API request.",
                          "example": "6418ef863b62b02d0473f813",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "notifications": {
                      "description": "Array of notification objects for successful deletion of an item from a list.",
                      "items": {
                        "description": "Array of notification objects for the deleted item.",
                        "properties": {
                          "description": "Array of notification objects for a successful deletion of an item from a list in the notification tray.",
                          "item": {
                            "description": "Array of notification objects containing information about deleted items in the specified list.",
                            "properties": {
                              "description": "Delete item from a specific list and return a 200 response with notification and item properties.",
                              "unreadCount": {
                                "default": 0,
                                "description": "Number of unread items in the notification for a successful response when deleting an item from a specific list.",
                                "example": 0,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": {
                            "description": "Notification type.",
                            "example": "notificationTray",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "response": {
                      "description": "Response object for successful deletion of an item from a specified list.",
                      "properties": {
                        "description": "Properties of the response object for a successful deletion of an item from a list.",
                        "items": {
                          "description": "Item deletion response for the specified list, with information on the deleted items.",
                          "properties": {
                            "count": {
                              "default": 0,
                              "description": "Number of items deleted from the specified list.",
                              "example": 1,
                              "type": "integer"
                            },
                            "description": "Array of properties for the items in the response of deleting an item from a list.",
                            "items": {
                              "description": "Array of items that were successfully deleted from the specified list.",
                              "items": {
                                "description": "The response from deleting an item from a list contains an array of items.",
                                "properties": {
                                  "description": "List of items that were successfully deleted from the specified list.",
                                  "id": {
                                    "description": "The unique identifier for each deleted item.",
                                    "example": "v552327e9498e46856f3ed445",
                                    "type": "string"
                                  },
                                  "venue": {
                                    "description": "Array of venue objects associated with the deleted item.",
                                    "properties": {
                                      "description": "Array of venues associated with the deleted item in the specified list.",
                                      "id": {
                                        "description": "Venue ID.",
                                        "example": "552327e9498e46856f3ed445",
                                        "type": "string"
                                      },
                                      "name": {
                                        "description": "Venue name.",
                                        "example": "Conto's Pizza & Pasta",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "200"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "description": "Bad request error response for deleting an item from a specific list.",
                  "properties": {
                    "description": "Delete item from a list."
                  },
                  "type": "object"
                }
              }
            },
            "description": "400"
          }
        },
        "security": [
          {
            "ManagedUserTokenAuth": []
          }
        ],
        "summary": "Delete List Item",
        "tags": [
          "Lists"
        ]
      }
    },
    "/lists/{list_id}/suggestvenues": {
      "get": {
        "deprecated": false,
        "description": "Retrieve venue suggestions related to current list venues.",
        "operationId": "suggest-venues-for-a-list",
        "parameters": [
          {
            "description": "The ID of the list to be acted upon.",
            "in": "path",
            "name": "list_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The API version date as documented [here](/reference/versioning); e.g. 20231010",
            "in": "query",
            "name": "v",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"meta\": {\n        \"code\": 200,\n        \"requestId\": \"654a784242dc4f7a64be4c8c\"\n    },\n    \"notifications\": [\n        {\n            \"type\": \"notificationTray\",\n            \"item\": {\n                \"unreadCount\": 0\n            }\n        }\n    ],\n    \"response\": {\n        \"suggestedVenues\": [\n            {\n                \"venue\": {\n                    \"id\": \"582dce98fd27163e8350257f\",\n                    \"name\": \"Soft Swerve Ice Cream\",\n                    \"location\": {\n                        \"address\": \"85B Allen St\",\n                        \"crossStreet\": \"btwn Grand & Broome St\",\n                        \"lat\": 40.718086955112945,\n                        \"lng\": -73.991021414639,\n                        \"labeledLatLngs\": [\n                            {\n                                \"label\": \"display\",\n                                \"lat\": 40.718086955112945,\n                                \"lng\": -73.991021414639\n                            }\n                        ],\n                        \"postalCode\": \"10002\",\n                        \"cc\": \"US\",\n                        \"city\": \"New York\",\n                        \"state\": \"NY\",\n                        \"country\": \"United States\",\n                        \"formattedAddress\": [\n                            \"85B Allen St (btwn Grand & Broome St)\",\n                            \"New York, NY 10002\"\n                        ]\n                    },\n                    \"categories\": [\n                        {\n                            \"id\": \"4bf58dd8d48988d1c9941735\",\n                            \"name\": \"Ice Cream Parlor\",\n                            \"pluralName\": \"Ice Cream Parlors\",\n                            \"shortName\": \"Ice Cream\",\n                            \"icon\": {\n                                \"prefix\": \"https://ss3.4sqi.net/img/categories_v2/food/icecream_\",\n                                \"suffix\": \".png\"\n                            },\n                            \"primary\": true\n                        }\n                    ],\n                    \"delivery\": {\n                        \"id\": \"1086089\",\n                        \"url\": \"https://www.seamless.com/menu/soft-swerve-ice-cream-85-allen-st-new-york/1086089?affiliate=1131&utm_source=foursquare-affiliate-network&utm_medium=affiliate&utm_campaign=1131&utm_content=1086089\",\n                        \"provider\": {\n                            \"name\": \"seamless\",\n                            \"icon\": {\n                                \"prefix\": \"https://fastly.4sqi.net/img/general/cap/\",\n                                \"sizes\": [\n                                    40,\n                                    50\n                                ],\n                                \"name\": \"/delivery_provider_seamless_20180129.png\"\n                            }\n                        }\n                    },\n                    \"createdAt\": 1479397016\n                },\n                \"checkins\": 0\n            },\n            {\n                \"venue\": {\n                    \"id\": \"59ac838a5161136b7746660f\",\n                    \"name\": \"Stax Ice Cream\",\n                    \"location\": {\n                        \"address\": \"279 Grand St\",\n                        \"crossStreet\": \"btwn Forsyth & Eldridge Sts\",\n                        \"lat\": 40.71782247205542,\n                        \"lng\": -73.992729429588,\n                        \"labeledLatLngs\": [\n                            {\n                                \"label\": \"display\",\n                                \"lat\": 40.71782247205542,\n                                \"lng\": -73.992729429588\n                            },\n                            {\n                                \"label\": \"entrance\",\n                                \"lat\": 40.717704,\n                                \"lng\": -73.992736\n                            }\n                        ],\n                        \"postalCode\": \"10002\",\n                        \"cc\": \"US\",\n                        \"city\": \"New York\",\n                        \"state\": \"NY\",\n                        \"country\": \"United States\",\n                        \"formattedAddress\": [\n                            \"279 Grand St (btwn Forsyth & Eldridge Sts)\",\n                            \"New York, NY 10002\"\n                        ]\n                    },\n                    \"categories\": [\n                        {\n                            \"id\": \"4bf58dd8d48988d1c9941735\",\n                            \"name\": \"Ice Cream Parlor\",\n                            \"pluralName\": \"Ice Cream Parlors\",\n                            \"shortName\": \"Ice Cream\",\n                            \"icon\": {\n                                \"prefix\": \"https://ss3.4sqi.net/img/categories_v2/food/icecream_\",\n                                \"suffix\": \".png\"\n                            },\n                            \"primary\": true\n                        }\n                    ],\n                    \"venuePage\": {\n                        \"id\": \"442132269\"\n                    },\n                    \"createdAt\": 1504478090\n                },\n                \"checkins\": 0\n            },\n            {\n                \"venue\": {\n                    \"id\": \"4cd5f138aeb1224b77be25ff\",\n                    \"name\": \"Il Laboratorio del Gelato\",\n                    \"location\": {\n                        \"address\": \"188 Ludlow St\",\n                        \"crossStreet\": \"at E Houston St\",\n                        \"lat\": 40.722222,\n                        \"lng\": -73.987038,\n                        \"labeledLatLngs\": [\n                            {\n                                \"label\": \"display\",\n                                \"lat\": 40.722222,\n                                \"lng\": -73.987038\n                            },\n                            {\n                                \"label\": \"entrance\",\n                                \"lat\": 40.722125,\n                                \"lng\": -73.987205\n                            }\n                        ],\n                        \"postalCode\": \"10002\",\n                        \"cc\": \"US\",\n                        \"city\": \"New York\",\n                        \"state\": \"NY\",\n                        \"country\": \"United States\",\n                        \"formattedAddress\": [\n                            \"188 Ludlow St (at E Houston St)\",\n                            \"New York, NY 10002\"\n                        ]\n                    },\n                    \"categories\": [\n                        {\n                            \"id\": \"4bf58dd8d48988d1c9941735\",\n                            \"name\": \"Ice Cream Parlor\",\n                            \"pluralName\": \"Ice Cream Parlors\",\n                            \"shortName\": \"Ice Cream\",\n                            \"icon\": {\n                                \"prefix\": \"https://ss3.4sqi.net/img/categories_v2/food/icecream_\",\n                                \"suffix\": \".png\"\n                            },\n                            \"primary\": true\n                        }\n                    ],\n                    \"venuePage\": {\n                        \"id\": \"99503910\"\n                    },\n                    \"createdAt\": 1289089336\n                },\n                \"checkins\": 0\n            },\n            {\n                \"venue\": {\n                    \"id\": \"579607a3498e62c81b38aa75\",\n                    \"name\": \"Taiyaki NYC\",\n                    \"location\": {\n                        \"address\": \"119 Baxter St\",\n                        \"crossStreet\": \"btwn Canal & Hester St\",\n                        \"lat\": 40.717944548273124,\n                        \"lng\": -73.99894952774048,\n                        \"labeledLatLngs\": [\n                            {\n                                \"label\": \"display\",\n                                \"lat\": 40.717944548273124,\n                                \"lng\": -73.99894952774048\n                            }\n                        ],\n                        \"postalCode\": \"10013\",\n                        \"cc\": \"US\",\n                        \"city\": \"New York\",\n                        \"state\": \"NY\",\n                        \"country\": \"United States\",\n                        \"formattedAddress\": [\n                            \"119 Baxter St (btwn Canal & Hester St)\",\n                            \"New York, NY 10013\"\n                        ]\n                    },\n                    \"categories\": [\n                        {\n                            \"id\": \"4bf58dd8d48988d1c9941735\",\n                            \"name\": \"Ice Cream Parlor\",\n                            \"pluralName\": \"Ice Cream Parlors\",\n                            \"shortName\": \"Ice Cream\",\n                            \"icon\": {\n                                \"prefix\": \"https://ss3.4sqi.net/img/categories_v2/food/icecream_\",\n                                \"suffix\": \".png\"\n                            },\n                            \"primary\": true\n                        }\n                    ],\n                    \"venuePage\": {\n                        \"id\": \"221395633\"\n                    },\n                    \"createdAt\": 1469450147\n                },\n                \"checkins\": 0\n            },\n            {\n                \"venue\": {\n                    \"id\": \"5bbd1d34c21cb1002b68b8f3\",\n                    \"name\": \"Morgenstern’s Finest Ice Cream\",\n                    \"location\": {\n                        \"address\": \"88 W Houston St\",\n                        \"lat\": 40.7270567382626,\n                        \"lng\": -73.99986366383841,\n                        \"labeledLatLngs\": [\n                            {\n                                \"label\": \"display\",\n                                \"lat\": 40.7270567382626,\n                                \"lng\": -73.99986366383841\n                            },\n                            {\n                                \"label\": \"entrance\",\n                                \"lat\": 40.727214,\n                                \"lng\": -73.999845\n                            }\n                        ],\n                        \"postalCode\": \"10012\",\n                        \"cc\": \"US\",\n                        \"city\": \"New York\",\n                        \"state\": \"NY\",\n                        \"country\": \"United States\",\n                        \"formattedAddress\": [\n                            \"88 W Houston St\",\n                            \"New York, NY 10012\"\n                        ]\n                    },\n                    \"categories\": [\n                        {\n                            \"id\": \"4bf58dd8d48988d1c9941735\",\n                            \"name\": \"Ice Cream Parlor\",\n                            \"pluralName\": \"Ice Cream Parlors\",\n                            \"shortName\": \"Ice Cream\",\n                            \"icon\": {\n                                \"prefix\": \"https://ss3.4sqi.net/img/categories_v2/food/icecream_\",\n                                \"suffix\": \".png\"\n                            },\n                            \"primary\": true\n                        }\n                    ],\n                    \"createdAt\": 1539120436\n                },\n                \"checkins\": 0\n            },\n            {\n                \"venue\": {\n                    \"id\": \"5c81b0dca6ec980039fd0da5\",\n                    \"name\": \"Ralph's Famous Italian Ices\",\n                    \"location\": {\n                        \"address\": \"370 2nd Ave\",\n                        \"crossStreet\": \"btwn 21st & 22nd st\",\n                        \"lat\": 40.73693700923917,\n                        \"lng\": -73.98161454804094,\n                        \"labeledLatLngs\": [\n                            {\n                                \"label\": \"display\",\n                                \"lat\": 40.73693700923917,\n                                \"lng\": -73.98161454804094\n                            }\n                        ],\n                        \"postalCode\": \"10010\",\n                        \"cc\": \"US\",\n                        \"city\": \"New York\",\n                        \"state\": \"NY\",\n                        \"country\": \"United States\",\n                        \"formattedAddress\": [\n                            \"370 2nd Ave (btwn 21st & 22nd st)\",\n                            \"New York, NY 10010\"\n                        ]\n                    },\n                    \"categories\": [\n                        {\n                            \"id\": \"4bf58dd8d48988d1c9941735\",\n                            \"name\": \"Ice Cream Parlor\",\n                            \"pluralName\": \"Ice Cream Parlors\",\n                            \"shortName\": \"Ice Cream\",\n                            \"icon\": {\n                                \"prefix\": \"https://ss3.4sqi.net/img/categories_v2/food/icecream_\",\n                                \"suffix\": \".png\"\n                            },\n                            \"primary\": true\n                        }\n                    ],\n                    \"delivery\": {\n                        \"id\": \"1192906\",\n                        \"url\": \"https://www.seamless.com/menu/ralphs-famous-italian-ices-370-2nd-ave-new-york/1192906?affiliate=1131&utm_source=foursquare-affiliate-network&utm_medium=affiliate&utm_campaign=1131&utm_content=1192906\",\n                        \"provider\": {\n                            \"name\": \"seamless\",\n                            \"icon\": {\n                                \"prefix\": \"https://fastly.4sqi.net/img/general/cap/\",\n                                \"sizes\": [\n                                    40,\n                                    50\n                                ],\n                                \"name\": \"/delivery_provider_seamless_20180129.png\"\n                            }\n                        }\n                    },\n                    \"createdAt\": 1552003292\n                },\n                \"checkins\": 0\n            },\n            {\n                \"venue\": {\n                    \"id\": \"6248b0729ff9fc11ece9dcde\",\n                    \"name\": \"Softside\",\n                    \"location\": {\n                        \"address\": \"51 Spring St\",\n                        \"lat\": 40.721916,\n                        \"lng\": -73.996155,\n                        \"labeledLatLngs\": [\n                            {\n                                \"label\": \"display\",\n                                \"lat\": 40.721916,\n                                \"lng\": -73.996155\n                            }\n                        ],\n                        \"postalCode\": \"10012\",\n                        \"cc\": \"US\",\n                        \"city\": \"New York\",\n                        \"state\": \"NY\",\n                        \"country\": \"United States\",\n                        \"formattedAddress\": [\n                            \"51 Spring St\",\n                            \"New York, NY 10012\"\n                        ]\n                    },\n                    \"categories\": [\n                        {\n                            \"id\": \"4bf58dd8d48988d1c9941735\",\n                            \"name\": \"Ice Cream Parlor\",\n                            \"pluralName\": \"Ice Cream Parlors\",\n                            \"shortName\": \"Ice Cream\",\n                            \"icon\": {\n                                \"prefix\": \"https://ss3.4sqi.net/img/categories_v2/food/icecream_\",\n                                \"suffix\": \".png\"\n                            },\n                            \"primary\": true\n                        }\n                    ],\n                    \"createdAt\": 1648930930\n                },\n                \"checkins\": 0\n            },\n            {\n                \"venue\": {\n                    \"id\": \"63b84c0da03150785744f9af\",\n                    \"name\": \"Caleta / Bad Habit\",\n                    \"location\": {\n                        \"address\": \"131 Avenue A\",\n                        \"lat\": 40.726977,\n                        \"lng\": -73.982956,\n                        \"labeledLatLngs\": [\n                            {\n                                \"label\": \"display\",\n                                \"lat\": 40.726977,\n                                \"lng\": -73.982956\n                            }\n                        ],\n                        \"postalCode\": \"10009\",\n                        \"cc\": \"US\",\n                        \"city\": \"New York\",\n                        \"state\": \"NY\",\n                        \"country\": \"United States\",\n                        \"formattedAddress\": [\n                            \"131 Avenue A\",\n                            \"New York, NY 10009\"\n                        ]\n                    },\n                    \"categories\": [\n                        {\n                            \"id\": \"4bf58dd8d48988d1c9941735\",\n                            \"name\": \"Ice Cream Parlor\",\n                            \"pluralName\": \"Ice Cream Parlors\",\n                            \"shortName\": \"Ice Cream\",\n                            \"icon\": {\n                                \"prefix\": \"https://ss3.4sqi.net/img/categories_v2/food/icecream_\",\n                                \"suffix\": \".png\"\n                            },\n                            \"primary\": true\n                        }\n                    ],\n                    \"createdAt\": 1673022477\n                },\n                \"checkins\": 0\n            },\n            {\n                \"venue\": {\n                    \"id\": \"54e7da22498e3dd7390e3136\",\n                    \"name\": \"Van Leeuwen Ice Cream\",\n                    \"location\": {\n                        \"address\": \"152 W 10th St\",\n                        \"crossStreet\": \"at Waverly Pl\",\n                        \"lat\": 40.734397,\n                        \"lng\": -74.001271,\n                        \"labeledLatLngs\": [\n                            {\n                                \"label\": \"display\",\n                                \"lat\": 40.734397,\n                                \"lng\": -74.001271\n                            }\n                        ],\n                        \"postalCode\": \"10012\",\n                        \"cc\": \"US\",\n                        \"city\": \"New York\",\n                        \"state\": \"NY\",\n                        \"country\": \"United States\",\n                        \"formattedAddress\": [\n                            \"152 W 10th St (at Waverly Pl)\",\n                            \"New York, NY 10012\"\n                        ]\n                    },\n                    \"categories\": [\n                        {\n                            \"id\": \"4bf58dd8d48988d1c9941735\",\n                            \"name\": \"Ice Cream Parlor\",\n                            \"pluralName\": \"Ice Cream Parlors\",\n                            \"shortName\": \"Ice Cream\",\n                            \"icon\": {\n                                \"prefix\": \"https://ss3.4sqi.net/img/categories_v2/food/icecream_\",\n                                \"suffix\": \".png\"\n                            },\n                            \"primary\": true\n                        }\n                    ],\n                    \"delivery\": {\n                        \"id\": \"2137278\",\n                        \"url\": \"https://www.seamless.com/menu/van-leeuwen-ice-cream-152-w-10th-st-new-york/2137278?affiliate=1131&utm_source=foursquare-affiliate-network&utm_medium=affiliate&utm_campaign=1131&utm_content=2137278\",\n                        \"provider\": {\n                            \"name\": \"seamless\",\n                            \"icon\": {\n                                \"prefix\": \"https://fastly.4sqi.net/img/general/cap/\",\n                                \"sizes\": [\n                                    40,\n                                    50\n                                ],\n                                \"name\": \"/delivery_provider_seamless_20180129.png\"\n                            }\n                        }\n                    },\n                    \"createdAt\": 1424480802\n                },\n                \"checkins\": 0\n            },\n            {\n                \"venue\": {\n                    \"id\": \"5e5c37dd36507b0008efc85a\",\n                    \"name\": \"Whipped Urban Dessert Lab\",\n                    \"location\": {\n                        \"address\": \"95 Orchard St\",\n                        \"lat\": 40.718482,\n                        \"lng\": -73.990161,\n                        \"labeledLatLngs\": [\n                            {\n                                \"label\": \"display\",\n                                \"lat\": 40.718482,\n                                \"lng\": -73.990161\n                            },\n                            {\n                                \"label\": \"entrance\",\n                                \"lat\": 40.718439,\n                                \"lng\": -73.990171\n                            }\n                        ],\n                        \"postalCode\": \"10002\",\n                        \"cc\": \"US\",\n                        \"city\": \"New York\",\n                        \"state\": \"NY\",\n                        \"country\": \"United States\",\n                        \"formattedAddress\": [\n                            \"95 Orchard St\",\n                            \"New York, NY 10002\"\n                        ]\n                    },\n                    \"categories\": [\n                        {\n                            \"id\": \"4bf58dd8d48988d1c9941735\",\n                            \"name\": \"Ice Cream Parlor\",\n                            \"pluralName\": \"Ice Cream Parlors\",\n                            \"shortName\": \"Ice Cream\",\n                            \"icon\": {\n                                \"prefix\": \"https://ss3.4sqi.net/img/categories_v2/food/icecream_\",\n                                \"suffix\": \".png\"\n                            },\n                            \"primary\": true\n                        }\n                    ],\n                    \"createdAt\": 1583101917\n                },\n                \"checkins\": 0\n            }\n        ]\n    }\n}"
                  }
                },
                "schema": {
                  "description": "Retrieves a list of suggested venues for a given list.",
                  "properties": {
                    "description": "Properties of suggested venues included in a successful response for retrieving recommended venues for a specific list.",
                    "meta": {
                      "description": "Metadata object containing additional information about the response.",
                      "properties": {
                        "code": {
                          "default": 0,
                          "description": "Status code indicating the result of the API request for suggested venues from a specific list.",
                          "example": 200,
                          "type": "integer"
                        },
                        "description": "Metadata object for the response of a successful request to suggest venues for a given list ID.",
                        "requestId": {
                          "description": "Unique identifier for the API request.",
                          "example": "654a784242dc4f7a64be4c8c",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "notifications": {
                      "description": "Array of notification objects for suggested venues in a given list.",
                      "items": {
                        "description": "Array of notification objects containing information about suggested venues for the specified list.",
                        "properties": {
                          "description": "Array of notification objects for suggested venues for the specified list ID.",
                          "item": {
                            "description": "Array of notification objects containing information about suggested venues for a specific list.",
                            "properties": {
                              "description": "List of notification objects containing unread count for suggested venues for a given list ID.",
                              "unreadCount": {
                                "default": 0,
                                "description": "Number of unread items in the notification for a list of suggested venues for a given list ID.",
                                "example": 0,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": {
                            "description": "Type of notification.",
                            "example": "notificationTray",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "response": {
                      "description": "Array of suggested venues for the specified list.",
                      "properties": {
                        "description": "Response object containing suggested venues for a given list ID.",
                        "suggestedVenues": {
                          "description": "An array of suggested venues for a given list.",
                          "items": {
                            "description": "Array of suggested venues for a given list ID.",
                            "properties": {
                              "checkins": {
                                "default": 0,
                                "description": "Number of check-ins at suggested venues for a given list.",
                                "example": 0,
                                "type": "integer"
                              },
                              "description": "Array of suggested venues for the specified list.",
                              "venue": {
                                "description": "List of suggested venues for a given list ID.",
                                "properties": {
                                  "categories": {
                                    "description": "List of suggested categories for venues in the specified list. ",
                                    "items": {
                                      "description": "Array of suggested categories for venues returned in the response from the Foursquare API.",
                                      "properties": {
                                        "description": "List of suggested venues with associated categories for a given list ID.",
                                        "icon": {
                                          "description": "List of category icons for suggested venues in a list.",
                                          "properties": {
                                            "description": "List of suggested venues with associated category icons for a given list ID.",
                                            "prefix": {
                                              "description": "Icon prefix for suggested venues. list.",
                                              "example": "https://ss3.4sqi.net/img/categories_v2/food/icecream_",
                                              "type": "string"
                                            },
                                            "suffix": {
                                              "description": "Icon suffix for suggested venue categories in a list of recommended venues for a given list ID.",
                                              "example": ".png",
                                              "type": "string"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "id": {
                                          "description": "List of suggested categories for the given list ID.",
                                          "example": "4bf58dd8d48988d1c9941735",
                                          "type": "string"
                                        },
                                        "name": {
                                          "description": "Suggested venue name.",
                                          "example": "Ice Cream Parlor",
                                          "type": "string"
                                        },
                                        "pluralName": {
                                          "description": "Suggest venue plural name.",
                                          "example": "Ice Cream Parlors",
                                          "type": "string"
                                        },
                                        "primary": {
                                          "default": true,
                                          "description": "Primary categories for suggested venues in a list.",
                                          "example": true,
                                          "type": "boolean"
                                        },
                                        "shortName": {
                                          "description": "List of short names for suggested venues in a specific list.",
                                          "example": "Ice Cream",
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "createdAt": {
                                    "default": 0,
                                    "description": "Timestamp indicating when the suggested venue was created; UNIX timestamp in seconds since Epoch.",
                                    "example": 1479397016,
                                    "type": "integer"
                                  },
                                  "delivery": {
                                    "description": "ADelivery information for each venue.",
                                    "properties": {
                                      "description": "List of suggested venues for a given list, including delivery information for each venue.",
                                      "id": {
                                        "description": "List of suggested venues' delivery IDs for a given list.",
                                        "example": "1086089",
                                        "type": "string"
                                      },
                                      "provider": {
                                        "description": "List of suggested venues with delivery providers for a given list ID.",
                                        "properties": {
                                          "description": "Array of suggested delivery providers for venues in a specified list.",
                                          "icon": {
                                            "description": "Icon for the delivery provider of a suggested venue for a given list.",
                                            "properties": {
                                              "description": "Response object containing suggested venues for a given list, including delivery provider information and corresponding icons.",
                                              "name": {
                                                "description": "Delivery providers' icons for suggested venues from a list.",
                                                "example": "/delivery_provider_seamless_20180129.png",
                                                "type": "string"
                                              },
                                              "prefix": {
                                                "description": "Delivery providers for suggested venues in a specific list.",
                                                "example": "https://fastly.4sqi.net/img/general/cap/",
                                                "type": "string"
                                              },
                                              "sizes": {
                                                "description": "Icon sizes for suggested delivery providers for a given list.",
                                                "items": {
                                                  "default": 0,
                                                  "description": "Icon sizes for suggested venues in the response of a GET request to retrieve recommended venues for a specified list.",
                                                  "example": 40,
                                                  "type": "integer"
                                                },
                                                "type": "array"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "name": {
                                            "description": "Suggested venues from a specific list containing delivery provider names.",
                                            "example": "seamless",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "url": {
                                        "description": "URL for suggested venues with delivery options for a specific list.",
                                        "example": "https://www.seamless.com/menu/soft-swerve-ice-cream-85-allen-st-new-york/1086089?affiliate=1131&utm_source=foursquare-affiliate-network&utm_medium=affiliate&utm_campaign=1131&utm_content=1086089",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "description": "List of suggested venues for a given list ID.",
                                  "id": {
                                    "description": "Venue IDs for suggested venues in a specific list. ",
                                    "example": "582dce98fd27163e8350257f",
                                    "type": "string"
                                  },
                                  "location": {
                                    "description": "The location of suggested venues for a specific list.",
                                    "properties": {
                                      "address": {
                                        "description": "The venue address for suggested venues in a specified list.",
                                        "example": "85B Allen St",
                                        "type": "string"
                                      },
                                      "cc": {
                                        "description": "The country code for each venue's location.",
                                        "example": "US",
                                        "type": "string"
                                      },
                                      "city": {
                                        "description": "City of venue.",
                                        "example": "New York",
                                        "type": "string"
                                      },
                                      "country": {
                                        "description": "Country location for suggested venues.",
                                        "example": "United States",
                                        "type": "string"
                                      },
                                      "crossStreet": {
                                        "description": "Array of suggested venues with their corresponding cross street locations for a given list ID.",
                                        "example": "btwn Grand & Broome St",
                                        "type": "string"
                                      },
                                      "description": "Location of suggested venues for given list ID.",
                                      "formattedAddress": {
                                        "description": "List of suggested venues for a given list, with formatted address information included.",
                                        "items": {
                                          "description": "Formatted address of suggested venues for a given list ID.",
                                          "example": "85B Allen St (btwn Grand & Broome St)",
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "labeledLatLngs": {
                                        "description": "List of suggested venues with labeled latitude and longitude coordinates for a given list ID.",
                                        "items": {
                                          "description": "Array of suggested venues and their labeled latitude and longitude coordinates for a given list.",
                                          "properties": {
                                            "description": "Array of labeled latitude and longitude coordinates for suggested venues in a specified list.",
                                            "label": {
                                              "description": "Labeled latitude and longitude coordinates for suggested venues associated with a given list ID.",
                                              "example": "display",
                                              "type": "string"
                                            },
                                            "lat": {
                                              "default": 0,
                                              "description": "Latitude coordinate of suggested venue's location in a list by list ID.",
                                              "example": 40.718086955112945,
                                              "type": "number"
                                            },
                                            "lng": {
                                              "default": 0,
                                              "description": "Longitude coordinate of suggested venue's labeled latitude and longitude coordinates for a given list ID.",
                                              "example": -73.991021414639,
                                              "type": "number"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "type": "array"
                                      },
                                      "lat": {
                                        "default": 0,
                                        "description": "Latitude of suggested venues in a given list.",
                                        "example": 40.718086955112945,
                                        "type": "number"
                                      },
                                      "lng": {
                                        "default": 0,
                                        "description": "Longitude coordinate of suggested venue locations in a given list.",
                                        "example": -73.991021414639,
                                        "type": "number"
                                      },
                                      "postalCode": {
                                        "description": "Postal code of the venue.",
                                        "example": "10002",
                                        "type": "string"
                                      },
                                      "state": {
                                        "description": "List of suggested venues for a given list in a specific state.",
                                        "example": "NY",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "name": {
                                    "description": "Suggested venues for a specific list by list ID.",
                                    "example": "Soft Swerve Ice Cream",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "200"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "description": "Bad request error when attempting to retrieve suggested venues for a given list ID.",
                  "properties": {
                    "description": "Properties for the 400 response when requesting suggestions for venues on a specific list."
                  },
                  "type": "object"
                }
              }
            },
            "description": "400"
          }
        },
        "security": [
          {
            "ManagedUserTokenAuth": []
          }
        ],
        "summary": "Suggest List Venues",
        "tags": [
          "Lists"
        ]
      }
    },
    "/lists/{list_id}/update": {
      "post": {
        "deprecated": false,
        "description": "Allows the acting user to edit their lists.",
        "operationId": "update-a-list",
        "parameters": [
          {
            "description": "The ID of the list to be acted upon.",
            "in": "path",
            "name": "list_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The API version date as documented [here](/reference/versioning); e.g. 20231010",
            "in": "query",
            "name": "v",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "description",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "photoId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"meta\": {\n    \"code\": 200,\n    \"requestId\": \"641a2bbefdd741133a5fb88a\"\n  },\n  \"notifications\": [\n    {\n      \"type\": \"notificationTray\",\n      \"item\": {\n        \"unreadCount\": 0\n      }\n    }\n  ],\n  \"response\": {\n    \"list\": {\n      \"id\": \"641a25e7cf08c07fbebbccc3\",\n      \"name\": \"Not Worth It\",\n      \"description\": \"Find other places to blow your diet!\",\n      \"type\": \"created\",\n      \"user\": {\n        \"id\": \"123456\",\n        \"firstName\": \"John\",\n        \"lastName\": \"Smith\",\n        \"gender\": \"male\",\n        \"countryCode\": \"US\",\n        \"relationship\": \"self\",\n        \"canonicalUrl\": \"https://foursquare.com/user/123456\",\n        \"canonicalPath\": \"/user/123456\",\n        \"photo\": {\n          \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n          \"suffix\": \"/blank_boy.png\",\n          \"default\": true\n        },\n        \"isAnonymous\": false\n      },  \n      \"editable\": true,\n      \"public\": true,\n      \"collaborative\": false,\n      \"url\": \"/user/123456/list/not-worth-it\",\n      \"canonicalUrl\": \"https://foursquare.com/user/123456/list/not-worth-it\",\n      \"canonicalPath\": \"/user/123456/list/not-worth-it\",\n      \"createdAt\": 1679435239,\n      \"updatedAt\": 1679435239,\n      \"visitedCount\": 0,\n      \"venueCount\": 0,\n      \"categories\": {\n        \"count\": 0,\n        \"items\": []\n      },\n      \"following\": false,\n      \"followers\": {\n        \"count\": 0\n      },\n      \"collaborators\": {\n        \"count\": 0,\n        \"items\": []\n      },\n      \"sort\": \"list-order\",\n      \"listItems\": {\n        \"count\": 0,\n        \"items\": []\n      },\n      \"completedCount\": 0\n    }\n  }\n}"
                  }
                },
                "schema": {
                  "description": "Response object containing updated data for a specific list upon a successful update request.",
                  "properties": {
                    "description": "List of updated objects in a specific list.",
                    "meta": {
                      "description": "The metadata object for the success response when updating a list item.",
                      "properties": {
                        "code": {
                          "default": 0,
                          "description": "The status code indicating the result of the update request for the specified list.",
                          "example": 200,
                          "type": "integer"
                        },
                        "description": "Metadata object containing additional information about the API response.",
                        "requestId": {
                          "description": "Unique identifier for the API request associated with the 200 (OK) response from updating a list with a specific ID.",
                          "example": "641a2bbefdd741133a5fb88a",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "notifications": {
                      "description": "Array of notification objects containing updates for the specified list.",
                      "items": {
                        "description": "Array of notification objects for a successful update of a list.",
                        "properties": {
                          "description": "Array of objects containing notification information for the specified list update.",
                          "item": {
                            "description": "Array of notification objects for the updated list with a status code of 200.",
                            "properties": {
                              "description": "List of notification items for a successful update of a specific list.",
                              "unreadCount": {
                                "default": 0,
                                "description": "Number of unread items in the notification associated with the updated list.",
                                "example": 0,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": {
                            "description": "The type of notification for items in the specified list.",
                            "example": "notificationTray",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "response": {
                      "description": "The response object containing the updated data for a specific list.",
                      "properties": {
                        "description": "List of properties for the response object in a successful post update response for the given list ID.",
                        "list": {
                          "description": "Properties of the updated list response for a successful API request.",
                          "properties": {
                            "canonicalPath": {
                              "description": "Updated list's canonical path.",
                              "example": "/user/123456/list/not-worth-it",
                              "type": "string"
                            },
                            "canonicalUrl": {
                              "description": "The list's canonical URL.",
                              "example": "https://foursquare.com/user/123456/list/not-worth-it",
                              "type": "string"
                            },
                            "categories": {
                              "description": "Array of categories associated with the updated list.",
                              "properties": {
                                "count": {
                                  "default": 0,
                                  "description": "Number of categories in the updated list.",
                                  "example": 0,
                                  "type": "integer"
                                },
                                "description": "Response object for updating a specific list, including the list's categories.",
                                "items": {
                                  "description": "Array of categories associated with the updated list. ",
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            },
                            "collaborative": {
                              "default": true,
                              "description": "Whether the list is collaborative or not.",
                              "example": false,
                              "type": "boolean"
                            },
                            "collaborators": {
                              "description": "List of collaborators for the updated list.",
                              "properties": {
                                "count": {
                                  "default": 0,
                                  "description": "Number of collaborators on a list that was successfully updated.",
                                  "example": 0,
                                  "type": "integer"
                                },
                                "description": "Update response for a specific list's collaborators in a given list ID.",
                                "items": {
                                  "description": "Array of collaborators that are associated with the updated list in the response body.",
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            },
                            "completedCount": {
                              "default": 0,
                              "description": "The number of completed items in a list that was updated successfully.",
                              "example": 0,
                              "type": "integer"
                            },
                            "createdAt": {
                              "default": 0,
                              "description": "List creation date for a specified list; UNIX timestamp in seconds since Epoch.",
                              "example": 1679435239,
                              "type": "integer"
                            },
                            "description": {
                              "example": "Find other places to blow your diet!",
                              "type": "string"
                            },
                            "editable": {
                              "default": true,
                              "description": "Boolean indicating if the list is editable by the user who made the request.",
                              "example": true,
                              "type": "boolean"
                            },
                            "followers": {
                              "description": "List followers for a given list.",
                              "properties": {
                                "count": {
                                  "default": 0,
                                  "description": "Number of followers for a list after it has been updated successfully.",
                                  "example": 0,
                                  "type": "integer"
                                },
                                "description": "Properties of the followers of a list that has been successfully updated."
                              },
                              "type": "object"
                            },
                            "following": {
                              "default": true,
                              "description": "Indicates if the updated list is being followed by the user.",
                              "example": false,
                              "type": "boolean"
                            },
                            "id": {
                              "description": "The list's unique ID.",
                              "example": "641a25e7cf08c07fbebbccc3",
                              "type": "string"
                            },
                            "listItems": {
                              "description": "Array of list items in the updated list.",
                              "properties": {
                                "count": {
                                  "default": 0,
                                  "description": "The total number of list items in the updated list.",
                                  "example": 0,
                                  "type": "integer"
                                },
                                "description": "List items in a specific list, posted by the user, including properties such as name, description, and number of items.",
                                "items": {
                                  "description": "Update response for a specific list, including the list items and their properties.",
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            },
                            "name": {
                              "description": "The name of a list.",
                              "example": "Not Worth It",
                              "type": "string"
                            },
                            "public": {
                              "default": true,
                              "description": "Boolean indicating if the updated list is public.",
                              "example": true,
                              "type": "boolean"
                            },
                            "sort": {
                              "description": "The updated list's sorting properties.",
                              "example": "list-order",
                              "type": "string"
                            },
                            "type": {
                              "description": "The type of a list in the response for a successful update request.",
                              "example": "created",
                              "type": "string"
                            },
                            "updatedAt": {
                              "default": 0,
                              "description": "Timestamp indicating when the specified list was last updated; UNIX timestamp in seconds since Epoch.",
                              "example": 1679435239,
                              "type": "integer"
                            },
                            "url": {
                              "description": "Updates a list's URL in the response for a successful POST request to the specified list ID.",
                              "example": "/user/123456/list/not-worth-it",
                              "type": "string"
                            },
                            "user": {
                              "description": "User object for the updated list.",
                              "properties": {
                                "canonicalPath": {
                                  "description": "The updated list's user's canonical path.",
                                  "example": "/user/123456",
                                  "type": "string"
                                },
                                "canonicalUrl": {
                                  "description": "The list's canonical URL.",
                                  "example": "https://foursquare.com/user/123456",
                                  "type": "string"
                                },
                                "countryCode": {
                                  "description": "User's country code for a given list ID.",
                                  "example": "US",
                                  "type": "string"
                                },
                                "description": "Updated list information for a specific user's list.",
                                "firstName": {
                                  "description": "Updates a user's first name in a specific list.",
                                  "example": "John",
                                  "type": "string"
                                },
                                "gender": {
                                  "description": "Update response properties for user gender in a specific list.",
                                  "example": "male",
                                  "type": "string"
                                },
                                "id": {
                                  "description": "The list's user's unique identifier.",
                                  "example": "123456",
                                  "type": "string"
                                },
                                "isAnonymous": {
                                  "default": true,
                                  "description": "True if the user who created the list is anonymous.",
                                  "example": false,
                                  "type": "boolean"
                                },
                                "lastName": {
                                  "description": "Updates a user's last name for a specified list.",
                                  "example": "Smith",
                                  "type": "string"
                                },
                                "photo": {
                                  "description": "The photo of the user who updated the specified list.",
                                  "properties": {
                                    "default": {
                                      "default": true,
                                      "description": "Indicates whether the user's default profile photo was used in the updated list response.\" ",
                                      "example": true,
                                      "type": "boolean"
                                    },
                                    "description": "Update a user's photo on a specific list.",
                                    "prefix": {
                                      "description": "The URL prefix of a photo.",
                                      "example": "https://fastly.4sqi.net/img/user/",
                                      "type": "string"
                                    },
                                    "suffix": {
                                      "description": "The URL suffix of a photo.",
                                      "example": "/blank_boy.png",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "relationship": {
                                  "description": "The user's relationship to the list owner.",
                                  "example": "self",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "venueCount": {
                              "default": 0,
                              "description": "Number of venues associated with an updated list.",
                              "example": 0,
                              "type": "integer"
                            },
                            "visitedCount": {
                              "default": 0,
                              "description": "Number of times the list has been visited.",
                              "example": 0,
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "200"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "description": "Updates a list with the specified ID, returning a 400 response if the request is invalid.",
                  "properties": {
                    "description": "Response object containing status code and error message for a bad request when updating a list."
                  },
                  "type": "object"
                }
              }
            },
            "description": "400"
          }
        },
        "security": [
          {
            "ManagedUserTokenAuth": []
          }
        ],
        "summary": "Update List",
        "tags": [
          "Lists"
        ]
      }
    },
    "/photos/{photo_id}": {
      "get": {
        "deprecated": false,
        "description": "Get the details of a photo associated with a venue.",
        "operationId": "get-photo-details",
        "parameters": [
          {
            "description": "The ID of the photo to retrieve additional information for.",
            "in": "path",
            "name": "photo_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The API version date as documented [here](/reference/versioning); e.g. 20231010",
            "in": "query",
            "name": "v",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"meta\": {\n    \"code\": 200,\n    \"requestId\": \"599c8bf69fb6b72fcfa0779e\"\n  },\n  \"response\": {\n    \"photo\": {\n      \"id\": \"51e4151c498e60b5d17bc721\",\n      \"createdAt\": 1373902108,\n      \"source\": {\n        \"name\": \"Instagram\",\n        \"url\": \"http://instagram.com\"\n      },\n      \"prefix\": \"https://igx.4sqi.net/img/general/\",\n      \"suffix\": \"/1022386_wEd7VXnWzp5lajvRLtAPunoiufDSIq8PMEtEuIH2Tzg.jpg\",\n      \"width\": 612,\n      \"height\": 612,\n      \"user\": {\n        \"firstName\": \"John\",\n        \"lastName\": \"Smith\",\n        \"countryCode\": \"US\"\n      },\n      \"visibility\": \"public\",\n      \"venue\": {\n        \"id\": \"427c0500f964a52097211fe3\",\n        \"name\": \"The Metropolitan Museum of Art (Metropolitan Museum of Art)\",\n        \"contact\": {},\n        \"location\": {\n          \"address\": \"1000 5th Ave\",\n          \"crossStreet\": \"btwn E 80th & E 84th St\",\n          \"lat\": 40.779150129460504,\n          \"lng\": -73.9627398125614,\n          \"postalCode\": \"10028\",\n          \"cc\": \"US\",\n          \"city\": \"New York\",\n          \"state\": \"NY\",\n          \"country\": \"United States\",\n          \"formattedAddress\": [\n            \"1000 5th Ave (btwn E 80th & E 84th St)\",\n            \"New York, NY 10028\",\n            \"United States\"\n          ]\n        },\n        \"categories\": [\n          {\n            \"id\": \"4bf58dd8d48988d18f941735\",\n            \"name\": \"Art Museum\",\n            \"pluralName\": \"Art Museums\",\n            \"shortName\": \"Art Museum\",\n            \"icon\": {\n              \"prefix\": \"https://ss3.4sqi.net/img/categories_v2/arts_entertainment/museum_art_\",\n              \"suffix\": \".png\"\n            },\n            \"primary\": true\n          }\n        ]\n      }\n    }\n  }\n}"
                  }
                },
                "schema": {
                  "description": "The photo object for the specified photo ID.",
                  "properties": {
                    "description": "Photo object containing information about the requested photo.",
                    "meta": {
                      "description": "Metadata object containing additional information about the response.",
                      "properties": {
                        "code": {
                          "default": 0,
                          "description": "Status code indicating the result of retrieving the photo metadata.",
                          "example": 200,
                          "type": "integer"
                        },
                        "description": "Metadata object containing additional information about the response for retrieving a specific photo by ID.",
                        "requestId": {
                          "description": "Unique identifier for the API request.",
                          "example": "599c8bf69fb6b72fcfa0779e",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "response": {
                      "description": "The response object containing the retrieved data for the specified photo ID.",
                      "properties": {
                        "description": "Response object containing information about the retrieved photo.",
                        "photo": {
                          "description": "Photo object containing information about a specific photo.",
                          "properties": {
                            "createdAt": {
                              "default": 0,
                              "description": "Creation timestamp for a specific photo; UNIX timestamp in seconds since Epoch.",
                              "example": 1373902108,
                              "type": "integer"
                            },
                            "description": "Information about a specific photo.",
                            "height": {
                              "default": 0,
                              "description": "Height of a specific photo in pixels.",
                              "example": 612,
                              "type": "integer"
                            },
                            "id": {
                              "description": "Unique identifier for the photo.",
                              "example": "51e4151c498e60b5d17bc721",
                              "type": "string"
                            },
                            "prefix": {
                              "description": "Response properties for retrieving a photo's prefix for a given photo ID. ",
                              "example": "https://igx.4sqi.net/img/general/",
                              "type": "string"
                            },
                            "source": {
                              "description": "Photo object representing the source of a specific photo.",
                              "properties": {
                                "description": "The source of the photo associated with the given photo ID.",
                                "name": {
                                  "description": "The name of the source where the requested photo was obtained.",
                                  "example": "Instagram",
                                  "type": "string"
                                },
                                "url": {
                                  "description": "The URL of the source where the specified photo was obtained.",
                                  "example": "http://instagram.com",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "suffix": {
                              "description": "URL suffix for the image.",
                              "example": "/1022386_wEd7VXnWzp5lajvRLtAPunoiufDSIq8PMEtEuIH2Tzg.jpg",
                              "type": "string"
                            },
                            "user": {
                              "description": "User object for a specific photo.",
                              "properties": {
                                "countryCode": {
                                  "description": "User's country code for the retrieved photo.",
                                  "example": "US",
                                  "type": "string"
                                },
                                "description": "User object containing information about the user who uploaded the requested photo.",
                                "firstName": {
                                  "description": "First name of the user who uploaded the specified photo.",
                                  "example": "John",
                                  "type": "string"
                                },
                                "lastName": {
                                  "description": "The last name of the user who uploaded the specified photo.",
                                  "example": "Smith",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "venue": {
                              "description": "Venue associated with the specified photo.",
                              "properties": {
                                "categories": {
                                  "description": "Categories associated with a specific photo at a venue.",
                                  "items": {
                                    "description": "Array of category objects associated with the venue where the photo was taken.",
                                    "properties": {
                                      "description": "An array of venue categories for a specific photo.",
                                      "icon": {
                                        "description": "Icon for the category associated with the photo's venue in the response for the 'photo_id' specified..",
                                        "properties": {
                                          "description": "Icon object for the categories of a specific photo's venue.",
                                          "prefix": {
                                            "description": "Icon prefix for venue categories for a specific photo.",
                                            "example": "https://ss3.4sqi.net/img/categories_v2/arts_entertainment/museum_art_",
                                            "type": "string"
                                          },
                                          "suffix": {
                                            "description": "Icon suffix for the photo's associated venue categories.",
                                            "example": ".png",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "id": {
                                        "description": "Photo's venue's category id associated with the response.",
                                        "example": "4bf58dd8d48988d18f941735",
                                        "type": "string"
                                      },
                                      "name": {
                                        "description": "Name of categories associated with a specific photo's venue.",
                                        "example": "Art Museum",
                                        "type": "string"
                                      },
                                      "pluralName": {
                                        "description": "Categories associated with a specific photo at a venue.",
                                        "example": "Art Museums",
                                        "type": "string"
                                      },
                                      "primary": {
                                        "default": true,
                                        "description": "Primary category for the photo's associated venue.",
                                        "example": true,
                                        "type": "boolean"
                                      },
                                      "shortName": {
                                        "description": "Response object for retrieving a photo's venue's categories, with a focus on the category's short name.",
                                        "example": "Art Museum",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "contact": {
                                  "description": "Contact information for the venue associated with the photo.",
                                  "properties": {
                                    "description": "The photo's venue's contact information."
                                  },
                                  "type": "object"
                                },
                                "description": "Photo venue information for a specific photo.",
                                "id": {
                                  "description": "Unique identifier for the venue associated with the retrieved photo.",
                                  "example": "427c0500f964a52097211fe3",
                                  "type": "string"
                                },
                                "location": {
                                  "description": "The location of the venue associated with the requested photo.",
                                  "properties": {
                                    "address": {
                                      "description": "The address of a specific photo's associated venue.",
                                      "example": "1000 5th Ave",
                                      "type": "string"
                                    },
                                    "cc": {
                                      "description": "The country code of the location of a photo's associated venue.",
                                      "example": "US",
                                      "type": "string"
                                    },
                                    "city": {
                                      "description": "The city location for a specific photo.",
                                      "example": "New York",
                                      "type": "string"
                                    },
                                    "country": {
                                      "description": "The country location of a specific photo from a venue in the response.",
                                      "example": "United States",
                                      "type": "string"
                                    },
                                    "crossStreet": {
                                      "description": "Photo's venue location cross street.",
                                      "example": "btwn E 80th & E 84th St",
                                      "type": "string"
                                    },
                                    "description": "Location information for a specific photo's associated venue.",
                                    "formattedAddress": {
                                      "description": "Formatted address of the venue associated with the retrieved photo.",
                                      "items": {
                                        "description": "Formatted address items for a photo's associated venue's location in response to a successful request for a specific photo.",
                                        "example": "1000 5th Ave (btwn E 80th & E 84th St)",
                                        "type": "string"
                                      },
                                      "type": "array"
                                    },
                                    "lat": {
                                      "default": 0,
                                      "description": "Latitude coordinate of the venue where the specified photo was taken.",
                                      "example": 40.779150129460504,
                                      "type": "number"
                                    },
                                    "lng": {
                                      "default": 0,
                                      "description": "Longitude coordinate of the venue associated with the specified photo.",
                                      "example": -73.9627398125614,
                                      "type": "number"
                                    },
                                    "postalCode": {
                                      "description": "Response object containing the photo's associated venue's location's postal code.",
                                      "example": "10028",
                                      "type": "string"
                                    },
                                    "state": {
                                      "description": "Location state for the specified photo.",
                                      "example": "NY",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "name": {
                                  "description": "The venue name for a specific photo.",
                                  "example": "The Metropolitan Museum of Art (Metropolitan Museum of Art)",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "visibility": {
                              "description": "Visibility property of the photo object.",
                              "example": "public",
                              "type": "string"
                            },
                            "width": {
                              "default": 0,
                              "description": "Width of the specified photo.",
                              "example": 612,
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "200"
          },
          "400": {
            "content": {
              "text/plain": {
                "examples": {
                  "Result": {
                    "value": "For full list of API error codes:\nhttps://location.foursquare.com/developer/reference/errors-v2"
                  }
                }
              }
            },
            "description": "400"
          }
        },
        "security": [
          {
            "ManagedUserTokenAuth": []
          }
        ],
        "summary": "Get Photo Details",
        "tags": [
          "Photos"
        ]
      }
    },
    "/search/autocomplete": {
      "get": {
        "deprecated": false,
        "description": "Return autocomplete search options based on the user's query.",
        "operationId": "autocomplete-for-search",
        "parameters": [
          {
            "description": "The API version date as documented [here](/reference/versioning); e.g. 20231010",
            "in": "query",
            "name": "v",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A search term to be applied against titles.",
            "in": "query",
            "name": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The latitude/longitude around which to retrieve place information. This must be specified as latitude,longitude (e.g., ll=41.8781,-87.6298).",
            "in": "query",
            "name": "ll",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sets a radius distance (in meters) used to define an area to bias search results. The maximum allowed radius is 100,000 meters. Radius can be used in combination with ll or ip biased geolocation only. By using radius, global search results will be omitted.",
            "in": "query",
            "name": "radius",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A string naming a locality in the world (e.g., \"Chicago, IL\"). If the value is not geocodable, returns an error.",
            "in": "query",
            "name": "near",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The latitude/longitude representing the north/east points of a rectangle. Must be used with sw parameter to specify a rectangular search box. Global search results will be omitted.",
            "in": "query",
            "name": "ne",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The latitude/longitude representing the south/west points of a rectangle. Must be used with ne parameter to specify a rectangular search box. Global search results will be omitted.",
            "in": "query",
            "name": "sw",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"meta\": {\n    \"code\": 200,\n    \"requestId\": \"651312eda774726235afae21\"\n  },\n  \"notifications\": [\n    {\n      \"type\": \"notificationTray\",\n      \"item\": {\n        \"unreadCount\": 3\n      }\n    },\n    {\n      \"type\": \"unconfirmed\",\n      \"item\": {\n        \"unreadCount\": 0\n      }\n    }\n  ],\n  \"response\": {\n    \"groups\": [\n      {\n        \"type\": \"unified\",\n        \"isPlaceholderGroup\": false,\n        \"items\": [\n          {\n            \"id\": \"651312ed897ae12f26abfcf5\",\n            \"entities\": [\n              {\n                \"indices\": [\n                  0,\n                  3\n                ],\n                \"type\": \"autocompleteMatch\"\n              }\n            ],\n            \"text\": \"Coffee\",\n            \"type\": \"query\",\n            \"object\": {\n              \"querystring\": \"Coffee\",\n              \"icon\": {\n                \"prefix\": \"https://irs1.4sqi.net/img/general/cap/\",\n                \"sizes\": [\n                  30,\n                  45,\n                  60,\n                  90,\n                  120\n                ],\n                \"name\": \"/dialpad_coffee_20180129.png\"\n              }\n            }\n          },\n          {\n            \"id\": \"651312ed897ae12f26abfcf7\",\n            \"entities\": [\n              {\n                \"indices\": [\n                  0,\n                  3\n                ],\n                \"type\": \"autocompleteMatch\"\n              }\n            ],\n            \"text\": \"Coffeeshops with WiFi\",\n            \"type\": \"query\",\n            \"object\": {\n              \"querystring\": \"Coffeeshops with WiFi\",\n              \"icon\": {\n                \"prefix\": \"https://irs1.4sqi.net/img/general/cap/\",\n                \"sizes\": [\n                  30,\n                  45,\n                  60,\n                  90,\n                  120\n                ],\n                \"name\": \"/catv2_food_coffeeshop_fsblue_20180129.png\"\n              }\n            }\n          },\n          {\n            \"id\": \"651312ed897ae12f26abfcf8\",\n            \"entities\": [\n              {\n                \"indices\": [\n                  5,\n                  8\n                ],\n                \"type\": \"autocompleteMatch\"\n              }\n            ],\n            \"text\": \"Iced Coffees & Teas\",\n            \"type\": \"query\",\n            \"object\": {\n              \"querystring\": \"Iced Coffees & Teas\",\n              \"icon\": {\n                \"prefix\": \"https://irs1.4sqi.net/img/general/cap/\",\n                \"sizes\": [\n                  30,\n                  45,\n                  60,\n                  90,\n                  120\n                ],\n                \"name\": \"/catv2_food_coffeeshop_fsblue_20180129.png\"\n              }\n            }\n          },\n          {\n            \"id\": \"651312ed897ae12f26abfcf9\",\n            \"entities\": [\n              {\n                \"indices\": [\n                  0,\n                  3\n                ],\n                \"type\": \"autocompleteMatch\"\n              }\n            ],\n            \"text\": \"Coffee & Tea\",\n            \"type\": \"query\",\n            \"object\": {\n              \"querystring\": \"Coffee & Tea\"\n            }\n          },\n          {\n            \"id\": \"651312ed897ae12f26abfcfa\",\n            \"entities\": [\n              {\n                \"indices\": [\n                  0,\n                  3\n                ],\n                \"type\": \"autocompleteMatch\"\n              }\n            ],\n            \"text\": \"Coffee Outdoors\",\n            \"type\": \"query\",\n            \"object\": {\n              \"querystring\": \"Coffee Outdoors\",\n              \"icon\": {\n                \"prefix\": \"https://irs1.4sqi.net/img/general/cap/\",\n                \"sizes\": [\n                  30,\n                  45,\n                  60,\n                  90,\n                  120\n                ],\n                \"name\": \"/catv2_food_coffeeshop_fsblue_20180129.png\"\n              }\n            }\n          },\n          {\n            \"id\": \"651312ed897ae12f26abfcfb\",\n            \"entities\": [\n              {\n                \"indices\": [\n                  7,\n                  10\n                ],\n                \"type\": \"autocompleteMatch\"\n              }\n            ],\n            \"text\": \"Cafes, coffee, and tea houses\",\n            \"type\": \"query\",\n            \"object\": {\n              \"querystring\": \"Cafes, coffee, and tea houses\",\n              \"icon\": {\n                \"prefix\": \"https://irs1.4sqi.net/img/general/cap/\",\n                \"sizes\": [\n                  30,\n                  45,\n                  60,\n                  90,\n                  120\n                ],\n                \"name\": \"/explore_autocomplete_ico_autocomplete_search_20180129.png\"\n              }\n            }\n          },\n          {\n            \"id\": \"651312ed897ae12f26abfcfc\",\n            \"entities\": [\n              {\n                \"indices\": [\n                  5,\n                  8\n                ],\n                \"type\": \"autocompleteMatch\"\n              }\n            ],\n            \"text\": \"Iced coffee\",\n            \"type\": \"query\",\n            \"object\": {\n              \"querystring\": \"Iced coffee\",\n              \"icon\": {\n                \"prefix\": \"https://irs1.4sqi.net/img/general/cap/\",\n                \"sizes\": [\n                  30,\n                  45,\n                  60,\n                  90,\n                  120\n                ],\n                \"name\": \"/explore_autocomplete_ico_autocomplete_search_20180129.png\"\n              }\n            }\n          },\n          {\n            \"id\": \"651312ed897ae12f26abfcfd\",\n            \"entities\": [\n              {\n                \"indices\": [\n                  6,\n                  9\n                ],\n                \"type\": \"autocompleteMatch\"\n              }\n            ],\n            \"text\": \"Cafe, Coffee, and Tea House\",\n            \"type\": \"query\",\n            \"object\": {\n              \"querystring\": \"Cafe, Coffee, and Tea House\",\n              \"icon\": {\n                \"prefix\": \"https://irs1.4sqi.net/img/general/cap/\",\n                \"sizes\": [\n                  30,\n                  45,\n                  60,\n                  90,\n                  120\n                ],\n                \"name\": \"/catv2_food_coffeeshop_fsblue_20180129.png\"\n              },\n              \"additionalParams\": [\n                {\n                  \"interpHint\": [\n                    \"Category\"\n                  ]\n                }\n              ]\n            },\n            \"additionalParams\": {\n              \"interpHint\": [\n                \"Category\"\n              ]\n            }\n          },\n          {\n            \"id\": \"651312ed897ae12f26abfcfe\",\n            \"entities\": [\n              {\n                \"indices\": [\n                  18,\n                  21\n                ],\n                \"type\": \"autocompleteMatch\"\n              }\n            ],\n            \"text\": \"More results for 'cof'\",\n            \"type\": \"query\",\n            \"object\": {\n              \"querystring\": \"cof\"\n            }\n          }\n        ]\n      }\n    ],\n    \"requestid\": \"651312eda774726235afae21\"\n  }\n}"
                  }
                },
                "schema": {
                  "description": "Autocomplete results for a search query, including venue names and locations.",
                  "properties": {
                    "description": "Autocomplete responses for a search query.",
                    "meta": {
                      "description": "Metadata object containing additional information about the autocomplete response.",
                      "properties": {
                        "code": {
                          "default": 0,
                          "description": "The status code indicating the result of the autocomplete API request.",
                          "example": 200,
                          "type": "integer"
                        },
                        "description": "Response object containing metadata for the autocomplete search results.",
                        "requestId": {
                          "description": "The unique identifier for the API request.",
                          "example": "651312eda774726235afae21",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "notifications": {
                      "description": "Array of notification objects containing information about unread items.",
                      "items": {
                        "description": "List of notification objects containing information about unread items.",
                        "properties": {
                          "description": "Array of notification objects in the response.",
                          "item": {
                            "description": "Array of notification objects with information about the unread count associated with the autocomplete request.",
                            "properties": {
                              "description": "Response object containing notification information for a successful autocomplete search.",
                              "unreadCount": {
                                "default": 0,
                                "description": "Number of unread items in the notification associated with the search autocomplete response.",
                                "example": 3,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": {
                            "description": "Array of notification types for a successful autocomplete GET request.",
                            "example": "notificationTray",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "response": {
                      "description": "Object containing retrieved data for autocomplete search, including venue names and locations.",
                      "properties": {
                        "description": "Response object containing the retrieved data for autocomplete search results.",
                        "groups": {
                          "description": "Array of groups containing autocomplete results for a search query.",
                          "items": {
                            "description": "An array of venue objects containing information about the venues that match the autocomplete search query.",
                            "properties": {
                              "description": "Array of items containing information about suggested search results from the autocomplete API endpoint.",
                              "isPlaceholderGroup": {
                                "default": true,
                                "description": "Indicates whether or not the group is a placeholder group for search results.",
                                "example": false,
                                "type": "boolean"
                              },
                              "items": {
                                "description": "The response from a venue search autocomplete call contains an array of venues and their corresponding information.",
                                "items": {
                                  "description": "An array of venue objects containing autocomplete search results.",
                                  "properties": {
                                    "description": "A list of suggested search results for a given query.",
                                    "entities": {
                                      "description": "Array of entities associated with the items in the groups response for autocomplete search results.",
                                      "items": {
                                        "description": "Array of entities related to the items in the search results.",
                                        "properties": {
                                          "description": "Entities associated with an autocomplete match in a search query.",
                                          "indices": {
                                            "description": "Array of indices indicating where the entities are mentioned in the text.",
                                            "items": {
                                              "default": 0,
                                              "description": "The indices of entities found in the items of the items in the groups found in the response for autocomplete search.",
                                              "example": 0,
                                              "type": "integer"
                                            },
                                            "type": "array"
                                          },
                                          "type": {
                                            "description": "The type of entities for items in the response from an autocomplete search.",
                                            "example": "autocompleteMatch",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "type": "array"
                                    },
                                    "id": {
                                      "description": "The unique identifier for items within a list of search autocomplete responses.",
                                      "example": "651312ed897ae12f26abfcf5",
                                      "type": "string"
                                    },
                                    "object": {
                                      "description": "Object containing information about the items within the groups of the autocomplete search response.",
                                      "properties": {
                                        "description": "Array of photo objects containing additional information about each photo returned in the autocomplete search results.",
                                        "icon": {
                                          "description": "Icon for the object associated with a photo within a search autocomplete response.",
                                          "properties": {
                                            "description": "Response object containing the retrieved data for autocomplete suggestions, including icons for each suggestion.",
                                            "name": {
                                              "description": "Photo name",
                                              "example": "/dialpad_coffee_20180129.png",
                                              "type": "string"
                                            },
                                            "prefix": {
                                              "description": "URL Prefix.",
                                              "example": "https://irs1.4sqi.net/img/general/cap/",
                                              "type": "string"
                                            },
                                            "sizes": {
                                              "description": "Icon sizes for items in the response of the Foursquare autocomplete search endpoint.",
                                              "items": {
                                                "default": 0,
                                                "description": "Icon sizes for objects in the items of groups in autocomplete search responses.",
                                                "example": 30,
                                                "type": "integer"
                                              },
                                              "type": "array"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "querystring": {
                                          "description": "Array of autocomplete suggestions for a search query.",
                                          "example": "Coffee",
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "text": {
                                      "description": "Autocomplete response with 200 status code containing text from items in a group at a venue.",
                                      "example": "Coffee",
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "Response type of items in autocomplete search results.",
                                      "example": "query",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "type": {
                                "description": "Array of types of autocomplete search results.",
                                "example": "unified",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "requestid": {
                          "description": "Unique request identifier.",
                          "example": "651312eda774726235afae21",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "200"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "description": "Bad request error when attempting to autocomplete a search query.",
                  "properties": {
                    "description": "Autocomplete search failed due to invalid properties."
                  },
                  "type": "object"
                }
              }
            },
            "description": "400"
          }
        },
        "security": [
          {
            "ManagedUserTokenAuth": []
          }
        ],
        "summary": "Search for Autocomplete",
        "tags": [
          "Search"
        ]
      }
    },
    "/search/geoautocomplete": {
      "get": {
        "deprecated": false,
        "description": "Return geographic autocomplete search options based on the user's query.",
        "operationId": "geo-autocomplete-for-search",
        "parameters": [
          {
            "description": "The API version date as documented [here](/reference/versioning); e.g. 20231010",
            "in": "query",
            "name": "v",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A search term to be applied against titles.",
            "in": "query",
            "name": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"meta\": {\n    \"code\": 200,\n    \"requestId\": \"65131337cf4b6231c7927e08\"\n  },\n  \"notifications\": [\n    {\n      \"type\": \"notificationTray\",\n      \"item\": {\n        \"unreadCount\": 3\n      }\n    },\n    {\n      \"type\": \"unconfirmed\",\n      \"item\": {\n        \"unreadCount\": 0\n      }\n    }\n  ],\n  \"response\": {\n    \"results\": [\n      {\n        \"entities\": [\n          {\n            \"indices\": [\n              0,\n              3\n            ],\n            \"type\": \"autocompleteMatch\"\n          }\n        ],\n        \"text\": \"Coffeen, IL, United States\",\n        \"displayText\": \"Coffeen, IL, United States\",\n        \"geoId\": 72057594042164060,\n        \"ll\": {\n          \"lat\": 39.08921,\n          \"lng\": -89.39064\n        },\n        \"bounds\": {\n          \"ne\": {\n            \"lat\": 39.096855999999995,\n            \"lng\": -89.37964099999999\n          },\n          \"sw\": {\n            \"lat\": 39.077942,\n            \"lng\": -89.401917\n          }\n        },\n        \"type\": \"geocoder\"\n      },\n      {\n        \"entities\": [\n          {\n            \"indices\": [\n              0,\n              3\n            ],\n            \"type\": \"autocompleteMatch\"\n          }\n        ],\n        \"text\": \"Coffeyville, KS, United States\",\n        \"displayText\": \"Coffeyville, KS, United States\",\n        \"geoId\": 72057594042197730,\n        \"ll\": {\n          \"lat\": 37.0373,\n          \"lng\": -95.61637\n        },\n        \"bounds\": {\n          \"ne\": {\n            \"lat\": 37.100463,\n            \"lng\": -95.57616399999999\n          },\n          \"sw\": {\n            \"lat\": 37.007073,\n            \"lng\": -95.681896\n          }\n        },\n        \"type\": \"geocoder\"\n      },\n      {\n        \"entities\": [\n          {\n            \"indices\": [\n              0,\n              3\n            ],\n            \"type\": \"autocompleteMatch\"\n          }\n        ],\n        \"text\": \"Coffs Harbour, NSW, Australia\",\n        \"displayText\": \"Coffs Harbour, NSW, Australia\",\n        \"geoId\": 72057594040099020,\n        \"ll\": {\n          \"lat\": -30.29626,\n          \"lng\": 153.11351\n        },\n        \"bounds\": {\n          \"ne\": {\n            \"lat\": -30.261617006500018,\n            \"lng\": 153.15457222400002\n          },\n          \"sw\": {\n            \"lat\": -30.32083602450001,\n            \"lng\": 153.082098016\n          }\n        },\n        \"type\": \"geocoder\"\n      },\n      {\n        \"text\": \"UMQ Coffee | قهوة عـُمق\",\n        \"displayText\": \"UMQ Coffee | قهوة عـُمق\",\n        \"venueId\": \"5e00face028e6200084601aa\",\n        \"venuePhoto\": {\n          \"id\": \"635388dfce69400ab9175ad5\",\n          \"createdAt\": 1666418911,\n          \"prefix\": \"https://fastly.4sqi.net/img/general/\",\n          \"suffix\": \"/1372354206_k4atk2sDW76-FlC_uTPlYv5512_lpNO-uCYfbMBDXg0.jpg\",\n          \"width\": 1440,\n          \"height\": 1440,\n          \"visibility\": \"public\"\n        },\n        \"venueCategory\": {\n          \"id\": \"4bf58dd8d48988d1e0931735\",\n          \"name\": \"Coffee Shop\",\n          \"pluralName\": \"Coffee Shops\",\n          \"shortName\": \"Coffee Shop\",\n          \"icon\": {\n            \"prefix\": \"https://ss3.4sqi.net/img/categories_v2/food/coffeeshop_\",\n            \"suffix\": \".png\"\n          }\n        },\n        \"ll\": {\n          \"lat\": 26.397691,\n          \"lng\": 50.092241\n        },\n        \"type\": \"near_venue\"\n      }\n    ]\n  }\n}"
                  }
                },
                "schema": {
                  "description": "Suggested venues based on partial search query.",
                  "properties": {
                    "description": "Response object containing autocomplete data for a given location query.",
                    "meta": {
                      "description": "Object containing additional information about the response from a geo autocomplete search, including status code, unique request identifier, and any notifications.",
                      "properties": {
                        "code": {
                          "default": 0,
                          "description": "Response status code for the autocomplete search results.",
                          "example": 200,
                          "type": "integer"
                        },
                        "description": "Metadata object for successful response from the geo autocomplete search endpoint.",
                        "requestId": {
                          "description": "Unique identifier for the API request.",
                          "example": "65131337cf4b6231c7927e08",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "notifications": {
                      "description": "Array of notification objects containing information about the returned results.",
                      "items": {
                        "description": "Array of notification objects containing information about unread items.",
                        "properties": {
                          "description": "Array of notification objects with information about unread notifications in the notification tray.",
                          "item": {
                            "description": "Array of notification objects containing the type and number of unread items for a specific search query.",
                            "properties": {
                              "description": "Array of notification objects containing information about unread items.",
                              "unreadCount": {
                                "default": 0,
                                "description": "Number of unread items in the notification.",
                                "example": 3,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": {
                            "description": "The type of notification for a successful response to a geoautocomplete search.",
                            "example": "notificationTray",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "response": {
                      "description": "Response object containing the retrieved data for a geoautocomplete search query.",
                      "properties": {
                        "description": "Properties of the response object for the geoautocomplete search API endpoint, with status code 200.",
                        "results": {
                          "description": "Array of venue objects containing information about venues that match the user's search query.",
                          "items": {
                            "description": "An array of objects containing information about the top results for a geographic autocomplete search.",
                            "properties": {
                              "bounds": {
                                "description": "Properties for the geographical autocomplete search results, indicating the boundary coordinates for each item.",
                                "properties": {
                                  "description": "Array of bounding box coordinates for the search results.",
                                  "ne": {
                                    "description": "Boundary coordinates for a place returned in a geoautocomplete search response.",
                                    "properties": {
                                      "description": "The northeast corner of the bounding box for the location result in the response of a successful geoautocomplete search.",
                                      "lat": {
                                        "default": 0,
                                        "description": "Latitude coordinate for the North-East boundary of the location bounds in the response for the GET geo-autocomplete endpoint.",
                                        "example": 39.096855999999995,
                                        "type": "number"
                                      },
                                      "lng": {
                                        "default": 0,
                                        "description": "Longitude coordinate for the northeast boundary of the search results' bounding area.",
                                        "example": -89.37964099999999,
                                        "type": "number"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "sw": {
                                    "description": "Response object containing the southwest boundary coordinates for a location result from a geo-autocomplete search.",
                                    "properties": {
                                      "description": "Location bounds of the suggested result for a geo-autocomplete search query.",
                                      "lat": {
                                        "default": 0,
                                        "description": "Latitude coordinate of the southwest corner of the suggested bounding box for a location result from a geoautocomplete search.",
                                        "example": 39.077942,
                                        "type": "number"
                                      },
                                      "lng": {
                                        "default": 0,
                                        "description": "Longitude coordinate for the southwest corner of the bounding box for the results of a geospatial autocomplete search.",
                                        "example": -89.401917,
                                        "type": "number"
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              },
                              "description": "Array of venue objects containing information about the results of a geocoder autocomplete search.",
                              "displayText": {
                                "description": "Display text for the results of a geoautocomplete search.",
                                "example": "Coffeen, IL, United States",
                                "type": "string"
                              },
                              "entities": {
                                "description": "Array of entities returned by the geoautocomplete search endpoint.",
                                "items": {
                                  "description": "The response from the Geoautocomplete API endpoint includes the entities associated with the search results.",
                                  "properties": {
                                    "description": "Entities associated with auto-complete match results in a geo-autocomplete search.",
                                    "indices": {
                                      "description": "Indices of entities mentioned in the results of a geo-autocomplete search.",
                                      "items": {
                                        "default": 0,
                                        "description": "Array of indices indicating the start and end positions of entities in the response.",
                                        "example": 0,
                                        "type": "integer"
                                      },
                                      "type": "array"
                                    },
                                    "type": {
                                      "description": "The type of entities found in the results of a successful geoautocomplete search.",
                                      "example": "autocompleteMatch",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "geoId": {
                                "default": 0,
                                "description": "Unique identifier for the geographic location returned in the search results.",
                                "example": 72057594042164060,
                                "type": "integer"
                              },
                              "ll": {
                                "description": "The latitude and longitude coordinates for the items returned in the response for the geoautocomplete search.",
                                "properties": {
                                  "description": "Location coordinates for a list of search results.",
                                  "lat": {
                                    "default": 0,
                                    "description": "Latitude coordinate for the location of a venue suggested in a search using the Foursquare API.",
                                    "example": 39.08921,
                                    "type": "number"
                                  },
                                  "lng": {
                                    "default": 0,
                                    "description": "Longitude coordinate of the search results for geoautocomplete.",
                                    "example": -89.39064,
                                    "type": "number"
                                  }
                                },
                                "type": "object"
                              },
                              "text": {
                                "description": "The text of the autocomplete results for a geo search.",
                                "example": "Coffeen, IL, United States",
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of location suggestion from the Foursquare API geoautocomplete endpoint.",
                                "example": "geocoder",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "200"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "description": "Bad Request response when retrieving geo-autocomplete results.",
                  "properties": {
                    "description": "Response object containing properties for bad request (400) from the geoautocomplete search API."
                  },
                  "type": "object"
                }
              }
            },
            "description": "400"
          }
        },
        "security": [
          {
            "ManagedUserTokenAuth": []
          }
        ],
        "summary": "Search Geo Autocomplete",
        "tags": [
          "Search"
        ]
      }
    },
    "/search/recommendations": {
      "get": {
        "deprecated": false,
        "description": "Get recommended venues based on the user's query and location.",
        "operationId": "get-venue-recommendations",
        "parameters": [
          {
            "description": "The API version date as documented [here](/reference/versioning); e.g. 20231010",
            "in": "query",
            "name": "v",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A string to be searched against a venue's tips, category, etc. The query parameter has no effect when a section is specified.",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The latitude/longitude around which to retrieve place information. This must be specified as latitude,longitude (e.g., ll=41.8781,-87.6298). **Required if `near `is not specified.**",
            "in": "query",
            "name": "ll",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Limit results to venues within this many meters of the specified location. Defaults to a city-wide area. Only valid for requests that use categoryId or query. The maximum supported radius is currently 100,000 meters.",
            "in": "query",
            "name": "radius",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The latitude/longitude representing the south/west points of a rectangle. Must be used with ne parameter to specify a rectangular search box. Global search results will be omitted.",
            "in": "query",
            "name": "sw",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The latitude/longitude representing the north/east points of a rectangle. Must be used with sw parameter to specify a rectangular search box. Global search results will be omitted.",
            "in": "query",
            "name": "ne",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A string naming a place in the world. If the near string is not geocodable, returns a failed_geocode error. Otherwise, searches within the bounds of the geocode and adds a geocode object to the response. **Required if `ll` is not specified.**",
            "in": "query",
            "name": "near",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "One of food, drinks, coffee, shops, arts, outdoors, sights, trending, nextVenues (venues frequently visited after a given venue), or topPicks (a mix of recommendations generated without a query from the user). Choosing one of these limits results to venues with the specified category or property.",
            "in": "query",
            "name": "section",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A comma separated list of categories to limit results to. If you specify categoryId. Specifying a radius may improve results. If specifying a top-level category, all sub-categories will also match the query.",
            "in": "query",
            "name": "categoryId",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Pass `new` or `old` to limit results to places the acting user hasn't been or has been, respectively. Omitting this parameter returns a mixture of old and new venues.",
            "in": "query",
            "name": "novelty",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Pass `visited` or `notvisited` to limit results to places the acting user's friends have or haven't been, respectively. Omitting this parameter returns a mixture of venues to which the user's friends have or haven't been.",
            "in": "query",
            "name": "friendVisits",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Pass `any` to retrieve results for any time of day. Omitting this parameter returns results targeted to the current time of day.",
            "in": "query",
            "name": "time",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Pass `any` to retrieve results for any day of the week. Omitting this parameter returns results targeted to the current day of the week.",
            "in": "query",
            "name": "day",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A venue ID to use in combination with the `intent=nextVenues` parameter, which returns venues users often visit after a given venue. If `intent=nextVenues` is specified but `lastVenue` is not, the user's last check-in will be used if it is within 2 hours. If the user has not checked in within the last 2 hours, no results will be returned.",
            "in": "query",
            "name": "lastVenue",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Boolean flag to only include venues that are open now. This prefers official provider hours but falls back to popular check-in hours.",
            "in": "query",
            "name": "openNow",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Comma separated list of price points. Currently the valid range of price points are [1,2,3,4], 1 being the least expensive, 4 being the most expensive. For food venues, in the United States, 1 is < $10 an entree, 2 is $10-$20 an entree, 3 is $20-$30 an entree, 4 is > $30 an entree.",
            "in": "query",
            "name": "price",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Boolean flag to only include venues that the user has saved on their To-Do list or to another list.",
            "in": "query",
            "name": "saved",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Boolean flag to sort the results by distance instead of relevance.",
            "in": "query",
            "name": "sortByDistance",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Boolean flag to sort the results by popularity instead of relevance.",
            "in": "query",
            "name": "sortByPopularity",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Number of results to return; up to 50.",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Used to page through results, up to 50.",
            "in": "query",
            "name": "offset",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"meta\": {\n    \"code\": 200,\n    \"requestId\": \"6511d75a83245875ff2c1d75\"\n  },\n  \"notifications\": [\n    {\n      \"type\": \"notificationTray\",\n      \"item\": {\n        \"unreadCount\": 3\n      }\n    },\n    {\n      \"type\": \"unconfirmed\",\n      \"item\": {\n        \"unreadCount\": 0\n      }\n    }\n  ],\n  \"response\": {\n    \"group\": {\n      \"activeFilters\": {\n        \"refinements\": []\n      },\n      \"results\": [\n        {\n          \"displayType\": \"venue\",\n          \"venue\": {\n            \"id\": \"598eb122446ea6776a6083d4\",\n            \"name\": \"Bumbershoot\",\n            \"contact\": {},\n            \"location\": {\n              \"lat\": 47.6062095,\n              \"lng\": -122.3320708,\n              \"labeledLatLngs\": [\n                {\n                  \"label\": \"display\",\n                  \"lat\": 47.6062095,\n                  \"lng\": -122.3320708\n                }\n              ],\n              \"cc\": \"US\",\n              \"neighborhood\": \"Seattle Central Business District\",\n              \"city\": \"Seattle\",\n              \"state\": \"WA\",\n              \"country\": \"United States\",\n              \"contextLine\": \"Seattle Central Business District\",\n              \"contextGeoId\": 10545,\n              \"formattedAddress\": {\n                \"text\": \"Seattle, WA\",\n                \"entities\": []\n              }\n            },\n            \"categories\": [\n              {\n                \"id\": \"4bf58dd8d48988d1e5931735\",\n                \"name\": \"Music Venue\",\n                \"pluralName\": \"Music Venues\",\n                \"shortName\": \"Music Venue\",\n                \"icon\": {\n                  \"prefix\": \"https://ss3.4sqi.net/img/categories_v2/arts_entertainment/musicvenue_\",\n                  \"suffix\": \".png\"\n                },\n                \"primary\": true\n              }\n            ],\n            \"verified\": false,\n            \"stats\": {\n              \"tipCount\": 0,\n              \"usersCount\": 93,\n              \"checkinsCount\": 160\n            },\n            \"like\": false,\n            \"dislike\": false,\n            \"ok\": false,\n            \"allowMenuUrlEdit\": true,\n            \"beenHere\": {\n              \"count\": 0,\n              \"marked\": false,\n              \"lastCheckinExpiredAt\": 0\n            },\n            \"createdAt\": 1502523682,\n            \"popularityByGeo\": 0.2447043248014122\n          },\n          \"id\": \"6511d75af86d2d2e01e7cad7\",\n          \"photo\": {\n            \"id\": \"5b8c6eec31ac6c002cd351fb\",\n            \"createdAt\": 1535930092,\n            \"prefix\": \"https://fastly.4sqi.net/img/general/\",\n            \"suffix\": \"/23140670_CrPBOkZFynUP2g9RJV1zP1K26Dnm22lilJ6kaD-3IWI.jpg\",\n            \"width\": 1920,\n            \"height\": 1440,\n            \"visibility\": \"public\"\n          },\n          \"snippets\": {\n            \"count\": 1,\n            \"items\": [\n              {}\n            ]\n          }\n        },\n        {\n          \"displayType\": \"venue\",\n          \"venue\": {\n            \"id\": \"4c3a70261a38ef3b69229321\",\n            \"name\": \"Kurt Cobain Park\",\n            \"contact\": {},\n            \"location\": {\n              \"address\": \"seattle\",\n              \"lat\": 47.60629067594331,\n              \"lng\": -122.33209692664707,\n              \"labeledLatLngs\": [\n                {\n                  \"label\": \"display\",\n                  \"lat\": 47.60629067594331,\n                  \"lng\": -122.33209692664707\n                }\n              ],\n              \"cc\": \"US\",\n              \"neighborhood\": \"Seattle Central Business District\",\n              \"city\": \"Seattle\",\n              \"state\": \"WA\",\n              \"country\": \"United States\",\n              \"contextLine\": \"Seattle Central Business District\",\n              \"contextGeoId\": 10545,\n              \"formattedAddress\": {\n                \"text\": \"seattle\\nSeattle, WA\",\n                \"entities\": []\n              }\n            },\n            \"categories\": [\n              {\n                \"id\": \"4bf58dd8d48988d163941735\",\n                \"name\": \"Park\",\n                \"pluralName\": \"Parks\",\n                \"shortName\": \"Park\",\n                \"icon\": {\n                  \"prefix\": \"https://ss3.4sqi.net/img/categories_v2/parks_outdoors/park_\",\n                  \"suffix\": \".png\"\n                },\n                \"primary\": true\n              }\n            ],\n            \"verified\": false,\n            \"stats\": {\n              \"tipCount\": 0,\n              \"usersCount\": 93,\n              \"checkinsCount\": 132\n            },\n            \"like\": false,\n            \"dislike\": false,\n            \"ok\": false,\n            \"beenHere\": {\n              \"count\": 0,\n              \"marked\": false,\n              \"lastCheckinExpiredAt\": 0\n            },\n            \"createdAt\": 1278898214,\n            \"popularityByGeo\": 0.8409378717525615\n          },\n          \"id\": \"6511d75af86d2d2e01e7cad8\",\n          \"photo\": {\n            \"id\": \"512332eae4b09e75f11b55a7\",\n            \"createdAt\": 1361261290,\n            \"prefix\": \"https://fastly.4sqi.net/img/general/\",\n            \"suffix\": \"/43968679_2mbM2Ik8Q52qYzSjw-kzV8igc0L8TTd9s6YgEvYm8zg.jpg\",\n            \"width\": 640,\n            \"height\": 640,\n            \"visibility\": \"public\"\n          },\n          \"snippets\": {\n            \"count\": 1,\n            \"items\": [\n              {}\n            ]\n          }\n        },\n        {\n          \"displayType\": \"venue\",\n          \"venue\": {\n            \"id\": \"4cc37e8bbde8f04d36b4a54b\",\n            \"name\": \"Runway Shoes\",\n            \"contact\": {\n              \"phone\": \"2066823355\",\n              \"formattedPhone\": \"(206) 682-3355\"\n            },\n            \"location\": {\n              \"address\": \"400 Pine St\",\n              \"lat\": 47.606206922022494,\n              \"lng\": -122.33207005141776,\n              \"labeledLatLngs\": [\n                {\n                  \"label\": \"display\",\n                  \"lat\": 47.606206922022494,\n                  \"lng\": -122.33207005141776\n                }\n              ],\n              \"postalCode\": \"98101\",\n              \"cc\": \"US\",\n              \"neighborhood\": \"Seattle Central Business District\",\n              \"city\": \"Seattle\",\n              \"state\": \"WA\",\n              \"country\": \"United States\",\n              \"contextLine\": \"Seattle Central Business District\",\n              \"contextGeoId\": 10545,\n              \"formattedAddress\": {\n                \"text\": \"400 Pine St\\nSeattle, WA 98101\",\n                \"entities\": []\n              }\n            },\n            \"categories\": [\n              {\n                \"id\": \"4bf58dd8d48988d107951735\",\n                \"name\": \"Shoe Store\",\n                \"pluralName\": \"Shoe Stores\",\n                \"shortName\": \"Shoes\",\n                \"icon\": {\n                  \"prefix\": \"https://ss3.4sqi.net/img/categories_v2/shops/apparel_shoestore_\",\n                  \"suffix\": \".png\"\n                },\n                \"primary\": true\n              }\n            ],\n            \"verified\": false,\n            \"stats\": {\n              \"tipCount\": 0,\n              \"usersCount\": 10,\n              \"checkinsCount\": 10\n            },\n            \"like\": false,\n            \"dislike\": false,\n            \"ok\": false,\n            \"allowMenuUrlEdit\": true,\n            \"beenHere\": {\n              \"count\": 0,\n              \"marked\": false,\n              \"lastCheckinExpiredAt\": 0\n            },\n            \"createdAt\": 1287880331,\n            \"popularityByGeo\": 0.45596530949000347\n          },\n          \"id\": \"6511d75af86d2d2e01e7cad9\",\n          \"snippets\": {\n            \"count\": 1,\n            \"items\": [\n              {}\n            ]\n          }\n        },\n        {\n          \"displayType\": \"venue\",\n          \"venue\": {\n            \"id\": \"4f295e9ae4b015f8e493edb3\",\n            \"name\": \"Redbox\",\n            \"contact\": {\n              \"phone\": \"8667332693\",\n              \"formattedPhone\": \"(866) 733-2693\",\n              \"twitter\": \"redbox\"\n            },\n            \"location\": {\n              \"address\": \"910 4th Ave\",\n              \"lat\": 47.605799,\n              \"lng\": -122.33195400000001,\n              \"labeledLatLngs\": [\n                {\n                  \"label\": \"display\",\n                  \"lat\": 47.605799,\n                  \"lng\": -122.33195400000001\n                },\n                {\n                  \"label\": \"entrance\",\n                  \"lat\": 47.605668,\n                  \"lng\": -122.332253\n                }\n              ],\n              \"cc\": \"US\",\n              \"neighborhood\": \"Seattle Central Business District\",\n              \"city\": \"Seattle\",\n              \"state\": \"WA\",\n              \"country\": \"United States\",\n              \"contextLine\": \"Seattle Central Business District\",\n              \"contextGeoId\": 10545,\n              \"formattedAddress\": {\n                \"text\": \"910 4th Ave\\nSeattle, WA\",\n                \"entities\": []\n              }\n            },\n            \"categories\": [\n              {\n                \"id\": \"4bf58dd8d48988d126951735\",\n                \"name\": \"Video Store\",\n                \"pluralName\": \"Video Stores\",\n                \"shortName\": \"Video Store\",\n                \"icon\": {\n                  \"prefix\": \"https://ss3.4sqi.net/img/categories_v2/shops/video_\",\n                  \"suffix\": \".png\"\n                },\n                \"primary\": true\n              }\n            ],\n            \"verified\": false,\n            \"stats\": {\n              \"tipCount\": 2,\n              \"usersCount\": 2,\n              \"checkinsCount\": 5\n            },\n            \"url\": \"http://www.redbox.com/locations/washington/seattle/98164/53870\",\n            \"like\": false,\n            \"dislike\": false,\n            \"ok\": false,\n            \"allowMenuUrlEdit\": true,\n            \"beenHere\": {\n              \"count\": 0,\n              \"marked\": false,\n              \"lastCheckinExpiredAt\": 0\n            },\n            \"storeId\": \"53870\",\n            \"createdAt\": 1328111258,\n            \"popularityByGeo\": 0.5667907440807398\n          },\n          \"id\": \"6511d75af86d2d2e01e7cada\",\n          \"snippets\": {\n            \"count\": 1,\n            \"items\": [\n              {\n                \"detail\": {\n                  \"type\": \"tip\",\n                  \"object\": {\n                    \"id\": \"4fcd64b2e4b083992ded6c03\",\n                    \"createdAt\": 1338860722,\n                    \"text\": \"Free rental with code BREAKROOM!\",\n                    \"type\": \"user\",\n                    \"canonicalUrl\": \"https://foursquare.com/item/4fcd64b2e4b083992ded6c03\",\n                    \"logView\": true,\n                    \"agreeCount\": 0,\n                    \"disagreeCount\": 0,\n                    \"todo\": {\n                      \"count\": 0\n                    },\n                    \"user\": {\n                      \"id\": \"12345\",\n                      \"firstName\": \"John\",\n                      \"lastName\": \"Smith\",\n                      \"handle\": \"johnsmith\",\n                      \"privateProfile\": false,\n                      \"gender\": \"male\",\n                      \"countryCode\": \"US\",\n                      \"followingRelationship\": \"none\",\n                      \"photo\": {\n                        \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n                        \"suffix\": \"/blank_boy.png\"\n                      },\n                      \"isAnonymous\": false\n                    }\n                  }\n                }\n              }\n            ]\n          }\n        },\n        {\n          \"displayType\": \"venue\",\n          \"venue\": {\n            \"id\": \"6088557b3b51f03ff4c4b859\",\n            \"name\": \"Rental Car\",\n            \"contact\": {\n              \"phone\": \"2058299988\",\n              \"formattedPhone\": \"(205) 829-9988\"\n            },\n            \"location\": {\n              \"address\": \"3060th St Ste #3150\",\n              \"lat\": 47.60621,\n              \"lng\": -122.332071,\n              \"labeledLatLngs\": [\n                {\n                  \"label\": \"display\",\n                  \"lat\": 47.60621,\n                  \"lng\": -122.332071\n                }\n              ],\n              \"postalCode\": \"98187\",\n              \"cc\": \"US\",\n              \"neighborhood\": \"Seattle Central Business District\",\n              \"city\": \"Seattle\",\n              \"state\": \"MI\",\n              \"country\": \"United States\",\n              \"contextLine\": \"Seattle Central Business District, Seattle\",\n              \"contextGeoId\": 10545,\n              \"formattedAddress\": {\n                \"text\": \"3060th St Ste #3150\\nSeattle, MI 98187\",\n                \"entities\": []\n              }\n            },\n            \"categories\": [\n              {\n                \"id\": \"4bf58dd8d48988d18f941735\",\n                \"name\": \"Art Museum\",\n                \"pluralName\": \"Art Museums\",\n                \"shortName\": \"Art Museum\",\n                \"icon\": {\n                  \"prefix\": \"https://ss3.4sqi.net/img/categories_v2/arts_entertainment/museum_art_\",\n                  \"suffix\": \".png\"\n                },\n                \"primary\": true\n              }\n            ],\n            \"verified\": true,\n            \"stats\": {\n              \"tipCount\": 0,\n              \"usersCount\": 0,\n              \"checkinsCount\": 0\n            },\n            \"like\": false,\n            \"dislike\": false,\n            \"ok\": false,\n            \"allowMenuUrlEdit\": true,\n            \"beenHere\": {\n              \"count\": 0,\n              \"marked\": false,\n              \"lastCheckinExpiredAt\": 0\n            },\n            \"venuePage\": {\n              \"id\": \"1367756703\"\n            },\n            \"createdAt\": 1619547515,\n            \"popularityByGeo\": 0.7351490847691776\n          },\n          \"id\": \"6511d75af86d2d2e01e7cadb\",\n          \"snippets\": {\n            \"count\": 1,\n            \"items\": [\n              {}\n            ]\n          }\n        },\n        {\n          \"displayType\": \"venue\",\n          \"venue\": {\n            \"id\": \"57604c65498e9f55fc786d89\",\n            \"name\": \"Electronic Discovery Service\",\n            \"contact\": {\n              \"phone\": \"2069000856\",\n              \"formattedPhone\": \"(206) 900-0856\"\n            },\n            \"location\": {\n              \"address\": \"1001 4th Ave #3200\",\n              \"lat\": 47.60611964208563,\n              \"lng\": -122.33263492584227,\n              \"labeledLatLngs\": [\n                {\n                  \"label\": \"display\",\n                  \"lat\": 47.60611964208563,\n                  \"lng\": -122.33263492584227\n                }\n              ],\n              \"postalCode\": \"98154\",\n              \"cc\": \"US\",\n              \"neighborhood\": \"Seattle Central Business District\",\n              \"city\": \"Seattle\",\n              \"state\": \"WA\",\n              \"country\": \"United States\",\n              \"contextLine\": \"Seattle Central Business District\",\n              \"contextGeoId\": 10545,\n              \"formattedAddress\": {\n                \"text\": \"1001 4th Ave #3200\\nSeattle, WA 98154\",\n                \"entities\": []\n              }\n            },\n            \"categories\": [\n              {\n                \"id\": \"4bf58dd8d48988d122951735\",\n                \"name\": \"Electronics Store\",\n                \"pluralName\": \"Electronics Stores\",\n                \"shortName\": \"Electronics\",\n                \"icon\": {\n                  \"prefix\": \"https://ss3.4sqi.net/img/categories_v2/shops/technology_\",\n                  \"suffix\": \".png\"\n                },\n                \"primary\": true\n              }\n            ],\n            \"verified\": false,\n            \"stats\": {\n              \"tipCount\": 0,\n              \"usersCount\": 1,\n              \"checkinsCount\": 1\n            },\n            \"like\": false,\n            \"dislike\": false,\n            \"ok\": false,\n            \"allowMenuUrlEdit\": true,\n            \"beenHere\": {\n              \"count\": 0,\n              \"marked\": false,\n              \"lastCheckinExpiredAt\": 0\n            },\n            \"createdAt\": 1465928805,\n            \"popularityByGeo\": 0.29095514025864383\n          },\n          \"id\": \"6511d75af86d2d2e01e7cadc\",\n          \"snippets\": {\n            \"count\": 1,\n            \"items\": [\n              {}\n            ]\n          }\n        },\n        {\n          \"displayType\": \"venue\",\n          \"venue\": {\n            \"id\": \"62192ae5a9596e4f9acc51b5\",\n            \"name\": \"Comfy Zone US LLC\",\n            \"contact\": {\n              \"phone\": \"6575168759\",\n              \"formattedPhone\": \"(657) 516-8759\"\n            },\n            \"location\": {\n              \"address\": \"7511 Greenwood Ave N No 4106\",\n              \"lat\": 47.60618056280742,\n              \"lng\": -122.33191341161726,\n              \"labeledLatLngs\": [\n                {\n                  \"label\": \"display\",\n                  \"lat\": 47.60618056280742,\n                  \"lng\": -122.33191341161726\n                }\n              ],\n              \"postalCode\": \"98103\",\n              \"cc\": \"US\",\n              \"neighborhood\": \"Seattle Central Business District\",\n              \"city\": \"Seattle\",\n              \"state\": \"WA\",\n              \"country\": \"United States\",\n              \"contextLine\": \"Seattle Central Business District\",\n              \"contextGeoId\": 10545,\n              \"formattedAddress\": {\n                \"text\": \"7511 Greenwood Ave N No 4106\\nSeattle, WA 98103\",\n                \"entities\": []\n              }\n            },\n            \"categories\": [\n              {\n                \"id\": \"4bf58dd8d48988d1f8941735\",\n                \"name\": \"Furniture and Home Store\",\n                \"pluralName\": \"Furniture and Home Stores\",\n                \"shortName\": \"Furniture and Home Store\",\n                \"icon\": {\n                  \"prefix\": \"https://ss3.4sqi.net/img/categories_v2/shops/furniture_\",\n                  \"suffix\": \".png\"\n                },\n                \"primary\": true\n              }\n            ],\n            \"verified\": false,\n            \"stats\": {\n              \"tipCount\": 0,\n              \"usersCount\": 0,\n              \"checkinsCount\": 0\n            },\n            \"like\": false,\n            \"dislike\": false,\n            \"ok\": false,\n            \"allowMenuUrlEdit\": true,\n            \"beenHere\": {\n              \"count\": 0,\n              \"marked\": false,\n              \"lastCheckinExpiredAt\": 0\n            },\n            \"createdAt\": 1645816549,\n            \"popularityByGeo\": 0.8192179285467592\n          },\n          \"id\": \"6511d75af86d2d2e01e7cadd\",\n          \"snippets\": {\n            \"count\": 1,\n            \"items\": [\n              {}\n            ]\n          }\n        }\n      ],\n      \"totalResults\": 7\n    },\n    \"context\": {\n      \"searchLocationNearYou\": false,\n      \"searchLocationMapBounds\": false,\n      \"searchLocationType\": \"NearGeo\",\n      \"currentLocation\": {\n        \"what\": \"\",\n        \"where\": \"seattle wa\",\n        \"feature\": {\n          \"cc\": \"US\",\n          \"name\": \"Seattle\",\n          \"displayName\": \"Seattle, WA, United States\",\n          \"matchedName\": \"Seattle, WA, United States\",\n          \"highlightedName\": \"<b>Seattle</b>, <b>WA</b>, United States\",\n          \"woeType\": 7,\n          \"slug\": \"seattle-washington\",\n          \"id\": \"geonameid:5809844\",\n          \"longId\": \"72057594043737780\",\n          \"geometry\": {\n            \"center\": {\n              \"lat\": 47.60621,\n              \"lng\": -122.33207\n            },\n            \"bounds\": {\n              \"ne\": {\n                \"lat\": 47.734145,\n                \"lng\": -122.224433\n              },\n              \"sw\": {\n                \"lat\": 47.481719999999996,\n                \"lng\": -122.459696\n              }\n            }\n          }\n        },\n        \"parents\": []\n      },\n      \"relatedNeighborhoods\": [],\n      \"geoParams\": {\n        \"ll\": \"47.60621,-122.33207\",\n        \"radius\": \"20\"\n      },\n      \"geoBounds\": {\n        \"circle\": {\n          \"center\": {\n            \"lat\": 47.60621,\n            \"lng\": -122.33207\n          },\n          \"radius\": 20\n        }\n      },\n      \"currency\": \"$\"\n    }\n  }\n}"
                  }
                },
                "schema": {
                  "description": "This object contains a successful response for a venue recommendation search.",
                  "properties": {
                    "description": "Properties of a successful response for retrieving recommendations from a search.",
                    "meta": {
                      "description": "Metadata object containing additional information about the response.",
                      "properties": {
                        "code": {
                          "default": 0,
                          "description": "Status code indicating the result of the API request.",
                          "example": 200,
                          "type": "integer"
                        },
                        "description": "Metadata object containing additional information about the response.",
                        "requestId": {
                          "description": "The request ID for retrieving recommended search responses with a successful status code.",
                          "example": "6511d75a83245875ff2c1d75",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "notifications": {
                      "description": "Array of notification objects containing information about unread items in a recommended search response.",
                      "items": {
                        "description": "Array of notification objects containing information about the recommended items.",
                        "properties": {
                          "description": "Array of notification objects for recommended items in the notification tray.",
                          "item": {
                            "description": "Array of notification objects containing the type and number of unread items for each recommendation.",
                            "properties": {
                              "description": "Response from the '/search/recommendations.get' endpoint for retrieving recommendations with 200 status code, containing properties for notifications, items, and associated items.",
                              "unreadCount": {
                                "default": 0,
                                "description": "Number of unread items in the notification.",
                                "example": 3,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": {
                            "description": "Type of notification for 200 response from recommendations search.",
                            "example": "notificationTray",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "response": {
                      "description": "A list of recommended venues and photos based on the user's search query.",
                      "properties": {
                        "context": {
                          "description": "Response object containing additional information about the recommended venues within a specified context.",
                          "properties": {
                            "currency": {
                              "description": "Currency information for recommended properties within a search context.",
                              "example": "$",
                              "type": "string"
                            },
                            "currentLocation": {
                              "description": "Current location of the recommended response.",
                              "properties": {
                                "description": "Current location of the user for recommended search results.",
                                "feature": {
                                  "description": "Current location feature for recommendations search response.",
                                  "properties": {
                                    "cc": {
                                      "description": "Current location feature properties and country code for the response of a successful recommendations search.",
                                      "example": "US",
                                      "type": "string"
                                    },
                                    "description": "Response object containing recommended venues for the user's current location.",
                                    "displayName": {
                                      "description": "The display name of the current location feature for the recommendation response.",
                                      "example": "Seattle, WA, United States",
                                      "type": "string"
                                    },
                                    "geometry": {
                                      "description": "Current location feature geometry of the response from a successful recommendations search.",
                                      "properties": {
                                        "bounds": {
                                          "description": "Response object containing recommended venues based on current location and search parameters.",
                                          "properties": {
                                            "description": "Retrieve recommended locations based on current location, including geometry and bounds information.",
                                            "ne": {
                                              "description": "Latitude and longitude coordinates for the northeast corner of the recommended location's geometry bounding box.",
                                              "properties": {
                                                "description": "Response object containing current location feature geometry bounds northeast coordinate information for recommended search results.",
                                                "lat": {
                                                  "default": 0,
                                                  "description": "The latitude coordinate of the northeast corner of the recommended feature's bounding box.",
                                                  "example": 47.734145,
                                                  "type": "number"
                                                },
                                                "lng": {
                                                  "default": 0,
                                                  "description": "Longitude coordinate of the northeast corner of the current location's feature's geometry's bounds.",
                                                  "example": -122.224433,
                                                  "type": "number"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "sw": {
                                              "description": "The object contains the southwest bounds of the current location's feature geometry in a recommendations search response.",
                                              "properties": {
                                                "description": "Response object for retrieving recommendations, containing information about the current location's feature geometry and its southwest boundary.",
                                                "lat": {
                                                  "default": 0,
                                                  "description": "The southwest latitude coordinate for the bounding box of recommended features in the current location context.",
                                                  "example": 47.481719999999996,
                                                  "type": "number"
                                                },
                                                "lng": {
                                                  "default": 0,
                                                  "description": "Th southwest longitude coordinate for the bounding box of recommended features in the current location context.",
                                                  "example": -122.459696,
                                                  "type": "number"
                                                }
                                              },
                                              "type": "object"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "center": {
                                          "description": "Location of the current center point for the recommended search features.",
                                          "properties": {
                                            "description": "Response object containing the current location's geographic coordinates for a recommended search.",
                                            "lat": {
                                              "default": 0,
                                              "description": "Latitude coordinate of the center of the current location feature in the response from a successful recommendations search.",
                                              "example": 47.60621,
                                              "type": "number"
                                            },
                                            "lng": {
                                              "default": 0,
                                              "description": "Longitude coordinate of the center of the geometry feature for the current location context in the response properties of the 200 response for recommendations from a search.",
                                              "example": -122.33207,
                                              "type": "number"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "description": "Current location context feature geometry for search recommendations."
                                      },
                                      "type": "object"
                                    },
                                    "highlightedName": {
                                      "description": "The highlighted name of current location feature in response context properties for current location recommendations.",
                                      "example": "<b>Seattle</b>, <b>WA</b>, United States",
                                      "type": "string"
                                    },
                                    "id": {
                                      "description": "Response object for retrieving recommendations, current location, and feature ID.",
                                      "example": "geonameid:5809844",
                                      "type": "string"
                                    },
                                    "longId": {
                                      "description": "Recommended responses for a search with current location feature and unique identifier.",
                                      "example": "72057594043737780",
                                      "type": "string"
                                    },
                                    "matchedName": {
                                      "description": "The current location's matched name from the response's context and feature properties for the recommendations from the search.",
                                      "example": "Seattle, WA, United States",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Recommended responses for current location feature name in context of current location.",
                                      "example": "Seattle",
                                      "type": "string"
                                    },
                                    "slug": {
                                      "description": "Current location feature slug for recommended search responses.",
                                      "example": "seattle-washington",
                                      "type": "string"
                                    },
                                    "woeType": {
                                      "default": 0,
                                      "description": "The type of location where the current context is being searched.",
                                      "example": 7,
                                      "type": "integer"
                                    }
                                  },
                                  "type": "object"
                                },
                                "parents": {
                                  "description": "Array of parent locations near the current location in the response for venue recommendations.",
                                  "type": "array"
                                },
                                "what": {
                                  "example": "",
                                  "type": "string"
                                },
                                "where": {
                                  "description": "The current location for recommended venues in a search response.",
                                  "example": "seattle wa",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "description": "Response object containing recommended items based on a given context.",
                            "geoBounds": {
                              "description": "Response object containing geo bounds for recommended search results.",
                              "properties": {
                                "circle": {
                                  "description": "Response object containing recommended venues within a specified geographical area.",
                                  "properties": {
                                    "center": {
                                      "description": "Response object containing the recommended venues within a circular geographic boundary.",
                                      "properties": {
                                        "description": "A list of recommended venues within a specified geographic area.",
                                        "lat": {
                                          "default": 0,
                                          "description": "Latitude coordinate for the center of a circular geographic boundary within the context of a response object for property recommendations returned by a successful search query.",
                                          "example": 47.60621,
                                          "type": "number"
                                        },
                                        "lng": {
                                          "default": 0,
                                          "description": "Latitude coordinate of the center of the search area.",
                                          "example": -122.33207,
                                          "type": "number"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "description": "The geographic boundaries for the recommended venues within a given radius.",
                                    "radius": {
                                      "default": 0,
                                      "description": "The radius of the geographical bounds for the context of a successful response from the recommendations search.",
                                      "example": 20,
                                      "type": "integer"
                                    }
                                  },
                                  "type": "object"
                                },
                                "description": "Recommended properties within a specific geographical boundary."
                              },
                              "type": "object"
                            },
                            "geoParams": {
                              "description": "Responses for recommendations with geo parameters within a given context.",
                              "properties": {
                                "description": "Recommended responses for a given geo location.",
                                "ll": {
                                  "description": "The longitude/latitude pair for the location.",
                                  "example": "47.60621,-122.33207",
                                  "type": "string"
                                },
                                "radius": {
                                  "description": "The geo radius property.",
                                  "example": "20",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "relatedNeighborhoods": {
                              "description": "Array of neighborhoods related to the recommended search location.",
                              "type": "array"
                            },
                            "searchLocationMapBounds": {
                              "default": true,
                              "description": "Search recommendations for a specific location within a given map boundary.",
                              "example": false,
                              "type": "boolean"
                            },
                            "searchLocationNearYou": {
                              "default": true,
                              "description": "Recommendations near the user's location.",
                              "example": false,
                              "type": "boolean"
                            },
                            "searchLocationType": {
                              "description": "The type of search location.",
                              "example": "NearGeo",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "description": "List of recommended venues and their properties.",
                        "group": {
                          "description": "Response object containing recommended groups for the given search parameters.",
                          "properties": {
                            "activeFilters": {
                              "description": "Active filters for recommended groups in a response from the group search recommendations endpoint.",
                              "properties": {
                                "description": "Response object containing the active filters for the recommendations group within the search results.",
                                "refinements": {
                                  "description": "Active filters and refinements for recommended groups in the response from a successful recommendations search.",
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            },
                            "description": "Response object containing recommended venues for a given search query.",
                            "results": {
                              "description": "Array of recommended results for a given search query.",
                              "items": {
                                "description": "An array of recommended venues with their associated details, returned as part of a successful search recommendation response.",
                                "properties": {
                                  "description": "List of recommended search results from the API response.",
                                  "displayType": {
                                    "description": "Display types of recommended results for a search query.",
                                    "example": "venue",
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "Unique identifier for the recommended results in the response.",
                                    "example": "6511d75af86d2d2e01e7cad7",
                                    "type": "string"
                                  },
                                  "photo": {
                                    "description": "Photo objects containing information about recommended photos for a search query.",
                                    "properties": {
                                      "createdAt": {
                                        "default": 0,
                                        "description": "Timestamp indicating when the photo was created; UNIX timestamp in seconds since Epoch.",
                                        "example": 1535930092,
                                        "type": "integer"
                                      },
                                      "description": "Array of photo objects containing information about recommended photos for a specific search query.",
                                      "height": {
                                        "default": 0,
                                        "description": "Height of the photo in pixels for a recommendation result in a search response.",
                                        "example": 1440,
                                        "type": "integer"
                                      },
                                      "id": {
                                        "description": "Unique identifier for the photo associated with a recommended search result.",
                                        "example": "5b8c6eec31ac6c002cd351fb",
                                        "type": "string"
                                      },
                                      "prefix": {
                                        "description": "Prefix for photo URL of recommended search results.",
                                        "example": "https://fastly.4sqi.net/img/general/",
                                        "type": "string"
                                      },
                                      "suffix": {
                                        "description": "Photo suffix for recommended search results from group.",
                                        "example": "/23140670_CrPBOkZFynUP2g9RJV1zP1K26Dnm22lilJ6kaD-3IWI.jpg",
                                        "type": "string"
                                      },
                                      "visibility": {
                                        "description": "The visibility property for photos in the results of a recommendations search response.",
                                        "example": "public",
                                        "type": "string"
                                      },
                                      "width": {
                                        "default": 0,
                                        "description": "Width of the photo associated with the recommendation results for a search query.",
                                        "example": 1920,
                                        "type": "integer"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "snippets": {
                                    "description": "Recommendation search results snippets for the specified group.",
                                    "properties": {
                                      "count": {
                                        "default": 0,
                                        "description": "Number of snippets in the recommendation results.",
                                        "example": 1,
                                        "type": "integer"
                                      },
                                      "description": "Search recommendations for results containing snippets of properties. ",
                                      "items": {
                                        "description": "List of snippets containing information about recommended results for a search query.",
                                        "items": {
                                          "description": "Array of snippets containing recommended items from the search results.",
                                          "properties": {
                                            "description": "Response object containing a list of snippets for recommended search results."
                                          },
                                          "type": "object"
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "venue": {
                                    "description": "Venue object containing information about a recommended venue.",
                                    "properties": {
                                      "allowMenuUrlEdit": {
                                        "default": true,
                                        "description": "Flag indicating if the user is allowed to edit the menu URL for this venue.",
                                        "example": true,
                                        "type": "boolean"
                                      },
                                      "beenHere": {
                                        "description": "Venue's been here status for a recommended location.",
                                        "properties": {
                                          "count": {
                                            "default": 0,
                                            "description": "Number of times the user has been to the recommended venue.",
                                            "example": 0,
                                            "type": "integer"
                                          },
                                          "description": "Details about whether or not the user has visited the recommended venue.",
                                          "lastCheckinExpiredAt": {
                                            "default": 0,
                                            "description": "Last time user checked in at this venue expired; UNIX timestamp in seconds since Epoch.",
                                            "example": 0,
                                            "type": "integer"
                                          },
                                          "marked": {
                                            "default": true,
                                            "description": "Indicates whether or not the user has marked the venue as \"been here\".",
                                            "example": false,
                                            "type": "boolean"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "categories": {
                                        "description": "Categories for recommended venues in a search result.",
                                        "items": {
                                          "description": "Array of categories associated with the venue.",
                                          "properties": {
                                            "description": "Recommended categories for a specific venue in a response from a search query.",
                                            "icon": {
                                              "description": "The icon for the recommended venue category for the results of a user search.",
                                              "properties": {
                                                "description": "Icon for the category of a venue.",
                                                "prefix": {
                                                  "description": "Prefix for the icon URL of the recommended venue's category.",
                                                  "example": "https://ss3.4sqi.net/img/categories_v2/arts_entertainment/musicvenue_",
                                                  "type": "string"
                                                },
                                                "suffix": {
                                                  "description": "Image suffix.",
                                                  "example": ".png",
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "id": {
                                              "description": "Unique identifier for the category associated with recommended venues in a search response.",
                                              "example": "4bf58dd8d48988d1e5931735",
                                              "type": "string"
                                            },
                                            "name": {
                                              "description": "Name of the category for the recommended venue.",
                                              "example": "Music Venue",
                                              "type": "string"
                                            },
                                            "pluralName": {
                                              "description": "Plural name of the categories associated with recommended venues in a search response.",
                                              "example": "Music Venues",
                                              "type": "string"
                                            },
                                            "primary": {
                                              "default": true,
                                              "description": "Primary category for recommended venue in response results.",
                                              "example": true,
                                              "type": "boolean"
                                            },
                                            "shortName": {
                                              "description": "The short name of the categories associated with the recommended venues in the search results.",
                                              "example": "Music Venue",
                                              "type": "string"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "type": "array"
                                      },
                                      "contact": {
                                        "description": "Contact information for the recommended venue.",
                                        "properties": {
                                          "description": "Contact information for venues recommended in a search response."
                                        },
                                        "type": "object"
                                      },
                                      "createdAt": {
                                        "default": 0,
                                        "description": "Timestamp indicating when the venue was created; UNIX timestamp in seconds since Epoch.",
                                        "example": 1502523682,
                                        "type": "integer"
                                      },
                                      "description": "Recommended venues for the given search criteria.",
                                      "dislike": {
                                        "default": true,
                                        "description": "Flag indicating if the user disliked the recommended venue.",
                                        "example": false,
                                        "type": "boolean"
                                      },
                                      "id": {
                                        "description": "The unique identifier for the venue in the search recommendations results.",
                                        "example": "598eb122446ea6776a6083d4",
                                        "type": "string"
                                      },
                                      "like": {
                                        "default": true,
                                        "description": "Flag indicating if the user has liked the recommended venue.",
                                        "example": false,
                                        "type": "boolean"
                                      },
                                      "location": {
                                        "description": "Array of recommended venues with their locations.",
                                        "properties": {
                                          "cc": {
                                            "description": "Country code.",
                                            "example": "US",
                                            "type": "string"
                                          },
                                          "city": {
                                            "description": "City location for recommended venues in search results.",
                                            "example": "Seattle",
                                            "type": "string"
                                          },
                                          "contextGeoId": {
                                            "default": 0,
                                            "description": "Recommended venues with location context.",
                                            "example": 10545,
                                            "type": "integer"
                                          },
                                          "contextLine": {
                                            "description": "The context line of the venue's location. ",
                                            "example": "Seattle Central Business District",
                                            "type": "string"
                                          },
                                          "country": {
                                            "description": "The country of the recommended venue.",
                                            "example": "United States",
                                            "type": "string"
                                          },
                                          "description": "An array of recommended venues with their corresponding location information, including distance from the user's location, for a successful search request.",
                                          "formattedAddress": {
                                            "description": "Formatted address of the venue associated with a search recommendation result.",
                                            "properties": {
                                              "description": "Formatted address of a recommended venue's location.",
                                              "entities": {
                                                "description": "Formatted address entities for recommended venues from search results.",
                                                "type": "array"
                                              },
                                              "text": {
                                                "description": "The address of the recommended venue.",
                                                "example": "Seattle, WA",
                                                "type": "string"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "labeledLatLngs": {
                                            "description": "Array of labeled latitude and longitude coordinates for recommended venues in a search result.",
                                            "items": {
                                              "description": "Labeled latitude and longitude coordinates for venues in a recommended search result.",
                                              "properties": {
                                                "description": "Array of labeled latitude and longitude coordinates for recommended venue locations in the search results.",
                                                "label": {
                                                  "description": "Response object containing labeled latitude and longitude coordinates for recommended venues.",
                                                  "example": "display",
                                                  "type": "string"
                                                },
                                                "lat": {
                                                  "default": 0,
                                                  "description": "The latitude coordinate for the location of a venue in the results of a search for recommendations.",
                                                  "example": 47.6062095,
                                                  "type": "number"
                                                },
                                                "lng": {
                                                  "default": 0,
                                                  "description": "Longitude coordinate of a recommended venue's labeled location.",
                                                  "example": -122.3320708,
                                                  "type": "number"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "type": "array"
                                          },
                                          "lat": {
                                            "default": 0,
                                            "description": "Latitude coordinate of the recommended venue's location.",
                                            "example": 47.6062095,
                                            "type": "number"
                                          },
                                          "lng": {
                                            "default": 0,
                                            "description": "Longitude coordinate of the venue's location.",
                                            "example": -122.3320708,
                                            "type": "number"
                                          },
                                          "neighborhood": {
                                            "description": "Location of recommended venues within a specific neighborhood.",
                                            "example": "Seattle Central Business District",
                                            "type": "string"
                                          },
                                          "state": {
                                            "description": "The state's two-digit code.",
                                            "example": "WA",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "name": {
                                        "description": "Name of recommended venue from search results.",
                                        "example": "Bumbershoot",
                                        "type": "string"
                                      },
                                      "ok": {
                                        "default": true,
                                        "description": "Indicates whether the venue data was successfully retrieved from the search recommendations endpoint.",
                                        "example": false,
                                        "type": "boolean"
                                      },
                                      "popularityByGeo": {
                                        "default": 0,
                                        "description": "Popularity of a venue based on geographic location.",
                                        "example": 0.2447043248014122,
                                        "type": "number"
                                      },
                                      "stats": {
                                        "description": "Stats for recommended venues returned from a search.",
                                        "properties": {
                                          "checkinsCount": {
                                            "default": 0,
                                            "description": "Number of check-ins at a recommended venue.",
                                            "example": 160,
                                            "type": "integer"
                                          },
                                          "description": "Venue stats for recommended search results.",
                                          "tipCount": {
                                            "default": 0,
                                            "description": "The number of tips for a venue in a search recommendation response.",
                                            "example": 0,
                                            "type": "integer"
                                          },
                                          "usersCount": {
                                            "default": 0,
                                            "description": "Number of users who have checked in at a recommended venue.",
                                            "example": 93,
                                            "type": "integer"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "verified": {
                                        "default": true,
                                        "description": "Boolean indicating if the recommended venue has been verified.",
                                        "example": false,
                                        "type": "boolean"
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "totalResults": {
                              "default": 0,
                              "description": "Total number of results in the response from the recommendations search endpoint.",
                              "example": 7,
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "200"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "description": "Invalid request error response for recommendations search.",
                  "properties": {
                    "description": "Responses from the /search/recommendations endpoint with a 400 status code and associated properties."
                  },
                  "type": "object"
                }
              }
            },
            "description": "400"
          }
        },
        "security": [
          {
            "ManagedUserTokenAuth": []
          }
        ],
        "summary": "Search Venue Recommendations",
        "tags": [
          "Search"
        ]
      }
    },
    "/tastes/add": {
      "post": {
        "deprecated": false,
        "description": "This endpoint should be used in conjunction with either of the following endpoints:\n- [Autocomplete Tastes](autocomplete-tastes)\n- [Get Taste Suggestions](get-taste-suggestions)\n\nOnce a `taste_id` has been returned, use the ID in the call to add it to the user's profile.",
        "operationId": "add-a-taste",
        "parameters": [
          {
            "description": "The API version date as documented [here](/reference/versioning); e.g. 20231010",
            "in": "query",
            "name": "v",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of the taste you want to add or a comma-separated list of multiple tasteIds.",
            "in": "query",
            "name": "tasteId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"meta\": {\n    \"code\": 200,\n    \"requestId\": \"6418c9f4b6cb8b129f7ae0dd\"\n  },\n  \"notifications\": [\n    {\n      \"type\": \"notificationTray\",\n      \"item\": {\n        \"unreadCount\": 0\n      }\n    }\n  ],\n  \"response\": {}\n}"
                  }
                },
                "schema": {
                  "description": "Successful response when adding a taste.",
                  "properties": {
                    "description": "Array of objects containing additional information about successfully adding a taste for a user's favorite food or drink.",
                    "meta": {
                      "description": "Metadata object containing additional information about the response.",
                      "properties": {
                        "code": {
                          "default": 0,
                          "description": "Status code indicating the result of adding a taste.",
                          "example": 200,
                          "type": "integer"
                        },
                        "description": "Metadata object containing additional information about the response, specifically for adding new user tastes.",
                        "requestId": {
                          "description": "Unique identifier for the API request.",
                          "example": "6418c9f4b6cb8b129f7ae0dd",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "notifications": {
                      "description": "Array of notification objects indicating the status of the request.",
                      "items": {
                        "description": "Array of notification objects in the response for the 'add' taste .",
                        "properties": {
                          "description": "Array of notification objects for the newly added taste preferences.",
                          "item": {
                            "description": "Object containing information about a notification that has been added to a user's profile.",
                            "properties": {
                              "description": "Adds notifications to a user's tastes.",
                              "unreadCount": {
                                "default": 0,
                                "description": "Number of unread items in the notification within the response.",
                                "example": 0,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": {
                            "description": "Type of notification for adding a taste.",
                            "example": "notificationTray",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "response": {
                      "description": "Object containing the response from the 'add' taste request.",
                      "properties": {
                        "description": "Array of objects representing photos added to a user's taste profile."
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "200"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "description": "Error response if the request to add a taste is invalid.",
                  "properties": {
                    "description": "Response for adding tastes, with a status code of 400 indicating a bad request."
                  },
                  "type": "object"
                }
              }
            },
            "description": "400"
          }
        },
        "security": [
          {
            "ManagedUserTokenAuth": []
          }
        ],
        "summary": "Add Taste",
        "tags": [
          "Tastes"
        ]
      }
    },
    "/tastes/autocomplete": {
      "get": {
        "deprecated": false,
        "description": "Show autocompleted tastes based on user's taste search query.",
        "operationId": "autocomplete-tastes",
        "parameters": [
          {
            "description": "The API version date as documented [here](/reference/versioning); e.g. 20231010",
            "in": "query",
            "name": "v",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A search term to be applied against titles.",
            "in": "query",
            "name": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Number of results to return; up to 50.",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"meta\": {\n    \"code\": 200,\n    \"requestId\": \"6418d5e3153ae316387b67f3\"\n  },\n  \"notifications\": [\n    {\n      \"type\": \"notificationTray\",\n      \"item\": {\n        \"unreadCount\": 0\n      }\n    }\n  ],\n  \"response\": {\n    \"tastes\": [\n      {\n        \"id\": \"52cb360d498e49ae1f58c952\",\n        \"text\": \"Coffee\"\n      },\n      {\n        \"id\": \"52cb360d498e49ae1f58c8fa\",\n        \"text\": \"Cozy places\"\n      },\n      {\n        \"id\": \"52e132be498e24f5635ae5a1\",\n        \"text\": \"Cocktails\"\n      },\n      {\n        \"id\": \"52e132bd498e28dc847332f5\",\n        \"text\": \"Cookies\"\n      },\n      {\n        \"id\": \"52f539d4498e69262695ed56\",\n        \"text\": \"Concerts\"\n      },\n      {\n        \"id\": \"52fbc95d498e387e4fa26525\",\n        \"text\": \"Cosmetics\"\n      },\n      {\n        \"id\": \"530f8b04498e9d2a64395c2d\",\n        \"text\": \"Cocoa\"\n      },\n      {\n        \"id\": \"52db1e23498ef1bc3d4ff99f\",\n        \"text\": \"Corn\"\n      },\n      {\n        \"id\": \"52e132bf498ecd0b3965eca7\",\n        \"text\": \"Coke\"\n      },\n      {\n        \"id\": \"52db1e24498e5c845eed1db8\",\n        \"text\": \"Coconut\"\n      }\n    ]\n  }\n}"
                  }
                },
                "schema": {
                  "description": "Autocomplete suggestions for tastes based on user input.",
                  "properties": {
                    "description": "Properties for retrieving autocomplete responses for user preferences.",
                    "meta": {
                      "description": "Metadata object containing additional information about the taste autocomplete response. ",
                      "properties": {
                        "code": {
                          "default": 0,
                          "description": "Status code indicating the result of the API request.",
                          "example": 200,
                          "type": "integer"
                        },
                        "description": "Metadata object containing additional information about the autocomplete response for tastes.",
                        "requestId": {
                          "description": "Unique identifier for the API request.",
                          "example": "6418d5e3153ae316387b67f3",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "notifications": {
                      "description": "Notifications for autocomplete search results.",
                      "items": {
                        "description": "Array of notification objects for the autocomplete response.",
                        "properties": {
                          "description": "Array of notification objects available for autocomplete suggestions.",
                          "item": {
                            "description": "Array of notification objects containing the type of notification and the number of unread items in the notification.",
                            "properties": {
                              "description": "Array of notification objects for the autocomplete endpoint.",
                              "unreadCount": {
                                "default": 0,
                                "description": "Number of unread items in the notification.",
                                "example": 0,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": {
                            "description": "Type of notification in autocomplete response for tastes.",
                            "example": "notificationTray",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "response": {
                      "description": "Response object containing autocomplete results for user tastes.",
                      "properties": {
                        "description": "Response object containing the retrieved data about autocomplete suggestions for user tastes.",
                        "tastes": {
                          "description": "Array of taste objects containing additional information about the user's autocomplete search results.",
                          "items": {
                            "description": "Array of taste objects containing information about autocomplete suggestions.",
                            "properties": {
                              "description": "Array of taste objects containing information about autocomplete suggestions.",
                              "id": {
                                "description": "Unique identifier for the taste items returned in the autocomplete response.",
                                "example": "52cb360d498e49ae1f58c952",
                                "type": "string"
                              },
                              "text": {
                                "description": "Contains the text property for the items within the tastes object.",
                                "example": "Coffee",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "200"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "description": "The taste autocomplete request failed due to a bad request.",
                  "properties": {
                    "description": "Response object containing the properties and error code for a bad request when trying to autocomplete tastes."
                  },
                  "type": "object"
                }
              }
            },
            "description": "400"
          }
        },
        "security": [
          {
            "ManagedUserTokenAuth": []
          }
        ],
        "summary": "Autocomplete Tastes",
        "tags": [
          "Tastes"
        ]
      }
    },
    "/tastes/delete": {
      "post": {
        "deprecated": false,
        "description": "Allow a user to delete a taste from their profile.",
        "operationId": "delete-a-taste",
        "parameters": [
          {
            "description": "The API version date as documented [here](/reference/versioning); e.g. 20231010",
            "in": "query",
            "name": "v",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of the taste you want to add.",
            "in": "query",
            "name": "tasteId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"meta\": {\n    \"code\": 200,\n    \"requestId\": \"6418cb0b6d5b3b4c67af1bde\"\n  },\n  \"notifications\": [\n    {\n      \"type\": \"notificationTray\",\n      \"item\": {\n        \"unreadCount\": 0\n      }\n    }\n  ],\n  \"response\": {}\n}"
                  }
                },
                "schema": {
                  "description": "Object returned when deleting a user's taste preferences.",
                  "properties": {
                    "description": "Object returned when deleting a user's taste preferences.",
                    "meta": {
                      "description": "Status code and unique identifier for the API request.",
                      "properties": {
                        "code": {
                          "default": 0,
                          "description": "Status code indicating the result of the API request.",
                          "example": 200,
                          "type": "integer"
                        },
                        "description": "Metadata object containing additional information about the success of deleting taste preferences.",
                        "requestId": {
                          "description": "Unique identifier for the API request in the metadata object for a successful response to the POST request to delete tastes.",
                          "example": "6418cb0b6d5b3b4c67af1bde",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "notifications": {
                      "description": "Array of notification objects for successful taste deletion requests.",
                      "items": {
                        "description": "Array of notification objects for a successful POST request to delete tastes.",
                        "properties": {
                          "description": "Notification tray preferences successfully deleted.",
                          "item": {
                            "description": "Deleted notification item.",
                            "properties": {
                              "description": "Deletes a notification item from a user's tastes.",
                              "unreadCount": {
                                "default": 0,
                                "description": "Number of unread items in the notification for a successful deletion of taste preferences.",
                                "example": 0,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": {
                            "description": "Deletes notification type for a successful response from the /tastes endpoint.",
                            "example": "notificationTray",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "response": {
                      "description": "Array of notification objects containing information about the result of the successful deletion of user's tastes.",
                      "properties": {
                        "description": "Delete response for user's taste preferences."
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "200"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "description": "This object represents the response for a failed request to delete a user's taste preferences, with a status code of 400 indicating a bad request.",
                  "properties": {
                    "description": "Properties for handling 400 (Bad Request) responses when deleting user preferences/tastes."
                  },
                  "type": "object"
                }
              }
            },
            "description": "400"
          }
        },
        "security": [
          {
            "ManagedUserTokenAuth": []
          }
        ],
        "summary": "Delete Taste",
        "tags": [
          "Tastes"
        ]
      }
    },
    "/tastes/suggestions": {
      "get": {
        "deprecated": false,
        "description": "Show taste suggestions to the user for selection.",
        "operationId": "get-taste-suggestions",
        "parameters": [
          {
            "description": "The API version date as documented [here](/reference/versioning); e.g. 20231010",
            "in": "query",
            "name": "v",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Possible values; `onboarding`, `profileadd`, `tipstream`, `webhomepage`, `webonboarding`, `webtipstream`, `campaign`, `webcampaign`, `pushrec`.",
            "in": "query",
            "name": "intent",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The number of results to return, up to 50.",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Used to page through results, up to 50.",
            "in": "query",
            "name": "offset",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"meta\": {\n    \"code\": 200,\n    \"requestId\": \"6418d4f79d3430010c345539\"\n  },\n  \"notifications\": [\n    {\n      \"type\": \"notificationTray\",\n      \"item\": {\n        \"unreadCount\": 0\n      }\n    }\n  ],\n  \"response\": {\n    \"seed\": -1848231109,\n    \"tastes\": [\n      {\n        \"id\": \"52e132be498eafdb67fdd083\",\n        \"text\": \"Caipirinhas\",\n        \"nc\": true\n      },\n      {\n        \"id\": \"52cb360d498e49ae1f58c916\",\n        \"text\": \"Blueberry pie\",\n        \"nc\": true\n      },\n      {\n        \"id\": \"52cc5703498ee4ff7d523567\",\n        \"text\": \"Fish tacos\",\n        \"nc\": true\n      },\n      {\n        \"id\": \"52e132be498e28dc84733300\",\n        \"text\": \"Corn dogs\",\n        \"nc\": true\n      },\n      {\n        \"id\": \"53595852498eac9916cfbc03\",\n        \"text\": \"Good for a late night\",\n        \"nc\": true\n      },\n      {\n        \"id\": \"52db1e28498e3c2c8d5d0b57\",\n        \"text\": \"Horseradish\"\n      },\n      {\n        \"id\": \"52db1e24498e327a06a4e3ac\",\n        \"text\": \"Pancetta\"\n      },\n      {\n        \"id\": \"53161703498e60c3c436433b\",\n        \"text\": \"Air hockey\"\n      },\n      {\n        \"id\": \"52cc5705498eedd6fdb86045\",\n        \"text\": \"Cheddar soup\",\n        \"nc\": true\n      },\n      {\n        \"id\": \"52e132be498e5e2b851ae69c\",\n        \"text\": \"Beignets\",\n        \"nc\": true\n      }\n    ]\n  }\n}"
                  }
                },
                "schema": {
                  "description": "List of suggested tastes for the user.",
                  "properties": {
                    "description": "Responses for retrieving suggested tastes.",
                    "meta": {
                      "description": "Response metadata for taste suggestions API endpoint.",
                      "properties": {
                        "code": {
                          "default": 0,
                          "description": "Status code indicating the result of the API request.",
                          "example": 200,
                          "type": "integer"
                        },
                        "description": "Metadata object containing additional information about the response.",
                        "requestId": {
                          "description": "Retrieve the unique identifier for the API request from the metadata properties.",
                          "example": "6418d4f79d3430010c345539",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "notifications": {
                      "description": "Array of notification objects containing information about unread items.",
                      "items": {
                        "description": "Array of notification objects containing information about unread items.",
                        "properties": {
                          "description": "Notifications contained in the response for taste suggestions.",
                          "item": {
                            "description": "Array of notification items with information about the type and number of unread items.",
                            "properties": {
                              "description": "Array of notification objects with information about the number of unread items.",
                              "unreadCount": {
                                "default": 0,
                                "description": "Number of unread items in the notification.",
                                "example": 0,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": {
                            "description": "Notification type.",
                            "example": "notificationTray",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "response": {
                      "description": "Response object containing suggested tastes based on the given request.",
                      "properties": {
                        "description": "Response object containing suggested tastes for a given user.",
                        "seed": {
                          "default": 0,
                          "description": "Collection of suggested tastes based on a seed item.",
                          "example": -1848231109,
                          "type": "integer"
                        },
                        "tastes": {
                          "description": "Array of suggested tastes for the current user.",
                          "items": {
                            "description": "Array of suggested tastes based on the user's preferences and location.",
                            "properties": {
                              "description": "List of recommended tastes based on user preferences.",
                              "id": {
                                "description": "Unique identifier for suggested tastes in a successful response for getting taste suggestions.",
                                "example": "52e132be498eafdb67fdd083",
                                "type": "string"
                              },
                              "nc": {
                                "default": true,
                                "description": "Boolean indicating whether or not the suggested tastes are non-alcoholic.",
                                "example": true,
                                "type": "boolean"
                              },
                              "text": {
                                "description": "Text for each suggested item.",
                                "example": "Caipirinhas",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "200"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "description": "Response object for suggestions API endpoint with a 400 status code.",
                  "properties": {
                    "description": "The response for the bad request."
                  },
                  "type": "object"
                }
              }
            },
            "description": "400"
          }
        },
        "security": [
          {
            "ManagedUserTokenAuth": []
          }
        ],
        "summary": "Get Taste Suggestions",
        "tags": [
          "Tastes"
        ]
      }
    },
    "/tips/{tip_id}/vote": {
      "post": {
        "tags": [
          "Tips"
        ],
        "deprecated": false,
        "description": "Allows a user to vote on a tip.",
        "summary": "Vote Tip",
        "operationId": "vote-for-a-tip",
        "security": [
          {
            "ManagedUserTokenAuth": []
          }
        ],
        "parameters": [
          {
            "description": "The ID of the tip to be acted on.",
            "in": "path",
            "name": "tip_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The API version date as documented [here](/reference/versioning); e.g. 20231010",
            "in": "query",
            "name": "v",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "true = upvote, false= downvote",
            "in": "query",
            "name": "vote",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "examples": {
                  "Upvote Success": {
                    "value": "{\n  \"meta\": {\n    \"code\": 200,\n    \"requestId\": \"6414b30fb6cb8b129f3b2e4f\"\n  },\n  \"notifications\": [\n    {\n      \"type\": \"notificationTray\",\n      \"item\": {\n        \"unreadCount\": 0\n      }\n    }\n  ],\n  \"response\": {\n    \"tip\": {\n      \"id\": \"53bc46b7498e355aed38c696\",\n      \"createdAt\": 1404847799,\n      \"text\": \"A lower east side hangout with a retractable roof making it perfect no matter what the weather! We love the rooftop and always order any of their numerous truffle oil dishes (pizza, chicken, fries)\",\n      \"type\": \"user\",\n      \"canonicalUrl\": \"https://foursquare.com/item/53bc46b7498e355aed38c696\",\n      \"canonicalPath\": \"/item/53bc46b7498e355aed38c696\",\n      \"photo\": {\n        \"id\": \"53bc51e611d24ae8f0b898b4\",\n        \"createdAt\": 1404850662,\n        \"source\": {\n          \"name\": \"Foursquare Web\",\n          \"url\": \"https://foursquare.com\"\n        },\n        \"prefix\": \"https://fastly.4sqi.net/img/general/\",\n        \"suffix\": \"/private_content_2.png\",\n        \"width\": 400,\n        \"height\": 400,\n        \"visibility\": \"public\"\n      },\n      \"photourl\": \"https://fastly.4sqi.net/img/general/original/38616203_Diq-n4zrFv7CfIf1SxavodvzN9nk-dnIeZYZeym0aJg.jpg\",\n      \"likes\": {\n        \"count\": 1,\n        \"groups\": [],\n        \"summary\": \"You\"\n      },\n      \"like\": true,\n      \"ratedAt\": 1679075315,\n      \"logView\": true,\n      \"saves\": {\n        \"count\": 1,\n        \"groups\": [],\n        \"summary\": \"1 Save\"\n      },\n      \"agreeCount\": 1,\n      \"disagreeCount\": 0,\n      \"agreed\": true,\n      \"lastVoteText\": \"Upvoted just now\",\n      \"lastUpvoteTimestamp\": 1679078159,\n      \"venue\": {\n        \"id\": \"4cbcafab035d236aebebe64e\",\n        \"name\": \"Hotel Chantelle\",\n        \"contact\": {\n          \"phone\": \"2122549100\",\n          \"formattedPhone\": \"(212) 254-9100\",\n          \"twitter\": \"hotelchantelle\"\n        },\n        \"location\": {\n          \"address\": \"92 Ludlow St\",\n          \"crossStreet\": \"btwn Delancey & Broome St\",\n          \"lat\": 40.71848249951786,\n          \"lng\": -73.98905576383794,\n          \"labeledLatLngs\": [\n            {\n              \"label\": \"display\",\n              \"lat\": 40.71848249951786,\n              \"lng\": -73.98905576383794\n            }\n          ],\n          \"postalCode\": \"10002\",\n          \"cc\": \"US\",\n          \"neighborhood\": \"Lower East Side\",\n          \"city\": \"New York\",\n          \"state\": \"NY\",\n          \"country\": \"United States\",\n          \"contextLine\": \"New York, NY\",\n          \"contextGeoId\": 72057594043056510,\n          \"formattedAddress\": [\n            \"<span itemprop=\\\"streetAddress\\\">92 Ludlow St</span> (btwn Delancey &amp; Broome St)\",\n            \"<span itemprop=\\\"addressLocality\\\">New York</span>, <span itemprop=\\\"addressRegion\\\">NY</span> <span itemprop=\\\"postalCode\\\">10002</span>\"\n          ]\n        },\n        \"canonicalUrl\": \"https://foursquare.com/v/hotel-chantelle/4cbcafab035d236aebebe64e\",\n        \"canonicalPath\": \"/v/hotel-chantelle/4cbcafab035d236aebebe64e\",\n        \"categories\": [\n          {\n            \"id\": \"4bf58dd8d48988d116941735\",\n            \"name\": \"Bar\",\n            \"pluralName\": \"Bars\",\n            \"shortName\": \"Bar\",\n            \"icon\": {\n              \"prefix\": \"https://ss3.4sqi.net/img/categories_v2/nightlife/pub_\",\n              \"mapPrefix\": \"https://ss3.4sqi.net/img/categories_map/nightlife/bar\",\n              \"suffix\": \".png\"\n            },\n            \"primary\": true\n          }\n        ],\n        \"verified\": true,\n        \"stats\": {\n          \"tipCount\": 239,\n          \"usersCount\": 21717,\n          \"checkinsCount\": 36193\n        },\n        \"url\": \"http://hotelchantelle.com\",\n        \"urlSig\": \"qRpsDTNyZKDZI3zdeDGPYnMXyXw=\",\n        \"price\": {\n          \"tier\": 3,\n          \"message\": \"Expensive\",\n          \"currency\": \"$\"\n        },\n        \"hasMenu\": true,\n        \"like\": false,\n        \"rating\": 7.3,\n        \"ratingColor\": \"C5DE35\",\n        \"ratingSignals\": 1450,\n        \"reservations\": {\n          \"url\": \"http://www.opentable.com/single.aspx?rid=64384&ref=9601\",\n          \"provider\": \"opentable\",\n          \"id\": \"64384\"\n        },\n        \"menu\": {\n          \"type\": \"Menu\",\n          \"label\": \"Menu\",\n          \"anchor\": \"View Menu\",\n          \"url\": \"https://foursquare.com/v/hotel-chantelle/4cbcafab035d236aebebe64e/menu\",\n          \"mobileUrl\": \"https://foursquare.com/v/4cbcafab035d236aebebe64e/device_menu\",\n          \"canonicalPath\": \"/v/hotel-chantelle/4cbcafab035d236aebebe64e/menu\"\n        },\n        \"allowMenuUrlEdit\": true,\n        \"beenHere\": {\n          \"lastCheckinExpiredAt\": 0\n        },\n        \"photos\": {\n          \"count\": 1,\n          \"groups\": [\n            {\n              \"type\": \"venue\",\n              \"name\": \"Venue photos\",\n              \"count\": 1,\n              \"items\": [\n                {\n                  \"id\": \"4fcbb262e4b0a6e71560111f\",\n                  \"createdAt\": 1338749538,\n                  \"prefix\": \"https://fastly.4sqi.net/img/general/\",\n                  \"suffix\": \"/ZtWpQA7kPw9sNdszI-bKm2AQ3CNqR5RF0v02kMctp9w.jpg\",\n                  \"width\": 540,\n                  \"height\": 540,\n                  \"user\": {\n                    \"id\": \"123456\",\n                    \"firstName\": \"John\",\n                    \"lastName\": \"Smith\",\n                    \"gender\": \"male\",\n                    \"countryCode\": \"US\",\n                    \"canonicalUrl\": \"https://foursquare.com/user/123456\",\n                    \"canonicalPath\": \"/user/123456\",\n                    \"photo\": {\n                      \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n                      \"suffix\": \"/blank_boy.png\"\n                    },\n                    \"isAnonymous\": false\n                  },  \n                  \"visibility\": \"public\"\n                }\n              ]\n            }\n          ]\n        },\n        \"venuePage\": {\n          \"id\": \"72046848\"\n        },\n        \"createdAt\": 1287434155,\n        \"popularityByGeo\": 0.9887599976301914\n      },\n      \"user\": {\n        \"id\": \"123456\",\n        \"firstName\": \"John\",\n        \"lastName\": \"Smith\",\n        \"gender\": \"male\",\n        \"countryCode\": \"US\",\n        \"canonicalUrl\": \"https://foursquare.com/user/123456\",\n        \"canonicalPath\": \"/user/123456\",\n        \"photo\": {\n          \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n          \"suffix\": \"/blank_boy.png\"\n        },\n        \"isAnonymous\": false\n      },  \n      \"listed\": {\n        \"count\": 1,\n        \"groups\": [\n          {\n            \"type\": \"others\",\n            \"name\": \"Lists from other people\",\n            \"count\": 1,\n            \"items\": [\n              {\n                \"id\": \"53bd6ad611d277514a88b94b\",\n                \"name\": \"Best Rooftops in NYC\",\n                \"description\": \"Looking to catch some rays while enjoying a refreshing cocktail with friends? Here are the best places to enjoy the summer air in NYC.\",\n                \"type\": \"others\",\n                \"user\": {\n                  \"id\": \"123456\",\n                  \"firstName\": \"John\",\n                  \"lastName\": \"Smith\",\n                  \"gender\": \"male\",\n                  \"countryCode\": \"US\",\n                  \"canonicalUrl\": \"https://foursquare.com/user/123456\",\n                  \"canonicalPath\": \"/user/123456\",\n                  \"photo\": {\n                    \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n                    \"suffix\": \"/blank_boy.png\"\n                  },\n                  \"isAnonymous\": false\n                },\n                \"editable\": false,\n                \"public\": true,\n                \"collaborative\": false,\n                \"url\": \"/johnsmith/list/best-rooftops-in-nyc\",\n                \"canonicalUrl\": \"https://foursquare.com/johnsmith/list/best-rooftops-in-nyc\",\n                \"canonicalPath\": \"/johnsmith/list/best-rooftops-in-nyc\",\n                \"createdAt\": 1404922582,\n                \"updatedAt\": 1405008930,\n                \"photo\": {\n                  \"id\": \"53bc51ed11d24ae8f0b89e23\",\n                  \"createdAt\": 1404850669,\n                  \"prefix\": \"https://fastly.4sqi.net/img/general/\",\n                  \"suffix\": \"/38616203_Diq-n4zrFv7CfIf1SxavodvzN9nk-dnIeZYZeym0aJg.jpg\",\n                  \"width\": 168,\n                  \"height\": 168,\n                  \"user\": {\n                    \"id\": \"123456\",\n                    \"firstName\": \"John\",\n                    \"lastName\": \"Smith\",\n                    \"gender\": \"male\",\n                    \"countryCode\": \"US\",\n                    \"canonicalUrl\": \"https://foursquare.com/user/123456\",\n                    \"canonicalPath\": \"/user/123456\",\n                    \"photo\": {\n                      \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n                      \"suffix\": \"/blank_boy.png\"\n                    },\n                    \"type\": \"page\",\n                    \"isAnonymous\": false\n                  },\n                  \"visibility\": \"public\"\n                },\n                \"logView\": true,\n                \"followers\": {\n                  \"count\": 0\n                },\n                \"listItems\": {\n                  \"count\": 5\n                }\n              }\n            ]\n          }\n        ]\n      },\n      \"title\": \"John Smith's tip\"\n    }\n  }\n}"
                  },
                  "Downvote Success": {
                    "value": "{\n  \"meta\": {\n    \"code\": 200,\n    \"requestId\": \"6414b4d0813165221a7e3422\"\n  },\n  \"notifications\": [\n    {\n      \"type\": \"notificationTray\",\n      \"item\": {\n        \"unreadCount\": 0\n      }\n    }\n  ],\n  \"response\": {\n    \"tip\": {\n      \"id\": \"53bc46b7498e355aed38c696\",\n      \"createdAt\": 1404847799,\n      \"text\": \"A lower east side hangout with a retractable roof making it perfect no matter what the weather! We love the rooftop and always order any of their numerous truffle oil dishes (pizza, chicken, fries)\",\n      \"type\": \"user\",\n      \"canonicalUrl\": \"https://foursquare.com/item/53bc46b7498e355aed38c696\",\n      \"canonicalPath\": \"/item/53bc46b7498e355aed38c696\",\n      \"photo\": {\n        \"id\": \"53bc51e611d24ae8f0b898b4\",\n        \"createdAt\": 1404850662,\n        \"source\": {\n          \"name\": \"Foursquare Web\",\n          \"url\": \"https://foursquare.com\"\n        },\n        \"prefix\": \"https://fastly.4sqi.net/img/general/\",\n        \"suffix\": \"/private_content_2.png\",\n        \"width\": 400,\n        \"height\": 400,\n        \"visibility\": \"public\"\n      },\n      \"photourl\": \"https://fastly.4sqi.net/img/general/original/38616203_Diq-n4zrFv7CfIf1SxavodvzN9nk-dnIeZYZeym0aJg.jpg\",\n      \"likes\": {\n        \"count\": 1,\n        \"groups\": [],\n        \"summary\": \"You\"\n      },\n      \"like\": true,\n      \"ratedAt\": 1679075315,\n      \"logView\": true,\n      \"saves\": {\n        \"count\": 1,\n        \"groups\": [],\n        \"summary\": \"1 Save\"\n      },\n      \"agreeCount\": 0,\n      \"disagreeCount\": 1,\n      \"disagreed\": true,\n      \"lastVoteText\": \"Downvoted just now\",\n      \"lastDownvoteTimestamp\": 1679078608,\n      \"venue\": {\n        \"id\": \"4cbcafab035d236aebebe64e\",\n        \"name\": \"Hotel Chantelle\",\n        \"contact\": {\n          \"phone\": \"2122549100\",\n          \"formattedPhone\": \"(212) 254-9100\",\n          \"twitter\": \"hotelchantelle\"\n        },\n        \"location\": {\n          \"address\": \"92 Ludlow St\",\n          \"crossStreet\": \"btwn Delancey & Broome St\",\n          \"lat\": 40.71848249951786,\n          \"lng\": -73.98905576383794,\n          \"labeledLatLngs\": [\n            {\n              \"label\": \"display\",\n              \"lat\": 40.71848249951786,\n              \"lng\": -73.98905576383794\n            }\n          ],\n          \"postalCode\": \"10002\",\n          \"cc\": \"US\",\n          \"neighborhood\": \"Lower East Side\",\n          \"city\": \"New York\",\n          \"state\": \"NY\",\n          \"country\": \"United States\",\n          \"contextLine\": \"New York, NY\",\n          \"contextGeoId\": 72057594043056510,\n          \"formattedAddress\": [\n            \"<span itemprop=\\\"streetAddress\\\">92 Ludlow St</span> (btwn Delancey &amp; Broome St)\",\n            \"<span itemprop=\\\"addressLocality\\\">New York</span>, <span itemprop=\\\"addressRegion\\\">NY</span> <span itemprop=\\\"postalCode\\\">10002</span>\"\n          ]\n        },\n        \"canonicalUrl\": \"https://foursquare.com/v/hotel-chantelle/4cbcafab035d236aebebe64e\",\n        \"canonicalPath\": \"/v/hotel-chantelle/4cbcafab035d236aebebe64e\",\n        \"categories\": [\n          {\n            \"id\": \"4bf58dd8d48988d116941735\",\n            \"name\": \"Bar\",\n            \"pluralName\": \"Bars\",\n            \"shortName\": \"Bar\",\n            \"icon\": {\n              \"prefix\": \"https://ss3.4sqi.net/img/categories_v2/nightlife/pub_\",\n              \"mapPrefix\": \"https://ss3.4sqi.net/img/categories_map/nightlife/bar\",\n              \"suffix\": \".png\"\n            },\n            \"primary\": true\n          }\n        ],\n        \"verified\": true,\n        \"stats\": {\n          \"tipCount\": 239,\n          \"usersCount\": 21717,\n          \"checkinsCount\": 36193\n        },\n        \"url\": \"http://hotelchantelle.com\",\n        \"urlSig\": \"qRpsDTNyZKDZI3zdeDGPYnMXyXw=\",\n        \"price\": {\n          \"tier\": 3,\n          \"message\": \"Expensive\",\n          \"currency\": \"$\"\n        },\n        \"hasMenu\": true,\n        \"like\": false,\n        \"rating\": 7.3,\n        \"ratingColor\": \"C5DE35\",\n        \"ratingSignals\": 1450,\n        \"reservations\": {\n          \"url\": \"http://www.opentable.com/single.aspx?rid=64384&ref=9601\",\n          \"provider\": \"opentable\",\n          \"id\": \"64384\"\n        },\n        \"menu\": {\n          \"type\": \"Menu\",\n          \"label\": \"Menu\",\n          \"anchor\": \"View Menu\",\n          \"url\": \"https://foursquare.com/v/hotel-chantelle/4cbcafab035d236aebebe64e/menu\",\n          \"mobileUrl\": \"https://foursquare.com/v/4cbcafab035d236aebebe64e/device_menu\",\n          \"canonicalPath\": \"/v/hotel-chantelle/4cbcafab035d236aebebe64e/menu\"\n        },\n        \"allowMenuUrlEdit\": true,\n        \"beenHere\": {\n          \"lastCheckinExpiredAt\": 0\n        },\n        \"photos\": {\n          \"count\": 1,\n          \"groups\": [\n            {\n              \"type\": \"venue\",\n              \"name\": \"Venue photos\",\n              \"count\": 1,\n              \"items\": [\n                {\n                  \"id\": \"4fcbb262e4b0a6e71560111f\",\n                  \"createdAt\": 1338749538,\n                  \"prefix\": \"https://fastly.4sqi.net/img/general/\",\n                  \"suffix\": \"/ZtWpQA7kPw9sNdszI-bKm2AQ3CNqR5RF0v02kMctp9w.jpg\",\n                  \"width\": 540,\n                  \"height\": 540,\n                  \"user\": {\n                    \"id\": \"123456\",\n                    \"firstName\": \"John\",\n                    \"lastName\": \"Smith\",\n                    \"gender\": \"male\",\n                    \"countryCode\": \"US\",\n                    \"canonicalUrl\": \"https://foursquare.com/user/123456\",\n                    \"canonicalPath\": \"/user/123456\",\n                    \"photo\": {\n                      \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n                      \"suffix\": \"/blank_boy.png\"\n                    },\n                    \"isAnonymous\": false\n                  },\n                  \"visibility\": \"public\"\n                }\n              ]\n            }\n          ]\n        },\n        \"venuePage\": {\n          \"id\": \"72046848\"\n        },\n        \"createdAt\": 1287434155,\n        \"popularityByGeo\": 0.9887599976301914\n      },\n      \"user\": {\n        \"id\": \"38616203\",\n        \"firstName\": \"Douglas Elliman\",\n        \"gender\": \"none\",\n        \"countryCode\": \"US\",\n        \"canonicalUrl\": \"https://foursquare.com/p/douglas-elliman/38616203\",\n        \"canonicalPath\": \"/johnsmith\",\n        \"photo\": {\n          \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n          \"suffix\": \"/1BV0WACLZDFVGTFV.png\"\n        },\n        \"type\": \"page\",\n        \"isAnonymous\": false\n      },\n      \"listed\": {\n        \"count\": 1,\n        \"groups\": [\n          {\n            \"type\": \"others\",\n            \"name\": \"Lists from other people\",\n            \"count\": 1,\n            \"items\": [\n              {\n                \"id\": \"53bd6ad611d277514a88b94b\",\n                \"name\": \"Best Rooftops in NYC\",\n                \"description\": \"Looking to catch some rays while enjoying a refreshing cocktail with friends? Here are the best places to enjoy the summer air in NYC.\",\n                \"type\": \"others\",\n                \"user\": {\n                  \"id\": \"38616203\",\n                  \"firstName\": \"Douglas Elliman\",\n                  \"gender\": \"none\",\n                  \"countryCode\": \"US\",\n                  \"canonicalUrl\": \"https://foursquare.com/p/douglas-elliman/38616203\",\n                  \"canonicalPath\": \"/johnsmith\",\n                  \"photo\": {\n                    \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n                    \"suffix\": \"/1BV0WACLZDFVGTFV.png\"\n                  },\n                  \"type\": \"page\",\n                  \"isAnonymous\": false\n                },\n                \"editable\": false,\n                \"public\": true,\n                \"collaborative\": false,\n                \"url\": \"/johnsmith/list/best-rooftops-in-nyc\",\n                \"canonicalUrl\": \"https://foursquare.com/johnsmith/list/best-rooftops-in-nyc\",\n                \"canonicalPath\": \"/johnsmith/list/best-rooftops-in-nyc\",\n                \"createdAt\": 1404922582,\n                \"updatedAt\": 1405008930,\n                \"photo\": {\n                  \"id\": \"53bc51ed11d24ae8f0b89e23\",\n                  \"createdAt\": 1404850669,\n                  \"prefix\": \"https://fastly.4sqi.net/img/general/\",\n                  \"suffix\": \"/38616203_Diq-n4zrFv7CfIf1SxavodvzN9nk-dnIeZYZeym0aJg.jpg\",\n                  \"width\": 168,\n                  \"height\": 168,\n                  \"user\": {\n                    \"id\": \"123456\",\n                    \"firstName\": \"John\",\n                    \"lastName\": \"Smith\",\n                    \"gender\": \"male\",\n                    \"countryCode\": \"US\",\n                    \"canonicalUrl\": \"https://foursquare.com/user/123456\",\n                    \"canonicalPath\": \"/user/123456\",\n                    \"photo\": {\n                      \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n                      \"suffix\": \"/blank_boy.png\"\n                    },\n                    \"type\": \"page\",\n                    \"isAnonymous\": false\n                  },\n                  \"visibility\": \"public\"\n                },\n                \"logView\": true,\n                \"followers\": {\n                  \"count\": 0\n                },\n                \"listItems\": {\n                  \"count\": 5\n                }\n              }\n            ]\n          }\n        ]\n      },\n      \"title\": \"John Smith's tip\"\n    }\n  }\n}"
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "title": "Upvote Success",
                      "description": "Object representing a successful upvote on a tip.",
                      "properties": {
                        "description": "Returns the properties of a successful vote on a tip.",
                        "meta": {
                          "description": "Metadata object containing information about the response.",
                          "properties": {
                            "code": {
                              "default": 0,
                              "description": "Status code indicating the result of the vote request.",
                              "example": 200,
                              "type": "integer"
                            },
                            "description": "Metadata object containing information about the response and its properties.",
                            "requestId": {
                              "description": "Metadata object containing the unique identifier for the API request.",
                              "example": "6414b30fb6cb8b129f3b2e4f",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "notifications": {
                          "description": "List of notification objects for a successful vote on a tip.",
                          "items": {
                            "description": "Notification object for the response to a vote on a tip.",
                            "properties": {
                              "description": "Array of notification objects for the tip vote response.",
                              "item": {
                                "description": "Notification items and their properties.",
                                "properties": {
                                  "description": "Array of notification items for a vote on a tip, including the number of unread items.",
                                  "unreadCount": {
                                    "default": 0,
                                    "description": "Number of unread items in a notification associated with a tip vote.",
                                    "example": 0,
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              },
                              "type": {
                                "description": "Type of notification for a vote on a tip.",
                                "example": "notificationTray",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "response": {
                          "description": "Vote response object for a specific tip, including the user's vote status.",
                          "properties": {
                            "description": "Response object containing information about a vote on a tip.",
                            "tip": {
                              "description": "Properties of a tip.",
                              "properties": {
                                "agreeCount": {
                                  "default": 0,
                                  "description": "Number of users who have agreed with a specific tip.",
                                  "example": 1,
                                  "type": "integer"
                                },
                                "agreed": {
                                  "default": true,
                                  "description": "Whether or not the user agreed with the tip.",
                                  "example": true,
                                  "type": "boolean"
                                },
                                "canonicalPath": {
                                  "description": "A tip's canonical path.",
                                  "example": "/item/53bc46b7498e355aed38c696",
                                  "type": "string"
                                },
                                "canonicalUrl": {
                                  "description": "Canonical URL for the tip that was voted on.",
                                  "example": "https://foursquare.com/item/53bc46b7498e355aed38c696",
                                  "type": "string"
                                },
                                "createdAt": {
                                  "default": 0,
                                  "description": "Timestamp indicating when the tip was created; UNIX timestamp in seconds since Epoch.",
                                  "example": 1404847799,
                                  "type": "integer"
                                },
                                "description": "Tip object containing information about the user who voted on the tip.",
                                "disagreeCount": {
                                  "default": 0,
                                  "description": "Number of users who disagreed with a tip.",
                                  "example": 0,
                                  "type": "integer"
                                },
                                "id": {
                                  "description": "Unique identifier for the voted-on tip.",
                                  "example": "53bc46b7498e355aed38c696",
                                  "type": "string"
                                },
                                "lastUpvoteTimestamp": {
                                  "default": 0,
                                  "description": "Timestamp of the last upvote for a tip.",
                                  "example": 1679078159,
                                  "type": "integer"
                                },
                                "lastVoteText": {
                                  "description": "Last vote text for a tip.",
                                  "example": "Upvoted just now",
                                  "type": "string"
                                },
                                "like": {
                                  "default": true,
                                  "description": "Boolean indicating whether the user has liked the tip.",
                                  "example": true,
                                  "type": "boolean"
                                },
                                "likes": {
                                  "description": "Number of likes for a specific tip.",
                                  "properties": {
                                    "count": {
                                      "default": 0,
                                      "description": "Number of likes for a specific tip vote response.",
                                      "example": 1,
                                      "type": "integer"
                                    },
                                    "description": "Number of likes for a specific tip.",
                                    "groups": {
                                      "description": "Array of groups that have liked the tip.",
                                      "type": "array"
                                    },
                                    "summary": {
                                      "description": "Response object with properties for the number of likes for a specific tip.",
                                      "example": "You",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "listed": {
                                  "description": "Object containing information about the tip that received a vote, including whether it has been listed.",
                                  "properties": {
                                    "count": {
                                      "default": 0,
                                      "description": "Number of times the tip has been added to a user's lists.",
                                      "example": 1,
                                      "type": "integer"
                                    },
                                    "description": "Properties for a list of listed tips.",
                                    "groups": {
                                      "description": "Response object containing the list of groups associated with the tip.",
                                      "items": {
                                        "description": "Response object containing the list of groups associated with the voted tip.",
                                        "properties": {
                                          "count": {
                                            "default": 0,
                                            "description": "Number of times this tip has been listed.",
                                            "example": 1,
                                            "type": "integer"
                                          },
                                          "description": "List of groups that contain tips that have been voted on by others.",
                                          "items": {
                                            "description": "List of items within a group of listed tips after a successful vote on a specific tip.",
                                            "items": {
                                              "description": "List of groups that contain items, which are properties of a listed tip that is a property of a vote response for a tip with a given ID.",
                                              "properties": {
                                                "canonicalPath": {
                                                  "description": "Canonical path.",
                                                  "example": "/johnsmith/list/best-rooftops-in-nyc",
                                                  "type": "string"
                                                },
                                                "canonicalUrl": {
                                                  "description": "Canonical URL for the list.",
                                                  "example": "https://foursquare.com/johnsmith/list/best-rooftops-in-nyc",
                                                  "type": "string"
                                                },
                                                "collaborative": {
                                                  "default": true,
                                                  "description": "Tip vote response object with collaborative items.",
                                                  "example": false,
                                                  "type": "boolean"
                                                },
                                                "createdAt": {
                                                  "default": 0,
                                                  "description": "Returns the creation date of the items within a list of tips that are associated with the specified tip vote; UNIX timestamp in seconds since Epoch.",
                                                  "example": 1404922582,
                                                  "type": "integer"
                                                },
                                                "description": {
                                                  "example": "Looking to catch some rays while enjoying a refreshing cocktail with friends? Here are the best places to enjoy the summer air in NYC.",
                                                  "type": "string"
                                                },
                                                "editable": {
                                                  "default": true,
                                                  "description": "Boolean indicating whether the tip is editable.",
                                                  "example": false,
                                                  "type": "boolean"
                                                },
                                                "followers": {
                                                  "description": "Followers of the tip item in the list of tips for the specified tip ID.",
                                                  "properties": {
                                                    "count": {
                                                      "default": 0,
                                                      "description": "Total number of followers for a tip in a list within a group within a venue.",
                                                      "example": 0,
                                                      "type": "integer"
                                                    },
                                                    "description": "List of followers for a tip associated with a specific tip ID. "
                                                  },
                                                  "type": "object"
                                                },
                                                "id": {
                                                  "description": "Unique identifier for a tip, as voted on by a user, and its associated properties, including its listed groups and their items, and the tip's ID.",
                                                  "example": "53bd6ad611d277514a88b94b",
                                                  "type": "string"
                                                },
                                                "listItems": {
                                                  "description": "Array of objects representing the items in the tip's list, each with their own properties.",
                                                  "properties": {
                                                    "count": {
                                                      "default": 0,
                                                      "description": "Number of list items associated with a specific tip.",
                                                      "example": 5,
                                                      "type": "integer"
                                                    },
                                                    "description": "List items within a specific tip voted on by a user."
                                                  },
                                                  "type": "object"
                                                },
                                                "logView": {
                                                  "default": true,
                                                  "description": "Array of objects containing information about the items that were logged as viewed on a tip that was voted on.",
                                                  "example": true,
                                                  "type": "boolean"
                                                },
                                                "name": {
                                                  "description": "Name of the item in a list of groups in a tip's voting response.",
                                                  "example": "Best Rooftops in NYC",
                                                  "type": "string"
                                                },
                                                "photo": {
                                                  "description": "Photo object representing a photo associated with a tip that has been voted on.",
                                                  "properties": {
                                                    "createdAt": {
                                                      "default": 0,
                                                      "description": "Timestamp indicating when the photo was created; UNIX timestamp in seconds since Epoch.",
                                                      "example": 1404850669,
                                                      "type": "integer"
                                                    },
                                                    "description": "Response object containing the voted tip's properties, including the photo object.",
                                                    "height": {
                                                      "default": 0,
                                                      "description": "Height of the photo associated with the tip's listed groups items.",
                                                      "example": 168,
                                                      "type": "integer"
                                                    },
                                                    "id": {
                                                      "description": "Unique identifier for a photo associated with a tip that was voted on.",
                                                      "example": "53bc51ed11d24ae8f0b89e23",
                                                      "type": "string"
                                                    },
                                                    "prefix": {
                                                      "description": "Prefix for the photo URLs.",
                                                      "example": "https://fastly.4sqi.net/img/general/",
                                                      "type": "string"
                                                    },
                                                    "suffix": {
                                                      "description": "URL suffix.",
                                                      "example": "/38616203_Diq-n4zrFv7CfIf1SxavodvzN9nk-dnIeZYZeym0aJg.jpg",
                                                      "type": "string"
                                                    },
                                                    "user": {
                                                      "description": "List of users who have voted on a tip for a specific venue.",
                                                      "properties": {
                                                        "canonicalPath": {
                                                          "description": "Canonical path for user.",
                                                          "example": "/user/123456",
                                                          "type": "string"
                                                        },
                                                        "canonicalUrl": {
                                                          "description": "Canonical URL for use.",
                                                          "example": "https://foursquare.com/user/123456",
                                                          "type": "string"
                                                        },
                                                        "countryCode": {
                                                          "description": "User's country code for a specific tip that has been voted on.",
                                                          "example": "US",
                                                          "type": "string"
                                                        },
                                                        "description": "User object for a photo associated with a tip, including properties such as first and last name, gender, country code, and profile photo URL.",
                                                        "firstName": {
                                                          "description": "The first name of the user who created the photo associated with the given tip ID.",
                                                          "example": "John",
                                                          "type": "string"
                                                        },
                                                        "gender": {
                                                          "description": "User gender for photo associated with a listed tip response for a specific tip vote.",
                                                          "example": "male",
                                                          "type": "string"
                                                        },
                                                        "id": {
                                                          "description": "Tip vote response object containing properties for tip, user, and photo IDs.",
                                                          "example": "123456",
                                                          "type": "string"
                                                        },
                                                        "isAnonymous": {
                                                          "default": true,
                                                          "description": "Boolean indicating if the user who created the tip is anonymous.",
                                                          "example": false,
                                                          "type": "boolean"
                                                        },
                                                        "lastName": {
                                                          "description": "User's last name associated with the photo from a voted tip.",
                                                          "example": "Smith",
                                                          "type": "string"
                                                        },
                                                        "photo": {
                                                          "description": "Photo information for user who posted tip.",
                                                          "properties": {
                                                            "description": "User's profile photo URL for the photo associated with the voting action on a specific tip.",
                                                            "prefix": {
                                                              "description": "URL prefix for the user's profile URL.",
                                                              "example": "https://fastly.4sqi.net/img/user/",
                                                              "type": "string"
                                                            },
                                                            "suffix": {
                                                              "description": "URL suffix for the user's profile URL.",
                                                              "example": "/blank_boy.png",
                                                              "type": "string"
                                                            }
                                                          },
                                                          "type": "object"
                                                        },
                                                        "type": {
                                                          "description": "The type of user who posted the tip.",
                                                          "example": "page",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "type": "object"
                                                    },
                                                    "visibility": {
                                                      "description": "A photo's visibility within a listed tip item.",
                                                      "example": "public",
                                                      "type": "string"
                                                    },
                                                    "width": {
                                                      "default": 0,
                                                      "description": "Width of the photo associated with a tip vote response.",
                                                      "example": 168,
                                                      "type": "integer"
                                                    }
                                                  },
                                                  "type": "object"
                                                },
                                                "public": {
                                                  "default": true,
                                                  "description": "The public status of the associated item.",
                                                  "example": true,
                                                  "type": "boolean"
                                                },
                                                "type": {
                                                  "description": "Type of tip item in the 'listed' group.",
                                                  "example": "others",
                                                  "type": "string"
                                                },
                                                "updatedAt": {
                                                  "default": 0,
                                                  "description": "Date and time when the tip was last updated; UNIX timestamp in seconds since Epoch.",
                                                  "example": 1405008930,
                                                  "type": "integer"
                                                },
                                                "url": {
                                                  "description": "List of items with a URL property for a specific tip vote.",
                                                  "example": "/johnsmith/list/best-rooftops-in-nyc",
                                                  "type": "string"
                                                },
                                                "user": {
                                                  "description": "Details of the user who voted for a tip.",
                                                  "properties": {
                                                    "canonicalPath": {
                                                      "description": "Canonical path for user who left the tip.",
                                                      "example": "/user/123456",
                                                      "type": "string"
                                                    },
                                                    "canonicalUrl": {
                                                      "description": "Canonical URL for the user who left the tip.",
                                                      "example": "https://foursquare.com/user/123456",
                                                      "type": "string"
                                                    },
                                                    "countryCode": {
                                                      "description": "User's country code.",
                                                      "example": "US",
                                                      "type": "string"
                                                    },
                                                    "description": "Object containing information about the user who voted for the tip.",
                                                    "firstName": {
                                                      "description": "First name of the user who voted on a tip.",
                                                      "example": "John",
                                                      "type": "string"
                                                    },
                                                    "gender": {
                                                      "description": "The user's gender.",
                                                      "example": "male",
                                                      "type": "string"
                                                    },
                                                    "id": {
                                                      "description": "The user IDs of users who have voted on a specific tip.",
                                                      "example": "123456",
                                                      "type": "string"
                                                    },
                                                    "isAnonymous": {
                                                      "default": true,
                                                      "description": "Indicates if the user who voted on the tip is anonymous.",
                                                      "example": false,
                                                      "type": "boolean"
                                                    },
                                                    "lastName": {
                                                      "description": "The last name of the user who voted for a particular tip.",
                                                      "example": "Smith",
                                                      "type": "string"
                                                    },
                                                    "photo": {
                                                      "description": "A user's photo associated with a tip that has been voted on and listed.",
                                                      "properties": {
                                                        "description": "A user's photo associated with a tip that has been voted on, likely by a specific user.",
                                                        "prefix": {
                                                          "description": "URL photo prefix.",
                                                          "example": "https://fastly.4sqi.net/img/user/",
                                                          "type": "string"
                                                        },
                                                        "suffix": {
                                                          "description": "URL photo suffix.",
                                                          "example": "/blank_boy.png",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "type": "object"
                                                    }
                                                  },
                                                  "type": "object"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "type": "array"
                                          },
                                          "name": {
                                            "description": "Name of the group associated with the tip.",
                                            "example": "Lists from other people",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Response object for the type of tip in a list of groups for a voted tip.",
                                            "example": "others",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object"
                                },
                                "logView": {
                                  "default": true,
                                  "description": "Boolean indicating if the log for the tip view was successfully voted on.",
                                  "example": true,
                                  "type": "boolean"
                                },
                                "photo": {
                                  "description": "The photo object associated with the tip.",
                                  "properties": {
                                    "createdAt": {
                                      "default": 0,
                                      "description": "The creation date of the photo associated with the tip being voted on; UNIX timestamp in seconds since Epoch.",
                                      "example": 1404850662,
                                      "type": "integer"
                                    },
                                    "description": "Photo object associated with a tip vote response.",
                                    "height": {
                                      "default": 0,
                                      "description": "Height of the photo associated with a tip that has received a vote.",
                                      "example": 400,
                                      "type": "integer"
                                    },
                                    "id": {
                                      "description": "Unique photo identifer.",
                                      "example": "53bc51e611d24ae8f0b898b4",
                                      "type": "string"
                                    },
                                    "prefix": {
                                      "description": "URL image prefix.",
                                      "example": "https://fastly.4sqi.net/img/general/",
                                      "type": "string"
                                    },
                                    "source": {
                                      "description": "The source where the photo was obtained.",
                                      "properties": {
                                        "description": "Properties for a photo source associated with a tip vote response for a given tip ID.",
                                        "name": {
                                          "description": "Tip vote response from photo source.",
                                          "example": "Foursquare Web",
                                          "type": "string"
                                        },
                                        "url": {
                                          "description": "Properties for a photo source URL within a tip response from a successful vote request on a specific tip ID.",
                                          "example": "https://foursquare.com",
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "suffix": {
                                      "description": "Photo suffix for a tip vote response.",
                                      "example": "/private_content_2.png",
                                      "type": "string"
                                    },
                                    "visibility": {
                                      "description": "The visibility property of the photo property of the tip property of the response property of the 200 response property of the vote property for a specific tip.",
                                      "example": "public",
                                      "type": "string"
                                    },
                                    "width": {
                                      "default": 0,
                                      "description": "Width of the photo associated with a tip that has received a vote.",
                                      "example": 400,
                                      "type": "integer"
                                    }
                                  },
                                  "type": "object"
                                },
                                "photourl": {
                                  "description": "Object representing the photo URL for a voted tip.",
                                  "example": "https://fastly.4sqi.net/img/general/original/38616203_Diq-n4zrFv7CfIf1SxavodvzN9nk-dnIeZYZeym0aJg.jpg",
                                  "type": "string"
                                },
                                "ratedAt": {
                                  "default": 0,
                                  "description": "Timestamp indicating when the user voted on the tip; UNIX timestamp in seconds since Epoch.",
                                  "example": 1679075315,
                                  "type": "integer"
                                },
                                "saves": {
                                  "description": "Tip vote response with save property.",
                                  "properties": {
                                    "count": {
                                      "default": 0,
                                      "description": "Count of saves for a specific tip.",
                                      "example": 1,
                                      "type": "integer"
                                    },
                                    "description": "Object containing information about the number of saves for a tip.",
                                    "groups": {
                                      "description": "Array of groups containing information about the number of saves for a specific tip vote.",
                                      "type": "array"
                                    },
                                    "summary": {
                                      "description": "Object representing vote response for a specific tip, including the number of times the tip has been saved.",
                                      "example": "1 Save",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "text": {
                                  "description": "Text property of the tip object for a successful vote on a tip with the given ID.",
                                  "example": "A lower east side hangout with a retractable roof making it perfect no matter what the weather! We love the rooftop and always order any of their numerous truffle oil dishes (pizza, chicken, fries)",
                                  "type": "string"
                                },
                                "title": {
                                  "description": "The title of a tip that was voted on.",
                                  "example": "John Smith's tip",
                                  "type": "string"
                                },
                                "type": {
                                  "description": "Type of the tip associated with the vote response.",
                                  "example": "user",
                                  "type": "string"
                                },
                                "user": {
                                  "description": "User object for the specified tip vote response.",
                                  "properties": {
                                    "canonicalPath": {
                                      "description": "User's canonical path for a voted tip response.",
                                      "example": "/user/123456",
                                      "type": "string"
                                    },
                                    "canonicalUrl": {
                                      "description": "User's canonical URL for a voted tip response.",
                                      "example": "https://foursquare.com/user/123456",
                                      "type": "string"
                                    },
                                    "countryCode": {
                                      "description": "The user's country code for a voted tip. ",
                                      "example": "US",
                                      "type": "string"
                                    },
                                    "description": "Object representing a user's vote on a tip.",
                                    "firstName": {
                                      "description": "The first name of the user who voted on the specified tip.",
                                      "example": "John",
                                      "type": "string"
                                    },
                                    "gender": {
                                      "description": "Gender of the user who voted on a tip.",
                                      "example": "male",
                                      "type": "string"
                                    },
                                    "id": {
                                      "description": "The user ID associated with the tip that was voted on.",
                                      "example": "123456",
                                      "type": "string"
                                    },
                                    "isAnonymous": {
                                      "default": true,
                                      "description": "Boolean indicating if the user who posted the tip is anonymous.",
                                      "example": false,
                                      "type": "boolean"
                                    },
                                    "lastName": {
                                      "description": "The last name of the user who voted on a specific tip.",
                                      "example": "Smith",
                                      "type": "string"
                                    },
                                    "photo": {
                                      "description": "Object representing the user's photo associated with a tip vote response.",
                                      "properties": {
                                        "description": "User's photo associated with a tip vote response.",
                                        "prefix": {
                                          "description": "URL photo prefix.",
                                          "example": "https://fastly.4sqi.net/img/user/",
                                          "type": "string"
                                        },
                                        "suffix": {
                                          "description": "URL photo suffix.",
                                          "example": "/blank_boy.png",
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                },
                                "venue": {
                                  "description": "Properties of the associated venue.",
                                  "properties": {
                                    "allowMenuUrlEdit": {
                                      "default": true,
                                      "description": "Whether or not the venue associated with the tip allows the menu URL to be edited.",
                                      "example": true,
                                      "type": "boolean"
                                    },
                                    "beenHere": {
                                      "description": "Whether or not the user has been to the venue before.",
                                      "properties": {
                                        "description": "Object containing information about the venue where the tip has been marked as \"been here\".",
                                        "lastCheckinExpiredAt": {
                                          "default": 0,
                                          "description": "Last check-in expiration timestamp for the venue that the tip has been voted on; UNIX timestamp in seconds since Epoch.",
                                          "example": 0,
                                          "type": "integer"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "canonicalPath": {
                                      "description": "Venue's canonical path.",
                                      "example": "/v/hotel-chantelle/4cbcafab035d236aebebe64e",
                                      "type": "string"
                                    },
                                    "canonicalUrl": {
                                      "description": "Venue's canonical URL.",
                                      "example": "https://foursquare.com/v/hotel-chantelle/4cbcafab035d236aebebe64e",
                                      "type": "string"
                                    },
                                    "categories": {
                                      "description": "Array of categories for the venue associated with the tip that has been upvoted.",
                                      "items": {
                                        "description": "An array of category objects for the venue associated with the tip that was voted on.",
                                        "properties": {
                                          "description": "Array of categories associated with the venue for a given tip ID.",
                                          "icon": {
                                            "description": "Icon for category of a venue.",
                                            "properties": {
                                              "description": "Object containing information about a tip's associated venue's categories and their respective icons.",
                                              "mapPrefix": {
                                                "description": "Icon map prefix for categories associated with a tip at a specific ID.",
                                                "example": "https://ss3.4sqi.net/img/categories_map/nightlife/bar",
                                                "type": "string"
                                              },
                                              "prefix": {
                                                "description": "Icon prefix for venue categories.",
                                                "example": "https://ss3.4sqi.net/img/categories_v2/nightlife/pub_",
                                                "type": "string"
                                              },
                                              "suffix": {
                                                "description": "The suffix for the icon associated with the categories of a tip's associated venue.",
                                                "example": ".png",
                                                "type": "string"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "id": {
                                            "description": "Unique identifier for the category associated with a tip at a venue.",
                                            "example": "4bf58dd8d48988d116941735",
                                            "type": "string"
                                          },
                                          "name": {
                                            "description": "Category name for a tip at a venue.",
                                            "example": "Bar",
                                            "type": "string"
                                          },
                                          "pluralName": {
                                            "description": "The plural name of the categories associated with the tip's venue.",
                                            "example": "Bars",
                                            "type": "string"
                                          },
                                          "primary": {
                                            "default": true,
                                            "description": "Primary categories for the venue associated with a tip.",
                                            "example": true,
                                            "type": "boolean"
                                          },
                                          "shortName": {
                                            "description": "Description of an object containing properties for the categories of a venue associated with a user's tip vote.",
                                            "example": "Bar",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "type": "array"
                                    },
                                    "contact": {
                                      "description": "Object representing the contact information for the venue associated with a user's vote on a tip.",
                                      "properties": {
                                        "description": "Properties of a tip object for a successful vote post response for a specific tip, including contact information for the associated venue.",
                                        "formattedPhone": {
                                          "description": "A venue's formatted phone number.",
                                          "example": "(212) 254-9100",
                                          "type": "string"
                                        },
                                        "phone": {
                                          "description": "The phone number for the venue associated with the tip being voted on.",
                                          "example": "2122549100",
                                          "type": "string"
                                        },
                                        "twitter": {
                                          "description": "Twitter handle for the venue.",
                                          "example": "hotelchantelle",
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "createdAt": {
                                      "default": 0,
                                      "description": "The date and time when the specified tip was created; UNIX timestamp in seconds since Epoch.",
                                      "example": 1287434155,
                                      "type": "integer"
                                    },
                                    "description": "Object containing information about a venue associated with a voted tip.",
                                    "hasMenu": {
                                      "default": true,
                                      "description": "Whether or not the venue associated with the given tip has a menu.",
                                      "example": true,
                                      "type": "boolean"
                                    },
                                    "id": {
                                      "description": "Unique identifier for the tip's associated venue.",
                                      "example": "4cbcafab035d236aebebe64e",
                                      "type": "string"
                                    },
                                    "like": {
                                      "default": true,
                                      "description": "Boolean indicating if the user has liked the specific tip for a given venue.",
                                      "example": false,
                                      "type": "boolean"
                                    },
                                    "location": {
                                      "description": "Location object representing the venue where the tip was created.",
                                      "properties": {
                                        "address": {
                                          "description": "The address of the venue associated with the voted tip.",
                                          "example": "92 Ludlow St",
                                          "type": "string"
                                        },
                                        "cc": {
                                          "description": "Properties of the location of a venue associated with a tip that was voted on successfully.",
                                          "example": "US",
                                          "type": "string"
                                        },
                                        "city": {
                                          "description": "Properties of the city location for the tip venue in response to a vote being posted for a specific tip.",
                                          "example": "New York",
                                          "type": "string"
                                        },
                                        "contextGeoId": {
                                          "default": 0,
                                          "description": "",
                                          "example": 72057594043056510,
                                          "type": "integer"
                                        },
                                        "contextLine": {
                                          "description": "Location context line for a tip's associated venue, as part of the response for a successful vote post.",
                                          "example": "New York, NY",
                                          "type": "string"
                                        },
                                        "country": {
                                          "description": "The venue's location country for a voted tip.",
                                          "example": "United States",
                                          "type": "string"
                                        },
                                        "crossStreet": {
                                          "description": "The cross street property of the location of a tip's associated venue.",
                                          "example": "btwn Delancey & Broome St",
                                          "type": "string"
                                        },
                                        "description": "Properties for the location of the venue associated with a tip's response after successfully voting on a tip.",
                                        "formattedAddress": {
                                          "description": "Venue location formatted address for tip vote response.",
                                          "items": {
                                            "description": "Tip vote response object with tip and venue location formatted address items.",
                                            "example": "<span itemprop=\"streetAddress\">92 Ludlow St</span> (btwn Delancey &amp; Broome St)",
                                            "type": "string"
                                          },
                                          "type": "array"
                                        },
                                        "labeledLatLngs": {
                                          "description": "An array of labeled latitude and longitude coordinates for the venue associated with the tip that was voted on.",
                                          "items": {
                                            "description": "Items for the labeled latitude and longitude coordinates for the venue's location.",
                                            "properties": {
                                              "description": "Object containing information about a tip's associated venue location.",
                                              "label": {
                                                "description": "Location label for the tip's associated venue's labeled latitude and longitude coordinates.",
                                                "example": "display",
                                                "type": "string"
                                              },
                                              "lat": {
                                                "default": 0,
                                                "description": "Latitude to use for label.",
                                                "example": 40.71848249951786,
                                                "type": "number"
                                              },
                                              "lng": {
                                                "default": 0,
                                                "description": "LOngitude to use for label.",
                                                "examole": -73.98905576383794,
                                                "type": "number"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "type": "array"
                                        },
                                        "lat": {
                                          "default": 0,
                                          "description": "Latitude coordinate for the venue associated with the tip that was voted on.",
                                          "example": 40.71848249951786,
                                          "type": "number"
                                        },
                                        "lng": {
                                          "default": 0,
                                          "description": "Longitude coordinate for the venue associated with the voted tip.",
                                          "example": -73.98905576383794,
                                          "type": "number"
                                        },
                                        "neighborhood": {
                                          "description": "The venue's neighborhood.",
                                          "example": "Lower East Side",
                                          "type": "string"
                                        },
                                        "postalCode": {
                                          "description": "Venue's postal code.",
                                          "example": "10002",
                                          "type": "string"
                                        },
                                        "state": {
                                          "description": "The state of of the venue.",
                                          "example": "NY",
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "menu": {
                                      "description": "Properties of the venue's menu.",
                                      "properties": {
                                        "anchor": {
                                          "description": "Object properties for voting on a specific tip at a venue's menu anchor.",
                                          "example": "View Menu",
                                          "type": "string"
                                        },
                                        "canonicalPath": {
                                          "description": "Properties for the menu of the venue associated with the tip that was voted on.",
                                          "example": "/v/hotel-chantelle/4cbcafab035d236aebebe64e/menu",
                                          "type": "string"
                                        },
                                        "description": "Menu object for a specific tip vote response.",
                                        "label": {
                                          "description": "Properties of a specific tip vote's response, including the tip's venue's menu's label.",
                                          "example": "Menu",
                                          "type": "string"
                                        },
                                        "mobileUrl": {
                                          "description": "The mobile URL for the menu of the venue associated with the specified tip's vote response.",
                                          "example": "https://foursquare.com/v/4cbcafab035d236aebebe64e/device_menu",
                                          "type": "string"
                                        },
                                        "type": {
                                          "description": "The type of menu associated with a tip that has been voted on.",
                                          "example": "Menu",
                                          "type": "string"
                                        },
                                        "url": {
                                          "description": "The URL for the menu of a venue associated with a voted tip.",
                                          "example": "https://foursquare.com/v/hotel-chantelle/4cbcafab035d236aebebe64e/menu",
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "name": {
                                      "description": "The name of the venue associated with the tip voted on by the user.",
                                      "example": "Hotel Chantelle",
                                      "type": "string"
                                    },
                                    "photos": {
                                      "description": "Tip vote response for a specific tip, including the associated venue and photos.",
                                      "properties": {
                                        "count": {
                                          "default": 0,
                                          "description": "The number of photos associated with a tip at a venue.",
                                          "example": 1,
                                          "type": "integer"
                                        },
                                        "description": "Response object for a successful vote on a tip, including details about the tip and associated venue, and any photos attached to the venue.",
                                        "groups": {
                                          "description": "Array containing objects representing photos of a venue that are associated with a tip that has been voted on.",
                                          "items": {
                                            "description": "Array of photo objects associated with the venue where the tip was posted.",
                                            "properties": {
                                              "count": {
                                                "default": 0,
                                                "description": "Number of photos associated with a tip at a venue.",
                                                "example": 1,
                                                "type": "integer"
                                              },
                                              "description": "Photo object for a venue from a post vote response.",
                                              "items": {
                                                "description": "Array of photo objects for the associated venue in the response.",
                                                "items": {
                                                  "description": "Response object containing the retrieved data for a tip vote, including properties for the tip, its corresponding venue, and any associated photos.",
                                                  "properties": {
                                                    "createdAt": {
                                                      "default": 0,
                                                      "description": "Timestamp indicating when the photo was created; UNIX timestamp in seconds since Epoch.",
                                                      "example": 1338749538,
                                                      "type": "integer"
                                                    },
                                                    "description": "The response for a vote on a tip object's venue photos.",
                                                    "height": {
                                                      "default": 0,
                                                      "description": "Height of a photo associated with a tip vote.",
                                                      "example": 540,
                                                      "type": "integer"
                                                    },
                                                    "id": {
                                                      "description": "Unique identifier for the photo associated with the voted tip.",
                                                      "example": "4fcbb262e4b0a6e71560111f",
                                                      "type": "string"
                                                    },
                                                    "prefix": {
                                                      "description": "Photo URL prefix.",
                                                      "example": "https://fastly.4sqi.net/img/general/",
                                                      "type": "string"
                                                    },
                                                    "suffix": {
                                                      "description": "Photo URL suffix.",
                                                      "example": "/ZtWpQA7kPw9sNdszI-bKm2AQ3CNqR5RF0v02kMctp9w.jpg",
                                                      "type": "string"
                                                    },
                                                    "user": {
                                                      "description": "Object representing a user's vote on a tip, including the associated venue and photos.",
                                                      "properties": {
                                                        "canonicalPath": {
                                                          "description": "User canonical path.",
                                                          "example": "/user/123456",
                                                          "type": "string"
                                                        },
                                                        "canonicalUrl": {
                                                          "description": "User canonical URL.",
                                                          "example": "https://foursquare.com/user/123456",
                                                          "type": "string"
                                                        },
                                                        "countryCode": {
                                                          "description": "The country code of the user who voted on a tip at a specific venue's photo.",
                                                          "example": "US",
                                                          "type": "string"
                                                        },
                                                        "description": "Nested user objects associated with a tip's venue photo groups.",
                                                        "firstName": {
                                                          "description": "The first name of the user who created the tip associated with the specified tip ID.",
                                                          "example": "John",
                                                          "type": "string"
                                                        },
                                                        "gender": {
                                                          "description": "User's gender associated with a voted tip at a specific venue.",
                                                          "example": "male",
                                                          "type": "string"
                                                        },
                                                        "id": {
                                                          "description": "The user's unique identifier.",
                                                          "example": "123456",
                                                          "type": "string"
                                                        },
                                                        "isAnonymous": {
                                                          "default": true,
                                                          "description": "Flag indicating if the user who voted on a tip is anonymous.",
                                                          "example": false,
                                                          "type": "boolean"
                                                        },
                                                        "lastName": {
                                                          "description": "The user's last name for a tip at a venue's photo group.",
                                                          "example": "Smith",
                                                          "type": "string"
                                                        },
                                                        "photo": {
                                                          "description": "User profile photo associated with a voted tip for a specific venue at a specified location.",
                                                          "properties": {
                                                            "description": "Response object for a user's photo on a venue's tip.",
                                                            "prefix": {
                                                              "description": "URL photo prefix.",
                                                              "example": "https://fastly.4sqi.net/img/user/",
                                                              "type": "string"
                                                            },
                                                            "suffix": {
                                                              "description": "URL photo suffix.",
                                                              "example": "/blank_boy.png",
                                                              "type": "string"
                                                            }
                                                          },
                                                          "type": "object"
                                                        }
                                                      },
                                                      "type": "object"
                                                    },
                                                    "visibility": {
                                                      "description": "Properties of a photo belonging to a venue that is associated with a tip that has been voted on.",
                                                      "example": "public",
                                                      "type": "string"
                                                    },
                                                    "width": {
                                                      "default": 0,
                                                      "description": "Width of the photo associated with a tip vote.",
                                                      "example": 540,
                                                      "type": "integer"
                                                    }
                                                  },
                                                  "type": "object"
                                                },
                                                "type": "array"
                                              },
                                              "name": {
                                                "description": "The name of the group of photos.",
                                                "example": "Venue photos",
                                                "type": "string"
                                              },
                                              "type": {
                                                "description": "Type of photo associated with a tip vote.",
                                                "example": "venue",
                                                "type": "string"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "type": "array"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "popularityByGeo": {
                                      "default": 0,
                                      "description": "Popularity of a venue based on geographic location.",
                                      "example": 0.9887599976301914,
                                      "type": "number"
                                    },
                                    "price": {
                                      "description": "Object containing information about the price of a venue associated with a user's vote on a tip.",
                                      "properties": {
                                        "currency": {
                                          "description": "The price and currency information for the venue associated with the specified tip.",
                                          "example": "$",
                                          "type": "string"
                                        },
                                        "description": "Object representing voting response for a tip, including properties for the tip, venue, and price information.",
                                        "message": {
                                          "description": "Response object for voting on a tip, including the tip's associated venue and price message.",
                                          "example": "Expensive",
                                          "type": "string"
                                        },
                                        "tier": {
                                          "default": 0,
                                          "description": "Object property representing the price tier of the venue associated with the tip.",
                                          "example": 3,
                                          "type": "integer"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "rating": {
                                      "default": 0,
                                      "description": "The rating property of the venue associated with the tip after successfully voting on it.",
                                      "example": 7.3,
                                      "type": "number"
                                    },
                                    "ratingColor": {
                                      "description": "Color of the rating for a tip at a specific venue.",
                                      "example": "C5DE35",
                                      "type": "string"
                                    },
                                    "ratingSignals": {
                                      "default": 0,
                                      "description": "Number of signals for the venue's rating.",
                                      "example": 1450,
                                      "type": "integer"
                                    },
                                    "reservations": {
                                      "description": "The voted tip's associated venue's reservation information.",
                                      "properties": {
                                        "description": "The associated tip's reservation properties.",
                                        "id": {
                                          "description": "The ID of a venue's reservation associated with a voted tip.",
                                          "example": "64384",
                                          "type": "string"
                                        },
                                        "provider": {
                                          "description": "The provider of reservations for a specific tip at a venue.",
                                          "example": "opentable",
                                          "type": "string"
                                        },
                                        "url": {
                                          "description": "The URL for reservations at the venue associated with the tip that was voted on.",
                                          "example": "http://www.opentable.com/single.aspx?rid=64384&ref=9601",
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "stats": {
                                      "description": "Stats for the venue associated with the specified tip.",
                                      "properties": {
                                        "checkinsCount": {
                                          "default": 0,
                                          "description": "Number of check-ins at the venue associated with the tip that was voted on.",
                                          "example": 36193,
                                          "type": "integer"
                                        },
                                        "description": "Vote response object containing information about a tip and its associated venue's statistics."
                                      },
                                      "tipCount": {
                                        "default": 0,
                                        "description": "Number of tips for a venue.",
                                        "example": 239,
                                        "type": "integer"
                                      },
                                      "usersCount": {
                                        "default": 0,
                                        "description": "Number of users who have voted on a tip from a specific venue.",
                                        "example": 21717,
                                        "type": "integer"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "url": {
                                    "description": "Venue URL.",
                                    "example": "http://hotelchantelle.com",
                                    "type": "string"
                                  },
                                  "urlSig": {
                                    "description": "URL signature for a tip's associated venue.",
                                    "example": "qRpsDTNyZKDZI3zdeDGPYnMXyXw=",
                                    "type": "string"
                                  },
                                  "venuePage": {
                                    "description": "Nested object containing information about the venue page associated with the voted tip.",
                                    "properties": {
                                      "description": "Nested object containing information about a venue's page and associated tip voting response.",
                                      "id": {
                                        "description": "Unique identifier for the venue page associated with the voted tip.",
                                        "example": "72046848",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "verified": {
                                    "default": true,
                                    "description": "Boolean indicating if the venue for the voted tip is verified.",
                                    "example": true,
                                    "type": "boolean"
                                  }
                                }
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "type": "object"
                    },
                    {
                      "title": "Downvote success",
                      "properties": {
                        "description": "Object representing a successful downvote on a tip.",
                        "meta": {
                          "description": "Metadata object for API request response.",
                          "properties": {
                            "code": {
                              "default": 0,
                              "description": "Status code indicating the result of voting on a tip.",
                              "example": 200,
                              "type": "integer"
                            },
                            "description": "Metadata object containing additional information about the vote response.",
                            "requestId": {
                              "description": "Unique identifier for the API request.",
                              "example": "6414b4d0813165221a7e3422",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "notifications": {
                          "description": "Array of notification objects for a successful POST request to vote on a tip.",
                          "items": {
                            "description": "Array of objects representing notifications for a successful vote on a tip.",
                            "properties": {
                              "description": "Notification objects containing information about the vote response.",
                              "item": {
                                "description": "Notification object for a vote on a tip.",
                                "properties": {
                                  "description": "Response object containing notifications for a tip vote.",
                                  "unreadCount": {
                                    "default": 0,
                                    "description": "Number of unread items in the notification.",
                                    "example": 0,
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              },
                              "type": {
                                "description": "Type of notification for a specific tip vote response.",
                                "example": "notificationTray",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "response": {
                          "description": "Response object containing the result of the vote for a specific tip.",
                          "properties": {
                            "description": "Response object containing the result of a successful vote on a tip.",
                            "tip": {
                              "description": "The response object for voting on a tip, containing the tip's properties.",
                              "properties": {
                                "agreeCount": {
                                  "default": 0,
                                  "description": "Number of agrees for a specific tip.",
                                  "example": 0,
                                  "type": "integer"
                                },
                                "canonicalPath": {
                                  "description": "Canonical path for the tip's response vote.",
                                  "example": "/item/53bc46b7498e355aed38c696",
                                  "type": "string"
                                },
                                "canonicalUrl": {
                                  "description": "Canonical URL for a tip's response to a vote.",
                                  "example": "https://foursquare.com/item/53bc46b7498e355aed38c696",
                                  "type": "string"
                                },
                                "createdAt": {
                                  "default": 0,
                                  "description": "The timestamp when the vote was created for a specific tip; UNIX timestamp in seconds since Epoch.",
                                  "example": 1404847799,
                                  "type": "integer"
                                },
                                "description": "Tip object with properties for the tip ID and user vote response.",
                                "disagreeCount": {
                                  "default": 0,
                                  "description": "Number of users who disagreed with the tip.",
                                  "example": 1,
                                  "type": "integer"
                                },
                                "disagreed": {
                                  "default": true,
                                  "description": "Boolean indicating whether the user disagreed with the tip.",
                                  "example": true,
                                  "type": "boolean"
                                },
                                "id": {
                                  "description": "ID of the tip being voted on.",
                                  "example": "53bc46b7498e355aed38c696",
                                  "type": "string"
                                },
                                "lastDownvoteTimestamp": {
                                  "default": 0,
                                  "description": "Timestamp of the last downvote for a specific tip.",
                                  "example": 1679078608,
                                  "type": "integer"
                                },
                                "lastVoteText": {
                                  "description": "Retrieve the last vote text for a specific tip with a successful response.",
                                  "example": "Downvoted just now",
                                  "type": "string"
                                },
                                "like": {
                                  "default": true,
                                  "description": "Indicates whether or not the user has liked the specified tip.",
                                  "example": true,
                                  "type": "boolean"
                                },
                                "likes": {
                                  "description": "Number of likes for a specific tip.",
                                  "properties": {
                                    "count": {
                                      "default": 0,
                                      "description": "Returns the total number of likes for a specific tip.",
                                      "example": 1,
                                      "type": "integer"
                                    },
                                    "description": "An object containing information about the number of likes for a specific tip.",
                                    "groups": {
                                      "description": "Number of likes for a specific tip.",
                                      "type": "array"
                                    },
                                    "summary": {
                                      "description": "Likes summary for a specific tip's vote response.",
                                      "example": "You",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "listed": {
                                  "description": "Array of objects representing the tip response, including the tip's listed status.",
                                  "properties": {
                                    "count": {
                                      "default": 0,
                                      "description": "Number of times a tip has been listed.",
                                      "example": 1,
                                      "type": "integer"
                                    },
                                    "description": "Tip vote response object containing the listed property.",
                                    "groups": {
                                      "description": "This array contains objects with properties related to voting on a tip and its associated groups.",
                                      "items": {
                                        "description": "Array of objects containing information about groups where the tip has been listed.",
                                        "properties": {
                                          "count": {
                                            "default": 0,
                                            "description": "Number of groups that have listed this tip.",
                                            "example": 1,
                                            "type": "integer"
                                          },
                                          "description": "List of groups where the tip is listed.",
                                          "items": {
                                            "description": "Array containing items grouped by listed tips.",
                                            "items": {
                                              "description": "Object representing a tip response with a list of groups containing items.",
                                              "properties": {
                                                "canonicalPath": {
                                                  "description": "Canonical path for the tip within a list of groups.",
                                                  "example": "/johnsmith/list/best-rooftops-in-nyc",
                                                  "type": "string"
                                                },
                                                "canonicalUrl": {
                                                  "description": "Canonical URL for a tip vote response.",
                                                  "example": "https://foursquare.com/johnsmith/list/best-rooftops-in-nyc",
                                                  "type": "string"
                                                },
                                                "collaborative": {
                                                  "default": true,
                                                  "description": "Collaborative status of a tip within a venue group.",
                                                  "example": false,
                                                  "type": "boolean"
                                                },
                                                "createdAt": {
                                                  "default": 0,
                                                  "description": "Creation date of a tip object within a list; UNIX timestamp in seconds since Epoch.",
                                                  "example": 1404922582,
                                                  "type": "integer"
                                                },
                                                "description": {
                                                  "example": "Looking to catch some rays while enjoying a refreshing cocktail with friends? Here are the best places to enjoy the summer air in NYC.",
                                                  "type": "string"
                                                },
                                                "editable": {
                                                  "default": true,
                                                  "description": "Editable property of the tip item in the list of groups in the response of voting on a tip.",
                                                  "example": false,
                                                  "type": "boolean"
                                                },
                                                "followers": {
                                                  "description": "List of followers for a tip.",
                                                  "properties": {
                                                    "count": {
                                                      "default": 0,
                                                      "description": "Number of followers for a tip in a list.",
                                                      "example": 0,
                                                      "type": "integer"
                                                    },
                                                    "description": "Returns the list of users who have liked the specified tip."
                                                  },
                                                  "type": "object"
                                                },
                                                "id": {
                                                  "description": "Unique identifier for the tip listed in the response of a vote.",
                                                  "example": "53bd6ad611d277514a88b94b",
                                                  "type": "string"
                                                },
                                                "listItems": {
                                                  "description": "Tip vote response object containing a list of items with list items for a specific tip.",
                                                  "properties": {
                                                    "count": {
                                                      "default": 0,
                                                      "description": "Number of items in a list of items for a tip that was voted on.",
                                                      "example": 5,
                                                      "type": "integer"
                                                    },
                                                    "description": "Response object for voting on a tip."
                                                  },
                                                  "type": "object"
                                                },
                                                "logView": {
                                                  "default": true,
                                                  "description": "Vote response for a tip with the option to log views.",
                                                  "example": true,
                                                  "type": "boolean"
                                                },
                                                "name": {
                                                  "description": "Description of returned object and its properties.",
                                                  "example": "Best Rooftops in NYC",
                                                  "type": "string"
                                                },
                                                "photo": {
                                                  "description": "The response object contains the photo associated with the tip.",
                                                  "properties": {
                                                    "createdAt": {
                                                      "default": 0,
                                                      "description": "Date and time the photo associated with a tip was created; UNIX timestamp in seconds since Epoch.",
                                                      "example": 1404850669,
                                                      "type": "integer"
                                                    },
                                                    "description": "Photo object for a tip that is listed in a group.",
                                                    "height": {
                                                      "default": 0,
                                                      "description": "Height of photo in returned tip object.",
                                                      "example": 168,
                                                      "type": "integer"
                                                    },
                                                    "id": {
                                                      "description": "An object representing the ID of a photo associated with a tip on a venue.",
                                                      "example": "53bc51ed11d24ae8f0b89e23",
                                                      "type": "string"
                                                    },
                                                    "prefix": {
                                                      "description": "Prefix for the photo URL of a tip in a given group within a list of tips that were voted on by the user.",
                                                      "example": "https://fastly.4sqi.net/img/general/",
                                                      "type": "string"
                                                    },
                                                    "suffix": {
                                                      "description": "URL suffix for the image.",
                                                      "example": "/38616203_Diq-n4zrFv7CfIf1SxavodvzN9nk-dnIeZYZeym0aJg.jpg",
                                                      "type": "string"
                                                    },
                                                    "user": {
                                                      "description": "This object contains information about the user who uploaded a photo associated with a tip that has been voted on.",
                                                      "properties": {
                                                        "canonicalPath": {
                                                          "description": "Canonical path for the user.",
                                                          "example": "/user/123456",
                                                          "type": "string"
                                                        },
                                                        "canonicalUrl": {
                                                          "description": "Canonical URL for the user.",
                                                          "example": "https://foursquare.com/user/123456",
                                                          "type": "string"
                                                        },
                                                        "countryCode": {
                                                          "description": "Returns the country code of the user who voted on a tip associated with a specific tip ID.",
                                                          "example": "US",
                                                          "type": "string"
                                                        },
                                                        "description": "Array of photos uploaded by the user who created the tip.",
                                                        "firstName": {
                                                          "description": "The first name of the user who voted on a tip.",
                                                          "example": "John",
                                                          "type": "string"
                                                        },
                                                        "gender": {
                                                          "description": "The gender of the user who voted on a tip for a venue.",
                                                          "example": "male",
                                                          "type": "string"
                                                        },
                                                        "id": {
                                                          "description": "Unique identifier of the user.",
                                                          "example": "123456",
                                                          "type": "string"
                                                        },
                                                        "isAnonymous": {
                                                          "default": true,
                                                          "description": "Whether or not the user is anonymous.",
                                                          "example": false,
                                                          "type": "boolean"
                                                        },
                                                        "lastName": {
                                                          "description": "User's last name for the photo associated with the tip being voted on.",
                                                          "example": "Smith",
                                                          "type": "string"
                                                        },
                                                        "photo": {
                                                          "description": "Object representing a user's photo associated with a tip.",
                                                          "properties": {
                                                            "description": "Returns the user's profile photo for a photo associated with a tip in a listed group.",
                                                            "prefix": {
                                                              "description": "URL photo prefix for a user's profile photo.",
                                                              "example": "https://fastly.4sqi.net/img/user/",
                                                              "type": "string"
                                                            },
                                                            "suffix": {
                                                              "description": "URL photo suffix for a tip on a venue vote.",
                                                              "example": "/blank_boy.png",
                                                              "type": "string"
                                                            }
                                                          },
                                                          "type": "object"
                                                        },
                                                        "type": {
                                                          "description": "User type for photo in listed groups within a tip vote response.",
                                                          "example": "page",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "type": "object"
                                                    },
                                                    "visibility": {
                                                      "description": "The tip's visibility property.",
                                                      "example": "public",
                                                      "type": "string"
                                                    },
                                                    "width": {
                                                      "default": 0,
                                                      "description": "Width of the photo in pixels.",
                                                      "example": 168,
                                                      "type": "integer"
                                                    }
                                                  },
                                                  "type": "object"
                                                },
                                                "public": {
                                                  "default": true,
                                                  "description": "Boolean indicating if the tip is listed on the venue's page.",
                                                  "example": true,
                                                  "type": "boolean"
                                                },
                                                "type": {
                                                  "description": "Returns the type of action taken on a tip.",
                                                  "example": "others",
                                                  "type": "string"
                                                },
                                                "updatedAt": {
                                                  "default": 0,
                                                  "description": "The timestamp when the tip was last updated for a tip listed in a group; UNIX timestamp in seconds since Epoch.",
                                                  "example": 1405008930,
                                                  "type": "integer"
                                                },
                                                "url": {
                                                  "description": "The url for the list",
                                                  "example": "/johnsmith/list/best-rooftops-in-nyc",
                                                  "type": "string"
                                                },
                                                "user": {
                                                  "description": "User properties.",
                                                  "properties": {
                                                    "canonicalPath": {
                                                      "description": "User canonical path.",
                                                      "example": "/johnsmith",
                                                      "type": "string"
                                                    },
                                                    "canonicalUrl": {
                                                      "description": "A user's canonical URL for a tip from a venue.",
                                                      "example": "https://foursquare.com/p/douglas-elliman/38616203",
                                                      "type": "string"
                                                    },
                                                    "countryCode": {
                                                      "description": "User's country code.",
                                                      "example": "US",
                                                      "type": "string"
                                                    },
                                                    "description": "Tip vote response object for a single tip with listed groups, containing user information.",
                                                    "firstName": {
                                                      "description": "The first name of the user who voted on a tip",
                                                      "example": "Douglas Elliman",
                                                      "type": "string"
                                                    },
                                                    "gender": {
                                                      "description": "The gender of the user who voted on the specified tip.",
                                                      "example": "none",
                                                      "type": "string"
                                                    },
                                                    "id": {
                                                      "description": "The user's unique identifier.",
                                                      "example": "38616203",
                                                      "type": "string"
                                                    },
                                                    "isAnonymous": {
                                                      "default": true,
                                                      "description": "Boolean indicating if the user who posted the tip is anonymous.",
                                                      "example": false,
                                                      "type": "boolean"
                                                    },
                                                    "photo": {
                                                      "description": "Tip vote response object containing properties for the user's photo.",
                                                      "properties": {
                                                        "description": "An object containing information about a user's photo in response to a vote on a tip.",
                                                        "prefix": {
                                                          "description": "URL prefix.",
                                                          "example": "https://fastly.4sqi.net/img/user/",
                                                          "type": "string"
                                                        },
                                                        "suffix": {
                                                          "description": "URL suffix.",
                                                          "example": "/1BV0WACLZDFVGTFV.png",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "type": "object"
                                                    },
                                                    "type": {
                                                      "description": "The type of user.",
                                                      "example": "page",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "type": "object"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "type": "array"
                                          },
                                          "name": {
                                            "description": "The \"name\" property of a group within a listed tip response for a specific tip's vote.",
                                            "example": "Lists from other people",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "The type of group associated with a tip's listing, for a successful vote on a tip.",
                                            "example": "others",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object"
                                },
                                "logView": {
                                  "default": true,
                                  "description": "Whether the user has viewed the specified tip.",
                                  "example": true,
                                  "type": "boolean"
                                },
                                "photo": {
                                  "description": "The associated photo.",
                                  "properties": {
                                    "createdAt": {
                                      "default": 0,
                                      "description": "Timestamp indicating when the tip's associated photo was created; UNIX timestamp in seconds since Epoch.",
                                      "example": 1404850662,
                                      "type": "integer"
                                    },
                                    "description": "An object containing the properties of a photo associated with a tip vote response.",
                                    "height": {
                                      "default": 0,
                                      "description": "Height of the photo attached to the response for voting on a specific tip. ",
                                      "example": 400,
                                      "type": "integer"
                                    },
                                    "id": {
                                      "description": "Unique identifier for the photo associated with the voted tip.",
                                      "example": "53bc51e611d24ae8f0b898b4",
                                      "type": "string"
                                    },
                                    "prefix": {
                                      "description": "Photo URL prefix.",
                                      "example": "https://fastly.4sqi.net/img/general/",
                                      "type": "string"
                                    },
                                    "source": {
                                      "description": "The associated photo's source.",
                                      "properties": {
                                        "description": "Source properties.",
                                        "name": {
                                          "description": "The name of the source of the photo associated with a tip's vote response.",
                                          "example": "Foursquare Web",
                                          "type": "string"
                                        },
                                        "url": {
                                          "description": "The source's URL.",
                                          "example": "https://foursquare.com",
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "suffix": {
                                      "description": "The photo suffix for a tip's vote response image.",
                                      "example": "/private_content_2.png",
                                      "type": "string"
                                    },
                                    "visibility": {
                                      "description": "The visibility property for a photo associated with a tip that has been voted on.",
                                      "example": "public",
                                      "type": "string"
                                    },
                                    "width": {
                                      "default": 0,
                                      "description": "Width of the photo associated with the voted tip.",
                                      "example": 400,
                                      "type": "integer"
                                    }
                                  },
                                  "type": "object"
                                },
                                "photourl": {
                                  "description": "Photo URL for a voted tip on a specific tip ID.",
                                  "example": "https://fastly.4sqi.net/img/general/original/38616203_Diq-n4zrFv7CfIf1SxavodvzN9nk-dnIeZYZeym0aJg.jpg",
                                  "type": "string"
                                },
                                "ratedAt": {
                                  "default": 0,
                                  "description": "The timestamp indicating when the tip was rated; UNIX timestamp in seconds since Epoch.",
                                  "example": 1679075315,
                                  "type": "integer"
                                },
                                "saves": {
                                  "description": "Number of saves for a specific tip.",
                                  "properties": {
                                    "count": {
                                      "default": 0,
                                      "description": "The number of saves for a given tip.",
                                      "example": 1,
                                      "type": "integer"
                                    },
                                    "description": "Response object containing the number of saves for a tip.",
                                    "groups": {
                                      "description": "Groups that a user can save a tip to.",
                                      "type": "array"
                                    },
                                    "summary": {
                                      "description": "Returns a summary of the number of saves for a specific tip vote.",
                                      "example": "1 Save",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "text": {
                                  "description": "Text of a tip in the response for voting on a specific tip.",
                                  "example": "A lower east side hangout with a retractable roof making it perfect no matter what the weather! We love the rooftop and always order any of their numerous truffle oil dishes (pizza, chicken, fries)",
                                  "type": "string"
                                },
                                "title": {
                                  "description": "Title of a tip.",
                                  "example": "John Smith's tip",
                                  "type": "string"
                                },
                                "type": {
                                  "description": "Type of tip object for a successful vote on a tip.",
                                  "example": "user",
                                  "type": "string"
                                },
                                "user": {
                                  "description": "The user who voted on the specified tip.",
                                  "properties": {
                                    "canonicalPath": {
                                      "description": "User canonical path.",
                                      "example": "/johnsmith",
                                      "type": "string"
                                    },
                                    "canonicalUrl": {
                                      "description": "User canonical URL.",
                                      "example": "https://foursquare.com/p/douglas-elliman/38616203",
                                      "type": "string"
                                    },
                                    "countryCode": {
                                      "description": "The country code of the user who voted on a tip.",
                                      "example": "US",
                                      "type": "string"
                                    },
                                    "description": "Unique identifier for the user who voted on the tip.",
                                    "firstName": {
                                      "description": "The first name of the user who voted on a tip with the given ID.",
                                      "example": "Douglas Elliman",
                                      "type": "string"
                                    },
                                    "gender": {
                                      "description": "The gender of the user who voted on a specific tip.",
                                      "example": "none",
                                      "type": "string"
                                    },
                                    "id": {
                                      "description": "The unique identifier for the user who voted on a tip.",
                                      "example": "38616203",
                                      "type": "string"
                                    },
                                    "isAnonymous": {
                                      "default": true,
                                      "description": "Indicates if the user who posted the tip is anonymous.",
                                      "example": false,
                                      "type": "boolean"
                                    },
                                    "photo": {
                                      "description": "Unique identifier for the user's profile photo.",
                                      "properties": {
                                        "description": "User's profile photo information for a tip's upvote response.",
                                        "prefix": {
                                          "description": "Prefix for the photo URL of the user who voted on a tip.",
                                          "example": "https://fastly.4sqi.net/img/user/",
                                          "type": "string"
                                        },
                                        "suffix": {
                                          "description": "The photo suffix for the user who voted on a tip.",
                                          "example": "/1BV0WACLZDFVGTFV.png",
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": {
                                      "description": "Type of user who voted on a tip.",
                                      "example": "page",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "venue": {
                                  "description": "Venue properties.",
                                  "properties": {
                                    "allowMenuUrlEdit": {
                                      "default": true,
                                      "description": "Boolean indicating whether the venue allows editing of its menu URL.",
                                      "example": true,
                                      "type": "boolean"
                                    },
                                    "beenHere": {
                                      "description": "Vote response for a tip, including information about the associated venue's 'beenHere' status.",
                                      "properties": {
                                        "description": "Object containing information about a user's vote on a tip at a specific venue.",
                                        "lastCheckinExpiredAt": {
                                          "default": 0,
                                          "description": "Timestamp indicating when the user's last check-in at the venue expired; UNIX timestamp in seconds since Epoch.",
                                          "example": 0,
                                          "type": "integer"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "canonicalPath": {
                                      "description": "The venue's canonical path.",
                                      "example": "/v/hotel-chantelle/4cbcafab035d236aebebe64e",
                                      "type": "string"
                                    },
                                    "canonicalUrl": {
                                      "description": "The venue's canonical URL.",
                                      "example": "https://foursquare.com/v/hotel-chantelle/4cbcafab035d236aebebe64e",
                                      "type": "string"
                                    },
                                    "categories": {
                                      "description": "An array of categories for the venue associated with the tip.",
                                      "items": {
                                        "description": "Category of the venue associated with a tip post vote response.",
                                        "properties": {
                                          "description": "Object containing information about the categories of a venue.",
                                          "icon": {
                                            "description": "Icon object for the categories of a venue associated with a tip vote response.",
                                            "properties": {
                                              "description": "Icon for category associated with a tip.",
                                              "mapPrefix": {
                                                "description": "Icon map prefix for a tip's associated venue's categories.",
                                                "example": "https://ss3.4sqi.net/img/categories_map/nightlife/bar",
                                                "type": "string"
                                              },
                                              "prefix": {
                                                "description": "URL image prefix.",
                                                "example": "https://ss3.4sqi.net/img/categories_v2/nightlife/pub_",
                                                "type": "string"
                                              },
                                              "suffix": {
                                                "description": "URL image suffix.",
                                                "example": ".png",
                                                "type": "string"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "id": {
                                            "description": "Venue category unique ID.",
                                            "example": "4bf58dd8d48988d116941735",
                                            "type": "string"
                                          },
                                          "name": {
                                            "description": "The name of the venue category.",
                                            "example": "Bar",
                                            "type": "string"
                                          },
                                          "pluralName": {
                                            "description": "The plural name of the venue category.",
                                            "example": "Bars",
                                            "type": "string"
                                          },
                                          "primary": {
                                            "default": true,
                                            "description": "Boolean indicating if the primary category for the venue of the tip being voted on is included in the response.",
                                            "example": true,
                                            "type": "boolean"
                                          },
                                          "shortName": {
                                            "description": "Short name of category for a specific tip's associated venue.",
                                            "example": "Bar",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "type": "array"
                                    },
                                    "contact": {
                                      "description": "Contact information for the venue.",
                                      "properties": {
                                        "description": "Contanct information properties.",
                                        "formattedPhone": {
                                          "description": "The formatted phone number of a venue associated with a tip that has been voted on.",
                                          "example": "(212) 254-9100",
                                          "type": "string"
                                        },
                                        "phone": {
                                          "description": "Non-formatted phone number.",
                                          "example": "2122549100",
                                          "type": "string"
                                        },
                                        "twitter": {
                                          "description": "Twitter handle for the venue.",
                                          "example": "hotelchantelle",
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "createdAt": {
                                      "default": 0,
                                      "description": "The timestamp of when the tip's associated venue was created; UNIX timestamp in seconds since Epoch.",
                                      "example": 1287434155,
                                      "type": "integer"
                                    },
                                    "description": "",
                                    "hasMenu": {
                                      "default": true,
                                      "description": "Boolean indicating if the venue associated with the tip has a menu.",
                                      "example": true,
                                      "type": "boolean"
                                    },
                                    "id": {
                                      "description": "Unique identifier for the venue associated with the tip.",
                                      "example": "4cbcafab035d236aebebe64e",
                                      "type": "string"
                                    },
                                    "like": {
                                      "default": true,
                                      "description": "Boolean indicating if the user has liked the venue associated with the tip.",
                                      "example": false,
                                      "type": "boolean"
                                    },
                                    "location": {
                                      "description": "Location information for a venue associated with a tip response.",
                                      "properties": {
                                        "address": {
                                          "description": "The address of the venue associated with a tip.",
                                          "example": "92 Ludlow St",
                                          "type": "string"
                                        },
                                        "cc": {
                                          "description": "Location code for a venue's address.",
                                          "example": "US",
                                          "type": "string"
                                        },
                                        "city": {
                                          "description": "The city where a tip was posted.",
                                          "example": "New York",
                                          "type": "string"
                                        },
                                        "contextGeoId": {
                                          "default": 0,
                                          "description": "",
                                          "example": 72057594043056510,
                                          "type": "integer"
                                        },
                                        "contextLine": {
                                          "description": "The context line for a tip's associated venue's location.",
                                          "example": "New York, NY",
                                          "type": "string"
                                        },
                                        "country": {
                                          "description": "The country location of a tip.",
                                          "example": "United States",
                                          "type": "string"
                                        },
                                        "crossStreet": {
                                          "description": "The venue's cross street location.",
                                          "example": "btwn Delancey & Broome St",
                                          "type": "string"
                                        },
                                        "description": "An object containing a single tip with venue location properties.",
                                        "formattedAddress": {
                                          "description": "Formatted address of the venue associated with the tip that was voted on.",
                                          "items": {
                                            "description": "Formatted address of the location associated with the tip vote response.",
                                            "example": "<span itemprop=\"streetAddress\">92 Ludlow St</span> (btwn Delancey &amp; Broome St)",
                                            "type": "string"
                                          },
                                          "type": "array"
                                        },
                                        "labeledLatLngs": {
                                          "description": "An array of labeled latitude and longitude coordinates for the venue associated with the response.",
                                          "items": {
                                            "description": "An array of labeled latitude and longitude coordinates for the associated venue's location.",
                                            "properties": {
                                              "description": "Information about the associated venue's location and labeled latitude and longitude coordinates.",
                                              "label": {
                                                "description": "The label for a venue's labeled latitude and longitude coordinates.",
                                                "example": "display",
                                                "type": "string"
                                              },
                                              "lat": {
                                                "default": 0,
                                                "description": "Latitude coordinate for the label.",
                                                "example": 40.71848249951786,
                                                "type": "number"
                                              },
                                              "lng": {
                                                "default": 0,
                                                "description": "Longitude coordinate for the label.",
                                                "example": -73.98905576383794,
                                                "type": "number"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "type": "array"
                                        },
                                        "lat": {
                                          "default": 0,
                                          "description": "The venue's location latitude.",
                                          "example": 40.71848249951786,
                                          "type": "number"
                                        },
                                        "lng": {
                                          "default": 0,
                                          "description": "The venue's location longitude.",
                                          "example": -73.98905576383794,
                                          "type": "number"
                                        },
                                        "neighborhood": {
                                          "description": "The neighborhood of the venue associated with the tip voted on by the user.",
                                          "example": "Lower East Side",
                                          "type": "string"
                                        },
                                        "postalCode": {
                                          "description": "Venue's postal code in a specific tip's vote post.",
                                          "example": "10002",
                                          "type": "string"
                                        },
                                        "state": {
                                          "description": "State of a voted tip at a specific venue location.",
                                          "example": "NY",
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "menu": {
                                      "description": "Object representing the menu of a venue associated with a tip that the user has voted on.",
                                      "properties": {
                                        "anchor": {
                                          "description": "Object representing the anchor of a menu for a specific tip at a venue.",
                                          "example": "View Menu",
                                          "type": "string"
                                        },
                                        "canonicalPath": {
                                          "description": "Canonical path of the menu.",
                                          "example": "/v/hotel-chantelle/4cbcafab035d236aebebe64e/menu",
                                          "type": "string"
                                        },
                                        "description": "The menu of the venue associated with the tip that was voted on.",
                                        "label": {
                                          "description": "Label for the menu.",
                                          "example": "Menu",
                                          "type": "string"
                                        },
                                        "mobileUrl": {
                                          "description": "URL for the mobile menu.",
                                          "example": "https://foursquare.com/v/4cbcafab035d236aebebe64e/device_menu",
                                          "type": "string"
                                        },
                                        "type": {
                                          "description": "Type of venue menu associated with a tip vote response.",
                                          "example": "Menu",
                                          "type": "string"
                                        },
                                        "url": {
                                          "description": "The URL for the menu of the venue associated with the specified tip.",
                                          "example": "https://foursquare.com/v/hotel-chantelle/4cbcafab035d236aebebe64e/menu",
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "name": {
                                      "description": "The name of a venue associated with a tip vote response.",
                                      "example": "Hotel Chantelle",
                                      "type": "string"
                                    },
                                    "photos": {
                                      "description": "An array of photos associated with the venue of the tip that was voted on. ",
                                      "properties": {
                                        "count": {
                                          "default": 0,
                                          "description": "Number of photos associated with a specific tip at a venue.",
                                          "example": 1,
                                          "type": "integer"
                                        },
                                        "description": "Response object containing photo data for the venue associated with the voted tip.",
                                        "groups": {
                                          "description": "Array of photos associated with a venue where a tip has been posted.",
                                          "items": {
                                            "description": "Venue photo items.",
                                            "properties": {
                                              "count": {
                                                "default": 0,
                                                "description": "Number of photos associated with the venue where the tip was posted.",
                                                "example": 1,
                                                "type": "integer"
                                              },
                                              "description": "Venue photo group for a specific tip.",
                                              "items": {
                                                "description": "Array of photo objects associated with the venue where the tip was posted.",
                                                "items": {
                                                  "description": "Response object for voting on a tip at a venue, containing an array of photos for the venue.",
                                                  "properties": {
                                                    "createdAt": {
                                                      "default": 0,
                                                      "description": "Timestamp indicating when the photo was created; UNIX timestamp in seconds since Epoch.",
                                                      "example": 1338749538,
                                                      "type": "integer"
                                                    },
                                                    "description": "Response object containing the retrieved tip information, including associated venue and photo groups.",
                                                    "height": {
                                                      "default": 0,
                                                      "description": "Height of photo associated with a tip vote response.",
                                                      "example": 540,
                                                      "type": "integer"
                                                    },
                                                    "id": {
                                                      "description": "The unique identifier for a photo associated with a venue from a voted tip response.",
                                                      "example": "4fcbb262e4b0a6e71560111f",
                                                      "type": "string"
                                                    },
                                                    "prefix": {
                                                      "description": "URL prefix.",
                                                      "example": "https://fastly.4sqi.net/img/general/",
                                                      "type": "string"
                                                    },
                                                    "suffix": {
                                                      "description": "URL suffix.",
                                                      "example": "/ZtWpQA7kPw9sNdszI-bKm2AQ3CNqR5RF0v02kMctp9w.jpg",
                                                      "type": "string"
                                                    },
                                                    "user": {
                                                      "description": "The user who uploaded the photo for the venue associated with the voted tip.",
                                                      "properties": {
                                                        "canonicalPath": {
                                                          "description": "Canonical path for user.",
                                                          "example": "/user/123456",
                                                          "type": "string"
                                                        },
                                                        "canonicalUrl": {
                                                          "description": "Canonical URL for user.",
                                                          "example": "https://foursquare.com/user/123456",
                                                          "type": "string"
                                                        },
                                                        "countryCode": {
                                                          "description": "The user's country code for a single tip vote on a venue's photo group item.",
                                                          "example": "US",
                                                          "type": "string"
                                                        },
                                                        "description": "Response object for voting on a tip, containing the user's profile photo URL.",
                                                        "firstName": {
                                                          "description": "The first name of the user who provided the tip.",
                                                          "example": "John",
                                                          "type": "string"
                                                        },
                                                        "gender": {
                                                          "description": "User gender associated with the tip vote response for a specific tip ID.",
                                                          "example": "male",
                                                          "type": "string"
                                                        },
                                                        "id": {
                                                          "description": "User ID for venue photos associated with a tip vote.",
                                                          "example": "123456",
                                                          "type": "string"
                                                        },
                                                        "isAnonymous": {
                                                          "default": true,
                                                          "description": "Boolean indicating if the user who uploaded the photo is anonymous.",
                                                          "example": false,
                                                          "type": "boolean"
                                                        },
                                                        "lastName": {
                                                          "description": "The user's last name.",
                                                          "example": "Smith",
                                                          "type": "string"
                                                        },
                                                        "photo": {
                                                          "description": "User's profile photo for a venue photo in a tip's vote response.",
                                                          "properties": {
                                                            "description": "An array of photo objects associated with the user who uploaded the photo.\" ",
                                                            "prefix": {
                                                              "description": "URL prefix.",
                                                              "example": "https://fastly.4sqi.net/img/user/",
                                                              "type": "string"
                                                            },
                                                            "suffix": {
                                                              "description": "URL suffix.",
                                                              "example": "/blank_boy.png",
                                                              "type": "string"
                                                            }
                                                          },
                                                          "type": "object"
                                                        }
                                                      },
                                                      "type": "object"
                                                    },
                                                    "visibility": {
                                                      "description": "Visibility property of photos belonging to a venue's tip.",
                                                      "example": "public",
                                                      "type": "string"
                                                    },
                                                    "width": {
                                                      "default": 0,
                                                      "description": "Width of the photo associated with a user's tip.",
                                                      "example": 540,
                                                      "type": "integer"
                                                    }
                                                  },
                                                  "type": "object"
                                                },
                                                "type": "array"
                                              },
                                              "name": {
                                                "description": "Name of the photo groups associated with a tip's venue.",
                                                "example": "Venue photos",
                                                "type": "string"
                                              },
                                              "type": {
                                                "description": "Photo type for the venue associated with the tip that was voted on.",
                                                "example": "venue",
                                                "type": "string"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "type": "array"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "popularityByGeo": {
                                      "default": 0,
                                      "description": "The popularity of a venue based on geographical location.",
                                      "example": 0.9887599976301914,
                                      "type": "number"
                                    },
                                    "price": {
                                      "description": "Price information for a specific tip associated with a venue. ",
                                      "properties": {
                                        "currency": {
                                          "description": "Returns the currency of the price for a tip associated with a venue.",
                                          "example": "$",
                                          "type": "string"
                                        },
                                        "description": "The response object for the venue price associated with the tip being voted on.",
                                        "message": {
                                          "description": "The associated venue's price message.",
                                          "example": "Expensive",
                                          "type": "string"
                                        },
                                        "tier": {
                                          "default": 0,
                                          "description": "Price tier of the venue where the tip was posted.",
                                          "example": 3,
                                          "type": "integer"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "rating": {
                                      "default": 0,
                                      "description": "Tip object containing the venue's updated rating.",
                                      "example": 7.3,
                                      "type": "number"
                                    },
                                    "ratingColor": {
                                      "description": "The color of the rating for a tip at a specific venue.",
                                      "example": "C5DE35",
                                      "type": "string"
                                    },
                                    "ratingSignals": {
                                      "default": 0,
                                      "description": "Number of rating signals for the venue associated with the tip.",
                                      "example": 1450,
                                      "type": "integer"
                                    },
                                    "reservations": {
                                      "description": "Reservation details.",
                                      "properties": {
                                        "description": "Information about the associated venue's reservations.",
                                        "id": {
                                          "description": "Unique identifier for the reservations associated with a tip vote response.",
                                          "example": "64384",
                                          "type": "string"
                                        },
                                        "provider": {
                                          "description": "Iformation about the venue's reservations provider for a specific tip's vote.",
                                          "example": "opentable",
                                          "type": "string"
                                        },
                                        "url": {
                                          "description": "Reservation URL.",
                                          "example": "http://www.opentable.com/single.aspx?rid=64384&ref=9601",
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "stats": {
                                      "description": "Object representing the statistics of a venue associated with a user's vote on a specific tip.",
                                      "properties": {
                                        "checkinsCount": {
                                          "default": 0,
                                          "description": "Count of check-ins for venue associated with voted tip.",
                                          "example": 36193,
                                          "type": "integer"
                                        },
                                        "description": "Statistics about the venue.",
                                        "tipCount": {
                                          "default": 0,
                                          "description": "Number of tips for a specific venue.",
                                          "example": 239,
                                          "type": "integer"
                                        },
                                        "usersCount": {
                                          "default": 0,
                                          "description": "Number of users who have voted on a specific tip at a venue.",
                                          "example": 21717,
                                          "type": "integer"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "url": {
                                      "description": "Venue URL.",
                                      "example": "http://hotelchantelle.com",
                                      "type": "string"
                                    },
                                    "urlSig": {
                                      "description": "URL signature for the venue where the tip is posted.",
                                      "example": "qRpsDTNyZKDZI3zdeDGPYnMXyXw=",
                                      "type": "string"
                                    },
                                    "venuePage": {
                                      "description": "Returns the venue's page associated with a voted tip.",
                                      "properties": {
                                        "description": "Object containing information about a venue page for a voted tip on a post with a successful response.",
                                        "id": {
                                          "description": "The ID of the venue page associated with the tip that was voted on.",
                                          "example": "72046848",
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "verified": {
                                      "default": true,
                                      "description": "Boolean indicating if the venue associated with the voted tip is verified.",
                                      "example": true,
                                      "type": "boolean"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object",
                      "description": "Object representing a successful upvote on a tip."
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/tips/add": {
      "post": {
        "deprecated": false,
        "description": "Allow a user to add a tip/review.",
        "operationId": "add-a-tip",
        "parameters": [
          {
            "description": "The API version date as documented [here](/reference/versioning); e.g. 20231010",
            "in": "query",
            "name": "v",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The venue where you want to add this tip.",
            "in": "query",
            "name": "venueId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The text of the tip, up to 200 characters.",
            "in": "query",
            "name": "text",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "text/plain": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"meta\": {\n    \"code\": 200,\n    \"requestId\": \"64138356813165221a961758\"\n  },\n  \"notifications\": [\n    {\n      \"type\": \"notificationTray\",\n      \"item\": {\n        \"unreadCount\": 0\n      }\n    }\n  ],\n  \"response\": {\n    \"tip\": {\n      \"id\": \"64138356a21d0758343e8135\",\n      \"createdAt\": 1679000406,\n      \"text\": \"Best coffee in town!\",\n      \"type\": \"user\",\n      \"canonicalUrl\": \"https://foursquare.com/item/64138356a21d0758343e8135\",\n      \"canonicalPath\": \"/item/64138356a21d0758343e8135\",\n      \"likes\": {\n        \"count\": 0,\n        \"groups\": []\n      },\n      \"viewCount\": 0,\n      \"agreeCount\": 0,\n      \"disagreeCount\": 0,\n      \"venue\": {\n        \"id\": \"56e845f7498e8880e6c39afa\",\n        \"name\": \"Starbucks\"\n        },\n      \"user\": {\n        \"id\": \"7294631\",\n        \"firstName\": \"Bat\",\n        \"lastName\": \"Macumba\",\n        \"gender\": \"male\",\n        \"countryCode\": \"US\",\n        \"relationship\": \"self\",\n        \"canonicalUrl\": \"https://foursquare.com/user/7294631\",\n        \"canonicalPath\": \"/user/7294631\",\n        \"photo\": {\n          \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n          \"suffix\": \"/blank_boy.png\",\n          \"default\": true\n        },\n        \"isAnonymous\": false\n      },\n      \"title\": \"Bat's tip\"\n    }\n  }\n}"
                  }
                },
                "schema": {
                  "description": "Response when adding a tip to a venue.",
                  "properties": {
                    "description": "Response object containing information about the success of adding a tip to a venue.",
                    "meta": {
                      "description": "Object containing additional information about the response.",
                      "properties": {
                        "code": {
                          "default": 0,
                          "description": "Status code indicating the result of adding a tip to the endpoint.",
                          "example": 200,
                          "type": "integer"
                        },
                        "description": "Metadata object containing additional information about the response for adding a tip with a 200 status code.",
                        "requestId": {
                          "description": "Unique identifier for the API request.",
                          "example": "64138356813165221a961758",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "notifications": {
                      "description": "Array of notification objects for successful creation of a new tip.",
                      "items": {
                        "description": "Array of notification objects containing information about the newly added tip.",
                        "properties": {
                          "description": "Notification objects containing information about the user's unread notifications.",
                          "item": {
                            "description": "Notification item for successfully adding a tip.",
                            "properties": {
                              "description": "Response object containing the retrieved tip data for a given notification item.",
                              "unreadCount": {
                                "default": 0,
                                "description": "Number of unread items in the notification.",
                                "example": 0,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": {
                            "description": "Type of notification for successful addition of a tip.",
                            "example": "notificationTray",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "response": {
                      "description": "The response object for successfully adding a tip. ",
                      "properties": {
                        "description": "Array of objects containing information about the added tips.",
                        "tip": {
                          "description": "The response object for adding a tip, including the newly created tip.",
                          "properties": {
                            "agreeCount": {
                              "default": 0,
                              "description": "Number of users who have agreed with this tip.",
                              "example": 0,
                              "type": "integer"
                            },
                            "canonicalPath": {
                              "description": "Canonical path for the response.",
                              "example": "/item/64138356a21d0758343e8135",
                              "type": "string"
                            },
                            "canonicalUrl": {
                              "description": "Canonical URL for the venue.",
                              "example": "https://foursquare.com/item/64138356a21d0758343e8135",
                              "type": "string"
                            },
                            "createdAt": {
                              "default": 0,
                              "description": "Timestamp indicating when the tip was created; UNIX timestamp in seconds since Epoch.",
                              "example": 1679000406,
                              "type": "integer"
                            },
                            "description": "Object containing the newly added tip for the specified user.",
                            "disagreeCount": {
                              "default": 0,
                              "description": "Number of users who disagreed with the tip on a venue.",
                              "example": 0,
                              "type": "integer"
                            },
                            "id": {
                              "description": "Unique identifier for newly added tip.",
                              "example": "64138356a21d0758343e8135",
                              "type": "string"
                            },
                            "likes": {
                              "description": "Number of likes for a tip added to a response after a successful POST request. ",
                              "properties": {
                                "count": {
                                  "default": 0,
                                  "description": "Total number of likes for a tip in a successful response to a POST request to add a tip.",
                                  "example": 0,
                                  "type": "integer"
                                },
                                "description": "Number of likes for a tip on adding a post.",
                                "groups": {
                                  "description": "Number of groups that have liked the tip.",
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            },
                            "text": {
                              "description": "Adds a new tip with text content to the response of the 200 (OK) status code.",
                              "example": "Best coffee in town!",
                              "type": "string"
                            },
                            "title": {
                              "description": "Title of the added tip for a successful response.",
                              "example": "Bat's tip",
                              "type": "string"
                            },
                            "type": {
                              "description": "Type of tip added.",
                              "example": "user",
                              "type": "string"
                            },
                            "user": {
                              "description": "User object containing information about the user who submitted the tip.",
                              "properties": {
                                "canonicalPath": {
                                  "description": "User's canonical path.",
                                  "example": "/user/7294631",
                                  "type": "string"
                                },
                                "canonicalUrl": {
                                  "description": "URL for the user's canonical profile.",
                                  "example": "https://foursquare.com/user/7294631",
                                  "type": "string"
                                },
                                "countryCode": {
                                  "description": "User's country code.",
                                  "example": "US",
                                  "type": "string"
                                },
                                "description": "Properties of the user who added the tip to a venue.",
                                "firstName": {
                                  "description": "User's first name for a newly added tip response.",
                                  "example": "Bat",
                                  "type": "string"
                                },
                                "gender": {
                                  "description": "The gender of the user who created a new tip.",
                                  "example": "male",
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Unique identifier for the user who created the tip associated with the successful 200 response.",
                                  "example": "7294631",
                                  "type": "string"
                                },
                                "isAnonymous": {
                                  "default": true,
                                  "description": "Indicates whether the user who posted the tip is anonymous.",
                                  "example": false,
                                  "type": "boolean"
                                },
                                "lastName": {
                                  "description": "Last name of the user who added the tip.",
                                  "example": "Macumba",
                                  "type": "string"
                                },
                                "photo": {
                                  "description": "User's profile photo associated with the tip added in the response.",
                                  "properties": {
                                    "default": {
                                      "default": true,
                                      "description": "Default profile photo for the user who posted the tip.",
                                      "example": true,
                                      "type": "boolean"
                                    },
                                    "description": "User's profile photo associated with a newly added tip.",
                                    "prefix": {
                                      "description": "Response object containing the prefix for the photo URL of the user who added a tip.",
                                      "example": "https://fastly.4sqi.net/img/user/",
                                      "type": "string"
                                    },
                                    "suffix": {
                                      "description": "Response properties for the photo suffix of the user who added a tip in a successful POST request.",
                                      "example": "/blank_boy.png",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "relationship": {
                                  "description": "Property of a user's relationship to a tip added via a post request with a 200 response.",
                                  "example": "self",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "venue": {
                              "description": "Response object containing the added tip and associated venue information.",
                              "properties": {
                                "description": "Tip properties for a venue.",
                                "id": {
                                  "description": "Unique identifier for the venue associated with the added tip in a successful response.",
                                  "example": "56e845f7498e8880e6c39afa",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name of the venue where the tip was added.",
                                  "example": "Starbucks",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "viewCount": {
                              "default": 0,
                              "description": "Number of views for the tip associated with the response to the successful POST request to add a tip.",
                              "example": 0,
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "200"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            },
            "description": "400"
          }
        },
        "security": [
          {
            "ManagedUserTokenAuth": []
          }
        ],
        "summary": "Add Tip",
        "tags": [
          "Tips"
        ]
      }
    },
    "/tips/{tip_id}": {
      "get": {
        "deprecated": false,
        "description": "Get details of the tip/review.",
        "operationId": "get-tip-details",
        "parameters": [
          {
            "description": "The ID of tip to retrieve",
            "in": "path",
            "name": "tip_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The API version date as documented [here](/reference/versioning); e.g. 20231010",
            "in": "query",
            "name": "v",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"meta\": {\n    \"code\": 200,\n    \"requestId\": \"59cea5346329fb6b767fab2a4f7\"\n  },\n  \"response\": {\n    \"tip\": {\n      \"id\": \"53bc46b7498e355aed38c696\",\n      \"createdAt\": 1404847799,\n      \"text\": \"Rooftop boozy brunch in Lower East Side. Can't drink all day unless you start in the morning!\",\n      \"type\": \"user\",\n      \"canonicalUrl\": \"https://foursquare.com/item/53bc46b7498e355aed38c696\",\n      \"lang\": \"en\",\n      \"saves\": {\n        \"count\": 1,\n        \"groups\": [],\n        \"summary\": \"1 Save\"\n      },\n      \"venue\": {\n        \"id\": \"4cbcafab035d236aebebe64e\",\n        \"name\": \"Hotel Chantelle\"\n      }\n    }\n  }\n}"
                  }
                },
                "schema": {
                  "description": "Information about a specific tip.",
                  "properties": {
                    "description": "Properties for the response when retrieving a specific tip identified by its tip ID.",
                    "meta": {
                      "description": "Response metadata for a successful request to retrieve a specific tip.",
                      "properties": {
                        "code": {
                          "default": 0,
                          "description": "Status code for the response meta data of the retrieved tip.",
                          "example": 200,
                          "type": "integer"
                        },
                        "description": "Metadata object containing additional information about the specific tip.",
                        "requestId": {
                          "description": "Unique identifier for the API request.",
                          "example": "59cea5346329fb6b767fab2a4f7",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "response": {
                      "description": "Tip response object for a specific tip ID.",
                      "properties": {
                        "description": "Detailed information about the response object for retrieving a specific tip.",
                        "tip": {
                          "description": "Response object containing the retrieved tip information.",
                          "properties": {
                            "canonicalUrl": {
                              "description": "Canonical URL for a specific tip.",
                              "example": "https://foursquare.com/item/53bc46b7498e355aed38c696",
                              "type": "string"
                            },
                            "createdAt": {
                              "default": 0,
                              "description": "Timestamp indicating when the tip was created; UNIX timestamp in seconds since Epoch.",
                              "example": 1404847799,
                              "type": "integer"
                            },
                            "description": "Tip object containing information about a specific tip.",
                            "id": {
                              "description": "Unique ID for the tip.",
                              "example": "53bc46b7498e355aed38c696",
                              "type": "string"
                            },
                            "lang": {
                              "description": "The language of a specific tip for a venue.",
                              "example": "en",
                              "type": "string"
                            },
                            "saves": {
                              "description": "Number of saves for a specific tip.",
                              "properties": {
                                "count": {
                                  "default": 0,
                                  "description": "Total number of users who have saved the tip.",
                                  "example": 1,
                                  "type": "integer"
                                },
                                "description": "Total number of users who have saved the tip.",
                                "groups": {
                                  "description": "Array of groups containing information about the saves for the specified tip.",
                                  "type": "array"
                                },
                                "summary": {
                                  "description": "The summary of the number of saves for a specific tip.",
                                  "example": "1 Save",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "text": {
                              "description": "The text of a specific tip.",
                              "example": "Rooftop boozy brunch in Lower East Side. Can't drink all day unless you start in the morning!",
                              "type": "string"
                            },
                            "type": {
                              "description": "Type of tip for a specific tip ID.",
                              "example": "user",
                              "type": "string"
                            },
                            "venue": {
                              "description": "Tip object containing information about the venue associated with the tip.",
                              "properties": {
                                "description": "Tip object containing venue information for the specified tip.",
                                "id": {
                                  "description": "Unique identifier for the venue associated with the retrieved tip.",
                                  "example": "4cbcafab035d236aebebe64e",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "The name of the venue associated with the specified tip ID.",
                                  "example": "Hotel Chantelle",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "200"
          },
          "400": {
            "content": {
              "text/plain": {
                "examples": {
                  "Result": {
                    "value": "For full list of API error codes:\nhttps://location.foursquare.com/developer/reference/errors-v2"
                  }
                }
              }
            },
            "description": "400"
          }
        },
        "security": [
          {
            "ManagedUserTokenAuth": []
          }
        ],
        "summary": "Get Tip Details",
        "tags": [
          "Tips"
        ]
      }
    },
    "/tips/{tip_id}/delete": {
      "post": {
        "deprecated": false,
        "description": "Delete a tip/review, if the acting user is the owner of the tip/review.",
        "operationId": "delete-a-tip",
        "parameters": [
          {
            "in": "path",
            "name": "tip_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The API version date as documented [here](/reference/versioning); e.g. 20231010",
            "in": "query",
            "name": "v",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"meta\": {\n    \"code\": 200,\n    \"requestId\": \"6414ad807d2e7971b67e2782\"\n  },\n  \"notifications\": [\n    {\n      \"type\": \"notificationTray\",\n      \"item\": {\n        \"unreadCount\": 0\n      }\n    }\n  ],\n  \"response\": {}\n}"
                  }
                },
                "schema": {
                  "description": "Successful deletion of a tip with ID 'tip_id'.",
                  "properties": {
                    "description": "Deletes a tip with the specified ID.",
                    "meta": {
                      "description": "Metadata object for the response of deleting a tip with the specified tip ID.",
                      "properties": {
                        "code": {
                          "default": 0,
                          "description": "Status code indicating the result of the API request.",
                          "example": 200,
                          "type": "integer"
                        },
                        "description": "Metadata object containing additional information about the successful deletion of a tip.",
                        "requestId": {
                          "description": "The unique identifier for the associated API request.",
                          "example": "6414ad807d2e7971b67e2782",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "notifications": {
                      "description": "Array of notification objects indicating the status of the tip deletion request.",
                      "items": {
                        "description": "Array of notification objects for the response to a successful deletion of a tip, with each notification containing information about the type and number of unread items.",
                        "properties": {
                          "description": "Notification object for the deleted tip.",
                          "item": {
                            "description": "Notification items for successfully deleting a tip with the given ID.",
                            "properties": {
                              "description": "Response object containing the updated notification information for a successfully deleted tip.",
                              "unreadCount": {
                                "default": 0,
                                "description": "Number of unread items in notification response for deleting a tip with given ID.",
                                "example": 0,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": {
                            "description": "The notification type for the deletion.",
                            "example": "notificationTray",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "response": {
                      "description": "Properties for the response after successfully deleting a tip by its unique identifier.",
                      "properties": {
                        "description": "Response object containing information about the successful deletion of a tip."
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "200"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "description": "Error response when attempting to delete a tip with invalid data.",
                  "properties": {
                    "description": "Deletes a tip with the given ID, returning a 400 error if unsuccessful."
                  },
                  "type": "object"
                }
              }
            },
            "description": "400"
          }
        },
        "security": [
          {
            "ManagedUserTokenAuth": []
          }
        ],
        "summary": "Delete Tip",
        "tags": [
          "Tips"
        ]
      }
    },
    "/tips/{tip_id}/flag": {
      "post": {
        "deprecated": false,
        "description": "Allows users to indicate a tip/review is probelmatic in some way.",
        "operationId": "indicate-problematic-tip",
        "parameters": [
          {
            "in": "path",
            "name": "tip_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The API version date as documented [here](/reference/versioning); e.g. 20231010",
            "in": "query",
            "name": "v",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "One of `spam`, `offensive`, `nolongerrelevant`, `negative`, `badtaste`.",
            "in": "query",
            "name": "problem",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"meta\": {\n    \"code\": 200,\n    \"requestId\": \"6585aea1634f0a74ffe56e38\"\n  },\n  \"notifications\": [\n    {\n      \"type\": \"notificationTray\",\n      \"item\": {\n        \"unreadCount\": 0\n      }\n    }\n  ],\n  \"response\": {\n    \"id\": \"4f0de7267bebfc146005dcc0\",\n    \"name\": \"Mattlantis 🐳\",\n    \"venueChains\": [],\n    \"attributes\": {\n      \"groups\": []\n    },\n    \"flags\": {\n      \"count\": 1,\n      \"items\": [\n        {\n          \"id\": \"6585aea129b1872b7ff5ed82\",\n          \"type\": \"tip\",\n          \"comments\": [],\n          \"reporters\": [\n            {\n              \"id\": \"1404954043\",\n              \"firstName\": \"\",\n              \"privateProfile\": false,\n              \"gender\": \"female\",\n              \"countryCode\": \"US\",\n              \"relationship\": \"self\",\n              \"photo\": {\n                \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n                \"suffix\": \"/blank_girl.png\",\n                \"default\": true\n              },\n              \"homeCity\": \"\"\n            }\n          ],\n          \"resolvedTime\": \"Fri Dec 22 15:43:29 UTC 2023\",\n          \"resolvedUsers\": [],\n          \"app\": {\n            \"id\": \"HWFY2JZIMBMY1KD0GOYCIVHZWP0UC2I0EL4LRY2J0HLRFRT4\",\n            \"name\": \"MDT Testing\",\n            \"detailUrl\": \"https://foursquare.com/app/mdt-testing/HWFY2JZIMBMY1KD0GOYCIVHZWP0UC2I0EL4LRY2J0HLRFRT4\"\n          },\n          \"canonicalPath\": \"/edit/tips?id=6585aea129b1872b7ff5ed82&mode=all\",\n          \"dateTime\": \"December 22, 2023\",\n          \"reason\": \"spam_tip\",\n          \"value\": {\n            \"id\": \"6515f99d8f151130670423d4\",\n            \"createdAt\": 1695938973,\n            \"text\": \"here is puppy number 2\",\n            \"type\": \"user\",\n            \"canonicalUrl\": \"https://foursquare.com/item/6515f99d8f151130670423d4\",\n            \"photo\": {\n              \"id\": \"6515f99e2425d010750f76fd\",\n              \"createdAt\": 1695938974,\n              \"prefix\": \"https://fastly.4sqi.net/img/general/\",\n              \"suffix\": \"/7294631_VJqOKo4P9-W0VyQk0iOZZzqG178RAL1rswe4KpZ2YGg.png\",\n              \"width\": 480,\n              \"height\": 650,\n              \"visibility\": \"public\"\n            },\n            \"photourl\": \"https://fastly.4sqi.net/img/general/original/7294631_VJqOKo4P9-W0VyQk0iOZZzqG178RAL1rswe4KpZ2YGg.png\",\n            \"logView\": true,\n            \"agreeCount\": 0,\n            \"disagreeCount\": 0,\n            \"todo\": {\n              \"count\": 0\n            },\n            \"user\": {\n              \"id\": \"1234567\",\n              \"firstName\": \"Bat\",\n              \"lastName\": \"Macumba\",\n              \"handle\": \"batm1234567\",\n              \"privateProfile\": false,\n              \"gender\": \"male\",\n              \"countryCode\": \"US\",\n              \"followingRelationship\": \"none\",\n              \"photo\": {\n                \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n                \"suffix\": \"/blank_boy.png\",\n                \"default\": true\n              }\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
                  }
                },
                "schema": {
                  "description": "Flag a tip as inappropriate via a successful POST request.",
                  "properties": {
                    "description": "Successful flagging of a specific tip.",
                    "meta": {
                      "description": "Metadata object containing additional information about the response.",
                      "properties": {
                        "code": {
                          "default": 0,
                          "description": "Response code for flagging a tip with the specified ID.",
                          "example": 200,
                          "type": "integer"
                        },
                        "description": "Response metadata for flagging a tip with a 200 status code.",
                        "requestId": {
                          "description": "The unique identifier for the API request.",
                          "example": "6585aea1634f0a74ffe56e38",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "notifications": {
                      "description": "Array of notification objects containing information about the flagging response for a specific tip.",
                      "items": {
                        "description": "Array of notification objects for flagging a tip.",
                        "properties": {
                          "description": "Array of notification objects for a successful flag post response for a specific tip, with each item containing information such as type and unread count.",
                          "item": {
                            "description": "Array of notification objects containing the number of unread items in the flagged tip response.",
                            "properties": {
                              "description": "A list of notifications about flagged tips for a specific tip, including the number of unread items.",
                              "unreadCount": {
                                "default": 0,
                                "description": "Number of unread items in the notification associated with the flagged tip.",
                                "example": 0,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": {
                            "description": "The type of notification for a flagged tip, with a successful API response.",
                            "example": "notificationTray",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "response": {
                      "description": " Response object for flagging a tip with a 200 status code.",
                      "properties": {
                        "attributes": {
                          "description": "Response object containing the attributes of a flagged tip post.",
                          "properties": {
                            "description": "Response object containing the attributes for a flagged tip.",
                            "groups": {
                              "description": "Array of objects containing properties for the groups associated with the response attributes for a successful flag post to a specific tip.",
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "description": "Response object containing the result of flagging a specific tip on a venue.\" ",
                        "flags": {
                          "description": "The response object containing the flags associated with a flagged tip.",
                          "properties": {
                            "count": {
                              "default": 0,
                              "description": "Number of flags for a specific tip.",
                              "example": 1,
                              "type": "integer"
                            },
                            "description": "Response object containing an array of flag objects for the specified tip.",
                            "items": {
                              "description": "Array of flags associated with a specific tip.",
                              "items": {
                                "description": "Array of flags associated with the response from a successful flagging of a specific user tip.",
                                "properties": {
                                  "app": {
                                    "description": "Flags associated with the tip that has been flagged for review.",
                                    "properties": {
                                      "description": "Information about the flags associated with a tip.",
                                      "detailUrl": {
                                        "description": "Detail URL.",
                                        "example": "https://foursquare.com/app/mdt-testing/HWFY2JZIMBMY1KD0GOYCIVHZWP0UC2I0EL4LRY2J0HLRFRT4",
                                        "type": "string"
                                      },
                                      "id": {
                                        "description": "Unique identifier.",
                                        "example": "HWFY2JZIMBMY1KD0GOYCIVHZWP0UC2I0EL4LRY2J0HLRFRT4",
                                        "type": "string"
                                      },
                                      "name": {
                                        "description": "[\n    \"Lists the names of apps that have flagged a specific tip.\"\n]",
                                        "example": "MDT Testing",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "canonicalPath": {
                                    "description": "The canonical path.",
                                    "example": "/edit/tips?id=6585aea129b1872b7ff5ed82&mode=all",
                                    "type": "string"
                                  },
                                  "comments": {
                                    "description": "Array of comments on tips flagged by the user.",
                                    "type": "array"
                                  },
                                  "dateTime": {
                                    "description": "The date and time when a user flags a tip.",
                                    "example": "December 22, 2023",
                                    "type": "string"
                                  },
                                  "description": "Nested array of flag items for a specific tip.",
                                  "id": {
                                    "description": "IDs for the flagged items in a tip response.",
                                    "example": "6585aea129b1872b7ff5ed82",
                                    "type": "string"
                                  },
                                  "reason": {
                                    "description": "The reason for flagging a tip.",
                                    "example": "spam_tip",
                                    "type": "string"
                                  },
                                  "reporters": {
                                    "description": "Array of objects containing information about the users who reported the flagged tip.",
                                    "items": {
                                      "description": "List of users who have flagged a tip.",
                                      "properties": {
                                        "countryCode": {
                                          "description": "A list of reporters who have flagged a tip, along with their respective country codes.",
                                          "example": "US",
                                          "type": "string"
                                        },
                                        "description": "Array of objects containing information about the users who reported the flagged tip.",
                                        "firstName": {
                                          "description": "Flags for tips flagged by reporters with first names.",
                                          "example": "",
                                          "type": "string"
                                        },
                                        "gender": {
                                          "description": "User gender.",
                                          "example": "female",
                                          "type": "string"
                                        },
                                        "homeCity": {
                                          "description": "User home city.",
                                          "example": "",
                                          "type": "string"
                                        },
                                        "id": {
                                          "description": "User ID that reported the flagged tip for a given tip ID.",
                                          "example": "1404954043",
                                          "type": "string"
                                        },
                                        "photo": {
                                          "description": "Array of user objects who have reported the photo associated with the tip being flagged.",
                                          "properties": {
                                            "default": {
                                              "default": true,
                                              "description": "List of users who have reported a photo as inappropriate for a specific tip.",
                                              "example": true,
                                              "type": "boolean"
                                            },
                                            "description": "User photo and additional information.",
                                            "prefix": {
                                              "description": "Photo URL prefix.",
                                              "example": "https://fastly.4sqi.net/img/user/",
                                              "type": "string"
                                            },
                                            "suffix": {
                                              "description": "URL suffix for the user image.",
                                              "example": "/blank_girl.png",
                                              "type": "string"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "privateProfile": {
                                          "default": true,
                                          "description": "Array of users who have flagged the specified tip as inappropriate.",
                                          "example": false,
                                          "type": "boolean"
                                        },
                                        "relationship": {
                                          "description": "User relationship to the tip reporter.",
                                          "example": "self",
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "resolvedTime": {
                                    "description": "The time at which the report was resolved.",
                                    "example": "Fri Dec 22 15:43:29 UTC 2023",
                                    "type": "string"
                                  },
                                  "resolvedUsers": {
                                    "description": "Array of resolved users who flagged the specified tip.",
                                    "type": "array"
                                  },
                                  "type": {
                                    "description": "Possible flags associated with flagging a user's tip on a particular post.",
                                    "example": "tip",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "Flagged tip response with associated flags and their values.",
                                    "properties": {
                                      "agreeCount": {
                                        "default": 0,
                                        "description": "Number of users who agree with the flagged tip.",
                                        "example": 0,
                                        "type": "integer"
                                      },
                                      "canonicalUrl": {
                                        "description": "Canonical URL for the tip.",
                                        "example": "https://foursquare.com/item/6515f99d8f151130670423d4",
                                        "type": "string"
                                      },
                                      "createdAt": {
                                        "default": 0,
                                        "description": "The creation date of a flagged tip; UNIX timestamp in seconds since Epoch.",
                                        "example": 1695938973,
                                        "type": "integer"
                                      },
                                      "description": "Array of strings containing the values of flags for the specified tip.",
                                      "disagreeCount": {
                                        "default": 0,
                                        "description": "Number of disagree flags for a specific tip.",
                                        "example": 0,
                                        "type": "integer"
                                      },
                                      "id": {
                                        "description": "A list of flags for a specific tip, with each flag's ID included.",
                                        "example": "6515f99d8f151130670423d4",
                                        "type": "string"
                                      },
                                      "logView": {
                                        "default": true,
                                        "description": "Boolean response indicating if the user has flagged the tip as a log view.",
                                        "example": true,
                                        "type": "boolean"
                                      },
                                      "photo": {
                                        "description": "An array of values indicating flags for a photo associated with a response to a tip.",
                                        "properties": {
                                          "createdAt": {
                                            "default": 0,
                                            "description": "The creation date for photos that have been flagged at the specific tip; UNIX timestamp in seconds since Epoch.",
                                            "example": 1695938974,
                                            "type": "integer"
                                          },
                                          "description": "Array of flags for the photo associated with the specified tip.",
                                          "height": {
                                            "default": 0,
                                            "description": "Flagged photo height corresponding to a specific tip.",
                                            "example": 650,
                                            "type": "integer"
                                          },
                                          "id": {
                                            "description": "A unique ID for the phot flagged in the tip.",
                                            "example": "6515f99e2425d010750f76fd",
                                            "type": "string"
                                          },
                                          "prefix": {
                                            "description": "Prefix for the flagged photos associated with a particular tip.",
                                            "example": "https://fastly.4sqi.net/img/general/",
                                            "type": "string"
                                          },
                                          "suffix": {
                                            "description": "Suffix for flagged photo.",
                                            "example": "/7294631_VJqOKo4P9-W0VyQk0iOZZzqG178RAL1rswe4KpZ2YGg.png",
                                            "type": "string"
                                          },
                                          "visibility": {
                                            "description": "Valetisibility of the photos in the flags items of the tip flag response for the specified tip id.",
                                            "example": "public",
                                            "type": "string"
                                          },
                                          "width": {
                                            "default": 0,
                                            "description": "The width of a photo associated with a flag on a tip.",
                                            "example": 480,
                                            "type": "integer"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "photourl": {
                                        "description": "A photo URL for flagged items in response to flagging a tip.",
                                        "example": "https://fastly.4sqi.net/img/general/original/7294631_VJqOKo4P9-W0VyQk0iOZZzqG178RAL1rswe4KpZ2YGg.png",
                                        "type": "string"
                                      },
                                      "text": {
                                        "description": "Text value of the flag item associated with the specified tip ID.",
                                        "example": "here is puppy number 2",
                                        "type": "string"
                                      },
                                      "todo": {
                                        "description": "Response object containing an array of flagged items with their corresponding to-do values for the specified tip.",
                                        "properties": {
                                          "count": {
                                            "default": 0,
                                            "description": "Number of to-do items for flagged tips at the specified ID.",
                                            "example": 0,
                                            "type": "integer"
                                          },
                                          "description": "Array of flagged items with associated to-do list for a specific tip."
                                        },
                                        "type": "object"
                                      },
                                      "type": {
                                        "description": "The type of flags associated with items in a response for flagging a tip, given a specific tip ID.",
                                        "example": "user",
                                        "type": "string"
                                      },
                                      "user": {
                                        "description": "An array of objects representing the users who flagged the tip, with their flag value as the response.",
                                        "properties": {
                                          "countryCode": {
                                            "description": "Response object containing an array of user's country codes for flags on a specific tip.",
                                            "example": "US",
                                            "type": "string"
                                          },
                                          "description": "Array of user objects containing information about the users who have flagged the specific tip.",
                                          "firstName": {
                                            "description": "The first name of the user who flagged the tip with the specified tip ID.",
                                            "example": "Bat",
                                            "type": "string"
                                          },
                                          "followingRelationship": {
                                            "description": "User following relationships.",
                                            "example": "none",
                                            "type": "string"
                                          },
                                          "gender": {
                                            "description": "The gender of the user who flagged the tip identified by the provided tip ID.",
                                            "example": "male",
                                            "type": "string"
                                          },
                                          "handle": {
                                            "description": "The handle for the user that flagged the tip.",
                                            "example": "batm1234567",
                                            "type": "string"
                                          },
                                          "id": {
                                            "description": "The IDs for the user that flagged the tip.",
                                            "example": "1234567",
                                            "type": "string"
                                          },
                                          "lastName": {
                                            "description": "The last name of the user who flagged an item in response to a tip.",
                                            "example": "Macumba",
                                            "type": "string"
                                          },
                                          "photo": {
                                            "description": "The user's profile photo.",
                                            "properties": {
                                              "default": {
                                                "default": true,
                                                "description": "Boolean indicating whether the user's default profile photo was used for the flagged tip.",
                                                "example": true,
                                                "type": "boolean"
                                              },
                                              "description": "Object containing information about users who have flagged a specific tip on a venue.",
                                              "prefix": {
                                                "description": "Photo URL prefix.",
                                                "example": "https://fastly.4sqi.net/img/user/",
                                                "type": "string"
                                              },
                                              "suffix": {
                                                "description": "Photo URL suffix.",
                                                "example": "/blank_boy.png",
                                                "type": "string"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "privateProfile": {
                                            "default": true,
                                            "description": "Boolean indicating if the user has a private profile.",
                                            "example": false,
                                            "type": "boolean"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "description": "Unique identifier for the flagged tip.",
                          "example": "4f0de7267bebfc146005dcc0",
                          "type": "string"
                        },
                        "name": {
                          "description": "Retrieve the name of the flagged tip with a successful response.",
                          "example": "Mattlantis 🐳",
                          "type": "string"
                        },
                        "venueChains": {
                          "description": "Venue chains associated with flagging a tip.",
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "200"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "description": "Error response for flagging a tip with a status code of 400 (Bad Request).",
                  "properties": {
                    "description": "Returns a 400 Bad Request response with properties for flagging a tip."
                  },
                  "type": "object"
                }
              }
            },
            "description": "400"
          }
        },
        "security": [
          {
            "ManagedUserTokenAuth": []
          }
        ],
        "summary": "Flag Tip",
        "tags": [
          "Tips"
        ]
      }
    },
    "/usermanagement/createuser": {
      "post": {
        "deprecated": false,
        "description": " Create a managed Foursquare user for your application.  This endpoint should be called any time your application registers a new user.\n\n**NOTE**: This endpoint requires a **Foursquare Service API Key** to authenticate. Learn how to create a [Service API Key](personalization-apis-authentication). ",
        "operationId": "create-a-managed-user",
        "parameters": [
          {
            "description": "The API version date as documented [here](/reference/versioning); e.g. 20231010",
            "in": "query",
            "name": "v",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"meta\":\n    {\n      \"code\":200,          \n      \"requestId\":\"1234567890\"\n    },\n    \"notifications\":[\n        {\n            \"type\": \"notificationTray\",\n            \"item\":{\n                \"unreadCount\":0\n            }\n        }\n    ],\n    \"response\":{\n        \"userId\":\"123456\",\n        \"access_token\":\"987654\"\n    }\n}"
                  }
                },
                "schema": {
                  "description": "Success response indicating that the user was successfully created.",
                  "properties": {
                    "description": "Response object containing the newly created user's information.",
                    "meta": {
                      "description": "Object containing additional information about the response for successfully creating a new user.",
                      "properties": {
                        "code": {
                          "default": 0,
                          "description": "Status code indicating the result of the API request.",
                          "example": 200,
                          "type": "integer"
                        },
                        "description": "Metadata object containing information about the response of a successful user creation request.",
                        "requestId": {
                          "description": "Unique identifier for the API request.",
                          "example": "1234567890",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "notifications": {
                      "description": "Array of notification objects for a successful request to create a user.",
                      "items": {
                        "description": "Array of notification objects related to the created user.",
                        "properties": {
                          "description": "Notification tray containing unread notifications for the user.",
                          "item": {
                            "description": "Unique identifier for the notification item associated with the created user.",
                            "properties": {
                              "description": "Array of notification objects for a successful user creation request.",
                              "unreadCount": {
                                "default": 0,
                                "description": "Number of unread items in notification for newly created user.",
                                "example": 0,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": {
                            "description": "Type of notification for successful user creation.",
                            "example": "notificationTray",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "response": {
                      "description": "Response object containing the result of the successful creation of a new user.",
                      "properties": {
                        "access_token": {
                          "description": "Response object containing the newly created user's access token.\" ",
                          "example": "987654",
                          "type": "string"
                        },
                        "description": "Response object containing information about the newly created user.",
                        "userId": {
                          "description": "Unique identifier for the newly created user.",
                          "example": "123456",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "200"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "description": "Incorrect request body.",
                  "properties": {
                    "description": "Invalid request body for creating a new user."
                  },
                  "type": "object"
                }
              }
            },
            "description": "400"
          }
        },
        "security": [
          {
            "ServiceKeyBearerTokenAuth": []
          }
        ],
        "summary": "Create Managed User",
        "tags": [
          "User Management"
        ]
      }
    },
    "/usermanagement/deleteuser": {
      "post": {
        "deprecated": false,
        "description": "Delete a manager user's record from the Foursquare database in response to an end user's request to delete their personal data.\n\nOnce you've called the Delete Managed User endpoint, please use the [Check Privacy Request Status Endpoint](https://location.foursquare.com/developer/reference/check-privacy-request-status) to find the status (pending/completed/expired) of your managed user deletion request.\n\nIf you are looking to delete a Movement SDK user rather than a managed user for your application, please use the [SDK Request User Deletion Endpoint](https://location.foursquare.com/developer/reference/delete-a-managed-user) instead.",
        "operationId": "delete-a-managed-user",
        "parameters": [
          {
            "description": "The API version date as documented [here](/reference/versioning); e.g. 20231010",
            "in": "query",
            "name": "v",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of the managed user to delete.",
            "in": "query",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"deleteRequestId\": \"987654321\"\n}\n"
                  }
                },
                "schema": {
                  "description": "Successful user deletion.",
                  "properties": {
                    "deleteRequestId": {
                      "description": "Unique identifier for the delete request in the response to a successful user deletion.",
                      "example": "987654321",
                      "type": "string"
                    },
                    "description": "Deletes a user and returns a success response with a status code of 200."
                  },
                  "type": "object"
                }
              }
            },
            "description": "200"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "description": "The response object for a failed request to delete a user, with a status code of 400 indicating a bad request.",
                  "properties": {
                    "description": "400 Bad Request response properties for the '/usermanagement/deleteuser.post' endpoint."
                  },
                  "type": "object"
                }
              }
            },
            "description": "400"
          }
        },
        "security": [
          {
            "ServiceKeyBearerTokenAuth": []
          }
        ],
        "summary": "Delete Managed User",
        "tags": [
          "User Management"
        ]
      }
    },
    "/usermanagement/exportuser": {
      "post": {
        "deprecated": false,
        "description": "Request all of the data stored in Foursquare's database associated with a managed user in response to an end user's request to access their personal data.\n\nOnce you've called the Delete Managed User endpoint, please use the [Check Privacy Request Status Endpoint](https://location.foursquare.com/developer/reference/check-privacy-request-status) to find the status (pending/completed/expired) of your managed user deletion request.\n\n**NOTE**: This endpoint requires a Foursquare Service API Key to authenticate. [Learn how to create a Service API Key](request-data-retrieval).",
        "operationId": "request-data-retrieval",
        "parameters": [
          {
            "description": "The API version date as documented [here](/reference/versioning); e.g. 20231010",
            "in": "query",
            "name": "v",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of the managed user to request data retrieval for.",
            "in": "query",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"exportRequestId\": \"987654321\"\n}\n"
                  }
                },
                "schema": {
                  "description": "The response when exporting a user from the user management system.",
                  "properties": {
                    "description": "Properties for the response when exporting a user's data in the given format.",
                    "exportRequestId": {
                      "description": "Unique identifier for the user export request.",
                      "example": "987654321",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "200"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "description": "Failed to export user due to invalid request. ",
                  "properties": {
                    "description": "Response object containing metadata and notification information for a failed user export request."
                  },
                  "type": "object"
                }
              }
            },
            "description": "400"
          }
        },
        "security": [
          {
            "ServiceKeyBearerTokenAuth": []
          }
        ],
        "summary": "Request Managed User Data",
        "tags": [
          "User Management"
        ]
      }
    },
    "/usermanagement/privacyrequeststatus": {
      "get": {
        "deprecated": false,
        "description": "Check the status of either a [Managed User Delete](https://location.foursquare.com/developer/reference/delete-a-managed-user) request or a [Managed User Data Retrieval](https://location.foursquare.com/developer/reference/request-data-retrieval) request.\n\nThis endpoint returns the following possible values based on the status of your request; pending, completed, and expired.\n\n- **Pending** - Your request has been received and is currently pending.\n- **Completed** - Your request has been completed.  If you requested the retrieval of a managed user's data, a link to the file in s3 is included. The file link is valid up to 7 days after its generation.\n- **Expired** - Your request has been completed, but the corresponding s3 file containing the managed user's data expired post 7-day availability ; for the Managed User Data Retrieval endpoint only.\n\n**NOTE**: This endpoint requires a Foursquare Service API Key to authenticate. [Learn how to create a Service API Key](check-privacy-request-status).\n> 📄\n>\n> Foursquare will respond to requests within 30-days of receipt or otherwise in accordance with law.",
        "operationId": "check-privacy-request-status",
        "parameters": [
          {
            "description": "The API version date as documented [here](/reference/versioning); e.g. 20231010",
            "in": "query",
            "name": "v",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID returned in the response of either your previous [user data retrieval](/reference/request-data-retrieval) or [delete user](/reference/delete-a-managed-user) request.",
            "in": "query",
            "name": "requestId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Complete Data Retrieval Request": {
                    "value": "{\n  \"requestType\": \"data_retrieval\",\n  \"status\": \"completed\",\n  \"downloadUrl\": \"<some s3 presigned url>\"\n}\n"
                  },
                  "Complete Delete Request": {
                    "value": "{\n  \"requestType\": \"delete\",\n  \"status\": \"completed\"\n}\n"
                  },
                  "Expired Data Retrieval Request": {
                    "value": "{\n  \"requestType\": \"data_retrieval\",\n  \"status\": \"expired\"\n}\n"
                  },
                  "Pending Data Retrieval Request": {
                    "value": "{\n  \"requestType\": \"data_retrieval\",\n  \"status\": \"pending\"\n}\n"
                  },
                  "Pending Delete Request": {
                    "value": "{\n  \"requestType\": \"delete\",\n  \"status\": \"pending\"\n}\n"
                  }
                },
                "schema": {
                  "description": "Status and information regarding the request for a user's privacy status.",
                  "oneOf": [
                    {
                      "description": "A response object containing data related to a user's privacy request status.",
                      "properties": {
                        "description": "Response object containing the status of a privacy request for a user.",
                        "requestType": {
                          "description": "Response type for retrieving the status of a privacy request.",
                          "example": "delete",
                          "type": "string"
                        },
                        "status": {
                          "description": "Response status for a privacy request status endpoint for a user management API. ",
                          "example": "completed",
                          "type": "string"
                        }
                      },
                      "title": "Complete Delete Request",
                      "type": "object"
                    },
                    {
                      "description": "Privacy request status for a user with a successful response code.",
                      "properties": {
                        "description": "Response object containing the user's privacy request status.",
                        "downloadUrl": {
                          "description": "The download URL for a user's privacy request status.",
                          "example": "<some s3 presigned url>",
                          "type": "string"
                        },
                        "requestType": {
                          "description": "Response for retrieving privacy request status for a specific request type.",
                          "example": "data_retrieval",
                          "type": "string"
                        },
                        "status": {
                          "description": "The response status of a privacy request for user management.",
                          "example": "completed",
                          "type": "string"
                        }
                      },
                      "title": "Complete Data Retrieval Request",
                      "type": "object"
                    },
                    {
                      "description": "Response for retrieving the status of a privacy request for a user, with a successful status code and multiple possible response formats.",
                      "properties": {
                        "description": "Response object containing the retrieved data for a user's privacy request status.",
                        "requestType": {
                          "description": "Response object containing the status of a privacy request for a specific type of request.",
                          "example": "data_retrieval",
                          "type": "string"
                        },
                        "status": {
                          "description": "Status of privacy request for user management.",
                          "example": "pending",
                          "type": "string"
                        }
                      },
                      "title": "Pending Data Retrieval Request",
                      "type": "object"
                    },
                    {
                      "description": "Response object for retrieving the privacy request status for a user, with a success status code.",
                      "properties": {
                        "description": "Response object containing the status of a privacy request for a user.",
                        "requestType": {
                          "description": "The status of a privacy request for a specific type.",
                          "example": "delete",
                          "type": "string"
                        },
                        "status": {
                          "description": "Status of the privacy request for the given user.",
                          "example": "pending",
                          "type": "string"
                        }
                      },
                      "title": "Pending Delete Request",
                      "type": "object"
                    },
                    {
                      "description": "Information about the status of a privacy request.",
                      "properties": {
                        "description": "Response object containing information about the status of a privacy request.",
                        "requestType": {
                          "description": "Response object containing the status of a privacy request for a specific type of request.",
                          "example": "data_retrieval",
                          "type": "string"
                        },
                        "status": {
                          "description": "The status of a successful request for privacy information for a user.",
                          "example": "expired",
                          "type": "string"
                        }
                      },
                      "title": "Expired Data Retrieval Request",
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "200"
          }
        },
        "security": [
          {
            "ServiceKeyBearerTokenAuth": []
          }
        ],
        "summary": "Check User Data Request Status",
        "tags": [
          "User Management"
        ]
      }
    },
    "/usermanagement/refreshtoken": {
      "post": {
        "deprecated": false,
        "description": "Refresh a Foursquare managed user's oauth token.",
        "operationId": "refresh-managed-user-token",
        "parameters": [
          {
            "description": "The API version date as documented [here](/reference/versioning); e.g. 20231010",
            "in": "query",
            "name": "v",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of the managed user to refresh a token for.",
            "in": "query",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"meta\": {},\n  \"response\": {\n    \"oauth_token\": \"987654321\"\n  }\n}"
                  }
                },
                "schema": {
                  "description": "Response object containing information about the successful refresh of a user's access token.",
                  "properties": {
                    "description": "Successful refresh of authentication token.",
                    "meta": {
                      "description": "Metadata object containing additional information about the successful refresh token response.",
                      "properties": {
                        "description": "Metadata object for the 200 response of the refresh token endpoint in the User Management API."
                      },
                      "type": "object"
                    },
                    "response": {
                      "description": "Object containing the retrieved data for a successful refresh token request.",
                      "properties": {
                        "description": "Object containing information about the response when requesting a refresh token.",
                        "oauth_token": {
                          "description": "The response contains the OAuth token for refreshing user management data.",
                          "example": "987654321",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "200"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "description": "400 error response when requesting a refresh token from the user management API.",
                  "properties": {
                    "description": "Invalid token provided for the refresh request."
                  },
                  "type": "object"
                }
              }
            },
            "description": "400"
          }
        },
        "security": [
          {
            "ServiceKeyBearerTokenAuth": []
          }
        ],
        "summary": "Refresh Managed User Token",
        "tags": [
          "User Management"
        ]
      }
    },
    "/users/self": {
      "get": {
        "deprecated": false,
        "description": "Return profile information for the user whose `oauth_token` is provided.",
        "operationId": "get-user-details",
        "parameters": [
          {
            "description": "The API version date as documented [here](/reference/versioning); e.g. 20240109",
            "in": "query",
            "name": "v",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"meta\": {\n    \"code\": 200,\n    \"requestId\": \"652465929317ed6e8eb7be9b\"\n  },\n  \"notifications\": [\n    {\n      \"type\": \"notificationTray\",\n      \"item\": {\n        \"unreadCount\": 0\n      }\n    },\n    {\n      \"type\": \"unconfirmed\",\n      \"item\": {\n        \"unreadCount\": 0\n      }\n    }\n  ],\n  \"response\": {\n    \"user\": {\n      \"id\": \"123456\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Smith\",\n      \"handle\": \"johnsmith\",\n      \"privateProfile\": false,\n      \"gender\": \"male\",\n      \"address\": \"\",\n      \"city\": \"\",\n      \"state\": \"\",\n      \"countryCode\": \"US\",\n      \"relationship\": \"self\",\n      \"photo\": {\n        \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n        \"suffix\": \"/blank_boy.png\",\n        \"default\": true\n      },\n      \"friends\": {\n        \"count\": 5,\n        \"groups\": [\n          {\n            \"type\": \"friends\",\n            \"name\": \"Mutual friends\",\n            \"count\": 0,\n            \"items\": []\n          },\n          {\n            \"type\": \"others\",\n            \"name\": \"Other friends\",\n            \"count\": 5,\n            \"items\": [\n              {\n                \"id\": \"12345\",\n                \"firstName\": \"John\",\n                \"lastName\": \"Smith\",\n                \"handle\": \"John Smith\",\n                \"privateProfile\": false,\n                \"gender\": \"male\",\n                \"address\": \"\",\n                \"city\": \"\",\n                \"state\": \"\",\n                \"countryCode\": \"US\",\n                \"followingRelationship\": \"followingThem\",\n                \"photo\": {\n                  \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n                  \"suffix\": \"/blank_boy.png\"\n                },\n                \"isAnonymous\": false,\n                \"tips\": {\n                  \"count\": 4525\n                },\n                \"lists\": {\n                  \"groups\": [\n                    {\n                      \"type\": \"created\",\n                      \"count\": 118,\n                      \"items\": []\n                    }\n                  ]\n                },\n                \"homeCity\": \"\",\n                \"bio\": \"\",\n                \"contact\": {\n                  \"twitter\": \"\",\n                  \"facebook\": \"\"\n                },\n                \"superuser\": 8\n              },\n              {\n                \"id\": \"12345\",\n                \"firstName\": \"John\",\n                \"lastName\": \"Smith\",\n                \"handle\": \"John Smith\",\n                \"privateProfile\": false,\n                \"gender\": \"male\",\n                \"address\": \"\",\n                \"city\": \"\",\n                \"state\": \"\",\n                \"countryCode\": \"US\",\n                \"followingRelationship\": \"followingThem\",\n                \"photo\": {\n                  \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n                  \"suffix\": \"/blank_boy.png\"\n                },\n                \"isAnonymous\": false,\n                \"tips\": {\n                  \"count\": 3\n                },\n                \"lists\": {\n                  \"groups\": [\n                    {\n                      \"type\": \"created\",\n                      \"count\": 3,\n                      \"items\": []\n                    }\n                  ]\n                },\n                \"homeCity\": \"New York \",\n                \"bio\": \"\",\n                \"contact\": {\n                  \"twitter\": \"\",\n                  \"facebook\": \"\"\n                }\n              },\n              {\n                \"id\": \"12345\",\n                \"firstName\": \"John\",\n                \"lastName\": \"Smith\",\n                \"handle\": \"John Smith\",\n                \"privateProfile\": false,\n                \"gender\": \"male\",\n                \"address\": \"\",\n                \"city\": \"\",\n                \"state\": \"\",\n                \"countryCode\": \"US\",\n                \"followingRelationship\": \"followingThem\",\n                \"photo\": {\n                  \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n                  \"suffix\": \"/blank_boy.png\"\n                },\n                \"isAnonymous\": false,\n                \"tips\": {\n                  \"count\": 0\n                },\n                \"lists\": {\n                  \"groups\": [\n                    {\n                      \"type\": \"created\",\n                      \"count\": 4,\n                      \"items\": []\n                    }\n                  ]\n                },\n                \"homeCity\": \"\",\n                \"bio\": \"\",\n                \"contact\": {\n                  \"twitter\": \"\",\n                  \"facebook\": \"\"\n                }\n              },\n              {\n                \"id\": \"12345\",\n                \"firstName\": \"John\",\n                \"lastName\": \"Smith\",\n                \"handle\": \"John Smith\",\n                \"privateProfile\": false,\n                \"gender\": \"male\",\n                \"address\": \"\",\n                \"city\": \"\",\n                \"state\": \"\",\n                \"countryCode\": \"US\",\n                \"followingRelationship\": \"followingThem\",\n                \"photo\": {\n                  \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n                  \"suffix\": \"/blank_boy.png\"\n                },\n                \"isAnonymous\": false,\n                \"tips\": {\n                  \"count\": 3\n                },\n                \"lists\": {\n                  \"groups\": [\n                    {\n                      \"type\": \"created\",\n                      \"count\": 9,\n                      \"items\": []\n                    }\n                  ]\n                },\n                \"homeCity\": \"\",\n                \"bio\": \"\",\n                \"contact\": {}\n              },\n              {\n                \"id\": \"12345\",\n                \"firstName\": \"John\",\n                \"lastName\": \"Smith\",\n                \"handle\": \"John Smith\",\n                \"privateProfile\": false,\n                \"gender\": \"male\",\n                \"address\": \"\",\n                \"city\": \"\",\n                \"state\": \"\",\n                \"countryCode\": \"US\",\n                \"followingRelationship\": \"followingThem\",\n                \"photo\": {\n                  \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n                  \"suffix\": \"/blank_boy.png\"\n                },\n                \"isAnonymous\": false,\n                \"tips\": {\n                  \"count\": 0\n                },\n                \"lists\": {\n                  \"groups\": [\n                    {\n                      \"type\": \"created\",\n                      \"count\": 3,\n                      \"items\": []\n                    }\n                  ]\n                },\n                \"homeCity\": \"\",\n                \"bio\": \"\",\n                \"contact\": {}\n              }\n            ]\n          }\n        ]\n      },\n      \"birthday\": 226022400,\n      \"isAnonymous\": false,\n      \"tips\": {\n        \"count\": 19\n      },\n      \"homeCity\": \"\",\n      \"bio\": \"\",\n      \"contact\": {\n        \"verifiedPhone\": \"\",\n        \"email\": \"\",\n        \"verifiedEmail\": \"true\",\n        \"facebook\": \"\"\n      },\n      \"photos\": {\n        \"count\": 14,\n        \"items\": [\n          {\n            \"id\": \"6515f99e2425d010750f76fd\",\n            \"createdAt\": 1695938974,\n            \"source\": {\n              \"name\": \"Foursquare Web\",\n              \"url\": \"https://foursquare.com\"\n            },\n            \"prefix\": \"https://fastly.4sqi.net/img/general/\",\n            \"suffix\": \"/7294631_VJqOKo4P9-W0VyQk0iOZZzqG178RAL1rswe4KpZ2YGg.png\",\n            \"width\": 480,\n            \"height\": 650,\n            \"visibility\": \"public\",\n            \"venue\": {\n              \"id\": \"4f0de7267bebfc146005dcc0\",\n              \"name\": \"Mattlantis 🐳\",\n              \"contact\": {\n                \"facebook\": \"122222194529429\"\n              },\n              \"location\": {\n                \"address\": \"Lake Sakakawea\",\n                \"lat\": 47.4992621650669,\n                \"lng\": -101.9282341003418,\n                \"labeledLatLngs\": [\n                  {\n                    \"label\": \"display\",\n                    \"lat\": 47.4992621650669,\n                    \"lng\": -101.9282341003418\n                  }\n                ],\n                \"postalCode\": \"58540\",\n                \"cc\": \"US\",\n                \"city\": \"Garrison\",\n                \"state\": \"ND\",\n                \"country\": \"United States\",\n                \"contextLine\": \"Garrison, ND\",\n                \"contextGeoId\": 72057594043617170,\n                \"formattedAddress\": {\n                  \"text\": \"Lake Sakakawea\\nGarrison, ND 58540\",\n                  \"entities\": []\n                }\n              },\n              \"categories\": [\n                {\n                  \"id\": \"4bf58dd8d48988d161941735\",\n                  \"name\": \"Lake\",\n                  \"pluralName\": \"Lakes\",\n                  \"shortName\": \"Lake\",\n                  \"icon\": {\n                    \"prefix\": \"https://ss3.4sqi.net/img/categories_v2/parks_outdoors/lake_\",\n                    \"suffix\": \".png\"\n                  },\n                  \"primary\": true\n                }\n              ],\n              \"verified\": true,\n              \"stats\": {\n                \"tipCount\": 16,\n                \"usersCount\": 1,\n                \"checkinsCount\": 4\n              },\n              \"private\": true,\n              \"url\": \"http://foursquare.com/nfolkert\",\n              \"like\": false,\n              \"venueRatingBlacklisted\": true,\n              \"beenHere\": {\n                \"lastCheckinExpiredAt\": 0\n              },\n              \"createdAt\": 1326311206\n            },\n            \"tip\": {\n              \"id\": \"6515f99d8f151130670423d4\",\n              \"createdAt\": 1695938973,\n              \"text\": \"here is puppy number 2\",\n              \"type\": \"user\",\n              \"canonicalUrl\": \"https://foursquare.com/item/6515f99d8f151130670423d4\",\n              \"likes\": {\n                \"count\": 0,\n                \"groups\": []\n              },\n              \"like\": false,\n              \"viewCount\": 0,\n              \"agreeCount\": 0,\n              \"disagreeCount\": 0,\n              \"todo\": {\n                \"count\": 0\n              }\n            }\n          }\n        ]\n      },\n      \"checkinPings\": \"off\",\n      \"type\": \"user\",\n      \"mayorships\": {\n        \"count\": 0,\n        \"items\": []\n      },\n      \"checkins\": {\n        \"count\": 23,\n        \"items\": [\n          {\n            \"id\": \"59b97e6cf79faa0d5e23abeb\",\n            \"createdAt\": 1505328748,\n            \"type\": \"checkin\",\n            \"private\": true,\n            \"visibility\": \"private\",\n            \"entities\": [],\n            \"shout\": \"Monday monday!\",\n            \"timeZoneOffset\": -240,\n            \"venue\": {\n              \"id\": \"4f0de7267bebfc146005dcc0\",\n              \"name\": \"Mattlantis 🐳\",\n              \"contact\": {\n                \"facebook\": \"122222194529429\"\n              },\n              \"location\": {\n                \"address\": \"Lake Sakakawea\",\n                \"lat\": 47.4992621650669,\n                \"lng\": -101.9282341003418,\n                \"labeledLatLngs\": [\n                  {\n                    \"label\": \"display\",\n                    \"lat\": 47.4992621650669,\n                    \"lng\": -101.9282341003418\n                  }\n                ],\n                \"postalCode\": \"58540\",\n                \"cc\": \"US\",\n                \"city\": \"Garrison\",\n                \"state\": \"ND\",\n                \"country\": \"United States\",\n                \"contextLine\": \"Garrison, ND\",\n                \"contextGeoId\": 72057594043617170,\n                \"formattedAddress\": {\n                  \"text\": \"Lake Sakakawea\\nGarrison, ND 58540\",\n                  \"entities\": []\n                }\n              },\n              \"categories\": [\n                {\n                  \"id\": \"4bf58dd8d48988d161941735\",\n                  \"name\": \"Lake\",\n                  \"pluralName\": \"Lakes\",\n                  \"shortName\": \"Lake\",\n                  \"icon\": {\n                    \"prefix\": \"https://ss3.4sqi.net/img/categories_v2/parks_outdoors/lake_\",\n                    \"suffix\": \".png\"\n                  },\n                  \"primary\": true\n                }\n              ],\n              \"verified\": true,\n              \"stats\": {\n                \"tipCount\": 16,\n                \"usersCount\": 1,\n                \"checkinsCount\": 4\n              },\n              \"private\": true,\n              \"url\": \"http://foursquare.com/nfolkert\",\n              \"like\": false,\n              \"venueRatingBlacklisted\": true,\n              \"beenHere\": {\n                \"lastCheckinExpiredAt\": 0\n              },\n              \"createdAt\": 1326311206\n            },\n            \"likes\": {\n              \"count\": 0,\n              \"groups\": []\n            },\n            \"like\": false,\n            \"isMayor\": false,\n            \"photos\": {\n              \"count\": 1,\n              \"items\": [\n                {\n                  \"id\": \"59b97e6d270ee77dbf2b8aa0\",\n                  \"createdAt\": 1505328749,\n                  \"source\": {\n                    \"name\": \"Swarm for iOS\",\n                    \"url\": \"https://www.swarmapp.com\"\n                  },\n                  \"prefix\": \"https://fastly.4sqi.net/img/general/\",\n                  \"suffix\": \"/7294631_KK8FbnS6sqgrlXgZeCwkYbSn2efiAQBoT7x4p_hteis.jpg\",\n                  \"width\": 1440,\n                  \"height\": 1920,\n                  \"user\": {\n                    \"id\": \"12345\",\n                    \"firstName\": \"John\",\n                    \"lastName\": \"Smith\",\n                    \"handle\": \"John Smith\",\n                    \"privateProfile\": false,\n                    \"gender\": \"male\",\n                    \"address\": \"\",\n                    \"city\": \"\",\n                    \"state\": \"\",\n                    \"countryCode\": \"US\",\n                    \"followingRelationship\": \"followingThem\",\n                    \"photo\": {\n                      \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n                      \"suffix\": \"/blank_boy.png\"\n                    },\n                    \"birthday\": 226022400,\n                    \"isAnonymous\": false\n                  },\n                  \"visibility\": \"private\"\n                }\n              ],\n              \"layout\": {\n                \"name\": \"single\"\n              }\n            },\n            \"posts\": {\n              \"count\": 0,\n              \"textCount\": 0\n            },\n            \"comments\": {\n              \"count\": 0\n            },\n            \"source\": {\n              \"name\": \"Swarm for iOS\",\n              \"url\": \"https://www.swarmapp.com\"\n            }\n          }\n        ]\n      },\n      \"requests\": {\n        \"count\": 0\n      },\n      \"lists\": {\n        \"count\": 15,\n        \"groups\": [\n          {\n            \"type\": \"created\",\n            \"count\": 10,\n            \"items\": [\n              {\n                \"id\": \"641a25e7cf08c07fbebbccc3\",\n                \"name\": \"Not Worth It\",\n                \"description\": \"Find other places to blow your diet!\",\n                \"editable\": true,\n                \"public\": true,\n                \"collaborative\": false,\n                \"url\": \"/johnsmith/list/not-worth-it\",\n                \"canonicalUrl\": \"https://foursquare.com/johnsmith/list/not-worth-it\",\n                \"createdAt\": 1679435239,\n                \"updatedAt\": 1679435239,\n                \"followers\": {\n                  \"count\": 0\n                },\n                \"listItems\": {\n                  \"count\": 0\n                }\n              },\n              {\n                \"id\": \"641a258202c7be52dbebd1b3\",\n                \"name\": \"My Amazing List\",\n                \"description\": \"All the amazing things!\",\n                \"editable\": true,\n                \"public\": true,\n                \"collaborative\": false,\n                \"url\": \"/johnsmith/list/my-amazing-list\",\n                \"canonicalUrl\": \"https://foursquare.com/johnsmith/list/my-amazing-list\",\n                \"createdAt\": 1679435138,\n                \"updatedAt\": 1679435138,\n                \"followers\": {\n                  \"count\": 0\n                },\n                \"listItems\": {\n                  \"count\": 0\n                }\n              },\n              {\n                \"id\": \"6385269a932cbd14d0b7cf7d\",\n                \"name\": \"pic list\",\n                \"description\": \"\",\n                \"editable\": true,\n                \"public\": true,\n                \"collaborative\": false,\n                \"url\": \"/johnsmith/list/pic-list\",\n                \"canonicalUrl\": \"https://foursquare.com/johnsmith/list/pic-list\",\n                \"createdAt\": 1669670554,\n                \"updatedAt\": 1669670625,\n                \"photo\": {\n                  \"id\": \"638507ee03d7976ca2022cc5\",\n                  \"createdAt\": 1669662702,\n                  \"prefix\": \"https://fastly.4sqi.net/img/general/\",\n                  \"suffix\": \"/7294631_tAsFskGEYxubkXBArYCAgqTvFLC7d80iRYhbaWn9jP4.png\",\n                  \"width\": 948,\n                  \"height\": 508,\n                  \"user\": {\n                    \"id\": \"12345\",\n                    \"firstName\": \"John\",\n                    \"lastName\": \"Smith\",\n                    \"handle\": \"John Smith\",\n                    \"privateProfile\": false,\n                    \"gender\": \"male\",\n                    \"address\": \"\",\n                    \"city\": \"\",\n                    \"state\": \"\",\n                    \"countryCode\": \"US\",\n                    \"followingRelationship\": \"followingThem\",\n                    \"photo\": {\n                      \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n                      \"suffix\": \"/blank_boy.png\"\n                    },\n                    \"birthday\": 226022400,\n                    \"isAnonymous\": false\n                  },\n                  \"visibility\": \"public\"\n                },\n                \"followers\": {\n                  \"count\": 0\n                },\n                \"listItems\": {\n                  \"count\": 3\n                }\n              }\n            ]\n          },\n          {\n            \"type\": \"followed\",\n            \"count\": 3,\n            \"items\": []\n          },\n          {\n            \"type\": \"yours\",\n            \"count\": 2,\n            \"items\": [\n              {\n                \"id\": \"7294631/todos\",\n                \"name\": \"My Saved Places\",\n                \"description\": \"\",\n                \"type\": \"todos\",\n                \"editable\": true,\n                \"public\": true,\n                \"collaborative\": false,\n                \"url\": \"/johnsmith/list/todos\",\n                \"canonicalUrl\": \"https://foursquare.com/johnsmith/list/todos\",\n                \"listItems\": {\n                  \"count\": 5\n                }\n              },\n              {\n                \"id\": \"7294631/venuelikes\",\n                \"name\": \"My Liked Places\",\n                \"description\": \"\",\n                \"type\": \"likes\",\n                \"editable\": true,\n                \"public\": true,\n                \"collaborative\": false,\n                \"url\": \"/johnsmith/list/venuelikes\",\n                \"canonicalUrl\": \"https://foursquare.com/johnsmith/list/venuelikes\",\n                \"listItems\": {\n                  \"count\": 0\n                }\n              }\n            ]\n          }\n        ]\n      },\n      \"blockedStatus\": \"none\",\n      \"createdAt\": 1299013789,\n      \"lenses\": [],\n      \"referralId\": \"u-7294631\"\n    }\n  }\n}"
                  }
                },
                "schema": {
                  "description": "Successful response containing information about the current user.",
                  "properties": {
                    "description": "Properties of a successful response for retrieving self information for a user.",
                    "meta": {
                      "description": "Metadata object for successful response from the 'get self user' endpoint.",
                      "properties": {
                        "code": {
                          "default": 0,
                          "description": "Status code indicating the result of the API request.",
                          "example": 200,
                          "type": "integer"
                        },
                        "description": "Response object containing metadata about the API request.",
                        "requestId": {
                          "description": "Unique identifier for the API request.",
                          "example": "652465929317ed6e8eb7be9b",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "notifications": {
                      "description": "Array of notification objects for the current user.",
                      "items": {
                        "description": "Array of notification objects for the current user.",
                        "properties": {
                          "description": "Array of notification objects in the user's notification tray.",
                          "item": {
                            "description": "Notification item for the authenticated user's responses, with properties for type and unread count.",
                            "properties": {
                              "description": "Array of notification items containing unread count.",
                              "unreadCount": {
                                "default": 0,
                                "description": "Number of unread items in the user's notifications.",
                                "example": 0,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": {
                            "description": "Response object containing the type of notification for the current user.",
                            "example": "notificationTray",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "response": {
                      "description": "Response object containing retrieved data for the user's self profile.",
                      "properties": {
                        "description": "Response object containing data about the user's profile.",
                        "user": {
                          "description": "Response object containing the retrieved data for the user associated with the API request.",
                          "properties": {
                            "address": {
                              "description": "The user's address.",
                              "example": "",
                              "type": "string"
                            },
                            "bio": {
                              "description": "Response object containing the retrieved data for a user's bio.",
                              "example": "",
                              "type": "string"
                            },
                            "birthday": {
                              "default": 0,
                              "description": "User's birthday.",
                              "example": 226022400,
                              "type": "integer"
                            },
                            "blockedStatus": {
                              "description": "The blocked status of the user associated with the response of a successful request to the 'self' endpoint for user information.",
                              "example": "none",
                              "type": "string"
                            },
                            "checkinPings": {
                              "description": "The properties of a user's check-in pings in response to a successful request to retrieve information about the user.",
                              "example": "off",
                              "type": "string"
                            },
                            "checkins": {
                              "description": "User's check-in information for a successful API request for a user's own information.",
                              "properties": {
                                "count": {
                                  "default": 0,
                                  "description": "Total number of check-ins for the current user.",
                                  "example": 23,
                                  "type": "integer"
                                },
                                "description": "Properties of a user's check-in information in the response from the '/users/self' endpoint.",
                                "items": {
                                  "description": "User's check-in history.",
                                  "items": {
                                    "description": "Array of check-in objects associated with the user's photos.",
                                    "properties": {
                                      "comments": {
                                        "description": "Array of comment objects for check-ins made by the authenticated user.",
                                        "properties": {
                                          "count": {
                                            "default": 0,
                                            "description": "Number of comments on a user's check-in items.",
                                            "example": 0,
                                            "type": "integer"
                                          },
                                          "description": "Array of comments associated with the check-ins made by the user."
                                        },
                                        "type": "object"
                                      },
                                      "createdAt": {
                                        "default": 0,
                                        "description": "Timestamp indicating when the user checked in at a venue; UNIX timestamp in seconds since Epoch.",
                                        "example": 1505328748,
                                        "type": "integer"
                                      },
                                      "description": "Array of objects containing information about check-ins for the user.",
                                      "entities": {
                                        "description": "Entity objects containing information about the items associated with the user's check-ins.",
                                        "type": "array"
                                      },
                                      "id": {
                                        "description": "TThe unique identifier for the check-ins associated with a user's response.",
                                        "example": "59b97e6cf79faa0d5e23abeb",
                                        "type": "string"
                                      },
                                      "isMayor": {
                                        "default": true,
                                        "description": "Indicates if the user is the mayor of the venue at which the check-in was made.",
                                        "example": false,
                                        "type": "boolean"
                                      },
                                      "like": {
                                        "default": true,
                                        "description": "Check-in items liked by a user.",
                                        "example": false,
                                        "type": "boolean"
                                      },
                                      "likes": {
                                        "description": "Number of likes for check-in items associated with the user.",
                                        "properties": {
                                          "count": {
                                            "default": 0,
                                            "description": "Total number of likes for the photo associated with the user's check-in.",
                                            "example": 0,
                                            "type": "integer"
                                          },
                                          "description": "List of users who have liked the check-ins of the current user.",
                                          "groups": {
                                            "description": "Array of user groups who have liked check-ins in the response's retrieved check-in items.",
                                            "type": "array"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "photos": {
                                        "description": "Array of photo objects associated with the check-ins of the current user.",
                                        "properties": {
                                          "count": {
                                            "default": 0,
                                            "description": "Number of photos associated with check-ins for the current user.",
                                            "example": 1,
                                            "type": "integer"
                                          },
                                          "description": "Array of photos associated with the user's check-ins.",
                                          "items": {
                                            "description": "User's check-ins with associated photos.",
                                            "items": {
                                              "description": "The list of photos associated with a user's check-ins.",
                                              "properties": {
                                                "createdAt": {
                                                  "default": 0,
                                                  "description": "Timestamp indicating when the photo was created; UNIX timestamp in seconds since Epoch.",
                                                  "example": 1505328749,
                                                  "type": "integer"
                                                },
                                                "description": "List of photos associated with a user's check-ins.",
                                                "height": {
                                                  "default": 0,
                                                  "description": "Height of photos associated with user's check-ins.",
                                                  "example": 1920,
                                                  "type": "integer"
                                                },
                                                "id": {
                                                  "description": "Unique identifier for the photos associated with the check-ins made by the user.",
                                                  "example": "59b97e6d270ee77dbf2b8aa0",
                                                  "type": "string"
                                                },
                                                "prefix": {
                                                  "description": "URL prefix for the photo.",
                                                  "example": "https://fastly.4sqi.net/img/general/",
                                                  "type": "string"
                                                },
                                                "source": {
                                                  "description": "Photo sources for check-ins associated with a user's photo collection.",
                                                  "properties": {
                                                    "description": "Array of photo objects associated with the user's check-in history.",
                                                    "name": {
                                                      "description": "The sources of photos associated with a user's check-ins.",
                                                      "example": "Swarm for iOS",
                                                      "type": "string"
                                                    },
                                                    "url": {
                                                      "description": "Photos from a user's check-ins.",
                                                      "example": "https://www.swarmapp.com",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "type": "object"
                                                },
                                                "suffix": {
                                                  "description": "URL Suffix for the photo.",
                                                  "example": "/7294631_KK8FbnS6sqgrlXgZeCwkYbSn2efiAQBoT7x4p_hteis.jpg",
                                                  "type": "string"
                                                },
                                                "user": {
                                                  "description": "User's check-ins photos from a specific venue.",
                                                  "properties": {
                                                    "address": {
                                                      "description": "Address of user's check-in photos.",
                                                      "example": "",
                                                      "type": "string"
                                                    },
                                                    "birthday": {
                                                      "default": 0,
                                                      "description": "Birthday of the user who uploaded the photo associated with the check-in.",
                                                      "example": 226022400,
                                                      "type": "integer"
                                                    },
                                                    "city": {
                                                      "description": "City of the check-in.",
                                                      "example": "",
                                                      "type": "string"
                                                    },
                                                    "countryCode": {
                                                      "description": "Country code of the check-in.",
                                                      "example": "US",
                                                      "type": "string"
                                                    },
                                                    "description": "Array of photos associated with users who have checked in at the specified venue.",
                                                    "firstName": {
                                                      "description": "The first names of users who have checked in at a venue.",
                                                      "example": "John",
                                                      "type": "string"
                                                    },
                                                    "followingRelationship": {
                                                      "description": "Following relationship.",
                                                      "example": "followingThem",
                                                      "type": "string"
                                                    },
                                                    "gender": {
                                                      "description": "The gender information for the user associated with the check-ins in the response.",
                                                      "example": "male",
                                                      "type": "string"
                                                    },
                                                    "handle": {
                                                      "description": "User handle.",
                                                      "example": "John Smith",
                                                      "type": "string"
                                                    },
                                                    "id": {
                                                      "description": "A user's unique ID.",
                                                      "example": "12345",
                                                      "type": "string"
                                                    },
                                                    "isAnonymous": {
                                                      "default": true,
                                                      "description": "Flag indicating if the user's photo was uploaded anonymously.",
                                                      "example": false,
                                                      "type": "boolean"
                                                    },
                                                    "lastName": {
                                                      "description": "Response containing user's last name on photos associated with the user's check-ins on the user's profile.",
                                                      "example": "Smith",
                                                      "type": "string"
                                                    },
                                                    "photo": {
                                                      "description": "Photo objects for photos uploaded by the user associated with the check-ins in the response.",
                                                      "properties": {
                                                        "description": "Object containing information about the photos uploaded by the user's check-ins at venues.",
                                                        "prefix": {
                                                          "description": "URL prefix of the photo.",
                                                          "example": "https://fastly.4sqi.net/img/user/",
                                                          "type": "string"
                                                        },
                                                        "suffix": {
                                                          "description": "URL suffix of the photo.",
                                                          "example": "/blank_boy.png",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "type": "object"
                                                    },
                                                    "privateProfile": {
                                                      "default": true,
                                                      "description": "Private check-in photos for the user's self.",
                                                      "example": false,
                                                      "type": "boolean"
                                                    },
                                                    "state": {
                                                      "description": "State associated with the check-in.",
                                                      "example": "",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "type": "object"
                                                },
                                                "visibility": {
                                                  "description": "The visibility of photos from a user's check-in items.",
                                                  "example": "private",
                                                  "type": "string"
                                                },
                                                "width": {
                                                  "default": 0,
                                                  "description": "Width of photos associated with check-ins for the user.",
                                                  "example": 1440,
                                                  "type": "integer"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "type": "array"
                                          },
                                          "layout": {
                                            "description": "Layout of photos associated with a user's check-in history.",
                                            "properties": {
                                              "description": "Array of photo objects associated with the user's check-ins.",
                                              "name": {
                                                "description": "The layout name of photos in a user's check-ins.",
                                                "example": "single",
                                                "type": "string"
                                              }
                                            },
                                            "type": "object"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "posts": {
                                        "description": "User's check-in posts.",
                                        "properties": {
                                          "count": {
                                            "default": 0,
                                            "description": "The total number of posts associated with the check-ins of the current user.",
                                            "example": 0,
                                            "type": "integer"
                                          },
                                          "description": "Array of posts associated with the user's check-in items.",
                                          "textCount": {
                                            "default": 0,
                                            "description": "Total number of text posts in the check-ins associated with the user's profile.",
                                            "example": 0,
                                            "type": "integer"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "private": {
                                        "default": true,
                                        "description": "User check-ins from private locations.",
                                        "example": true,
                                        "type": "boolean"
                                      },
                                      "shout": {
                                        "description": "Response containing a user's check-in shout.",
                                        "example": "Monday monday!",
                                        "type": "string"
                                      },
                                      "source": {
                                        "description": "Array of sources for the user's check-ins.",
                                        "properties": {
                                          "description": "Array of sources for check-ins associated with the user's photos.",
                                          "name": {
                                            "description": "The name of the source for the user's check-in history.",
                                            "example": "Swarm for iOS",
                                            "type": "string"
                                          },
                                          "url": {
                                            "description": "The source URL for the check-ins associated with the user's self profile.",
                                            "example": "https://www.swarmapp.com",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "timeZoneOffset": {
                                        "default": 0,
                                        "description": "Time zone offset for user's check-in items in response.",
                                        "example": -240,
                                        "type": "integer"
                                      },
                                      "type": {
                                        "description": "Response object containing the type of check-ins associated with the user's profile.",
                                        "example": "checkin",
                                        "type": "string"
                                      },
                                      "venue": {
                                        "description": "User's check-in venue information from successful response.",
                                        "properties": {
                                          "beenHere": {
                                            "description": "Object representing a venue that a user has been to, within a list of check-ins for a specific user.",
                                            "properties": {
                                              "description": "A list of venues where the user has previously checked in.",
                                              "lastCheckinExpiredAt": {
                                                "default": 0,
                                                "description": "Timestamp of the most recent expired check-in for the user's visited venue; UNIX timestamp in seconds since Epoch.",
                                                "example": 0,
                                                "type": "integer"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "categories": {
                                            "description": "Array of venue categories for the check-in items associated with a user's self response.",
                                            "items": {
                                              "description": "Array of category objects for venues associated with the user's check-ins.",
                                              "properties": {
                                                "description": "An array of categories associated with venues in the check-ins of the user.",
                                                "icon": {
                                                  "description": "Icon for categories associated with venues where the user has checked in.",
                                                  "properties": {
                                                    "description": "Icon for the category of the venue associated with the user's check-in.",
                                                    "prefix": {
                                                      "description": "URL prefix.",
                                                      "example": "https://ss3.4sqi.net/img/categories_v2/parks_outdoors/lake_",
                                                      "type": "string"
                                                    },
                                                    "suffix": {
                                                      "description": "Suffix of the photo.",
                                                      "example": ".png",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "type": "object"
                                                },
                                                "id": {
                                                  "description": "Unique identifier for the category associated with the venue of the check-ins.",
                                                  "example": "4bf58dd8d48988d161941735",
                                                  "type": "string"
                                                },
                                                "name": {
                                                  "description": "Name of categories associated with venues in user's check-ins.",
                                                  "example": "Lake",
                                                  "type": "string"
                                                },
                                                "pluralName": {
                                                  "description": "The categories for plural venue names associated with a user's check-ins.",
                                                  "example": "Lakes",
                                                  "type": "string"
                                                },
                                                "primary": {
                                                  "default": true,
                                                  "description": "Primary categories for check-ins at venues associated with the user's profile.",
                                                  "example": true,
                                                  "type": "boolean"
                                                },
                                                "shortName": {
                                                  "description": "The short name of the categories for the venues associated with the check-ins of the user's response for their own properties.",
                                                  "example": "Lake",
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "type": "array"
                                          },
                                          "contact": {
                                            "description": "Contact information for venues associated with a user's check-ins.",
                                            "properties": {
                                              "description": "Properties of the contact information for venues associated with check-ins made by the user.",
                                              "facebook": {
                                                "description": "Facebook contact information for venues associated with a user's check-ins.",
                                                "example": "122222194529429",
                                                "type": "string"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "createdAt": {
                                            "default": 0,
                                            "description": "The creation date of the venue associated with the check-ins of the user; UNIX timestamp in seconds since Epoch.",
                                            "example": 1326311206,
                                            "type": "integer"
                                          },
                                          "description": "Array of nearby venues where the user has checked in.",
                                          "id": {
                                            "description": "Unique identifier for the venue associated with the user's check-ins in the response.",
                                            "example": "4f0de7267bebfc146005dcc0",
                                            "type": "string"
                                          },
                                          "like": {
                                            "default": true,
                                            "description": "Boolean for whether or not the user has liked the venue associated with their check-ins.",
                                            "example": false,
                                            "type": "boolean"
                                          },
                                          "location": {
                                            "description": "The location of a venue associated with a user's check-in.",
                                            "properties": {
                                              "address": {
                                                "description": "The path to the address of the venue associated with a user's check-in history.",
                                                "example": "Lake Sakakawea",
                                                "type": "string"
                                              },
                                              "cc": {
                                                "description": "Country code.",
                                                "example": "US",
                                                "type": "string"
                                              },
                                              "city": {
                                                "description": "Check-in city.",
                                                "example": "Garrison",
                                                "type": "string"
                                              },
                                              "contextGeoId": {
                                                "default": 0,
                                                "description": "Unique identifier for the geographic location associated with the check-in venue for a specific user.",
                                                "example": 72057594043617170,
                                                "type": "integer"
                                              },
                                              "contextLine": {
                                                "description": "Check-ins for a user at a specific venue with location context.",
                                                "example": "Garrison, ND",
                                                "type": "string"
                                              },
                                              "country": {
                                                "description": "The country of the venue.",
                                                "example": "United States",
                                                "type": "string"
                                              },
                                              "description": "Array of venue objects with location information for the user's check-in history.",
                                              "formattedAddress": {
                                                "description": "Formatted address for the location of the user's check-ins at a venue.",
                                                "properties": {
                                                  "description": "Formatted address of the location of the venue associated with the check-ins of the user.",
                                                  "entities": {
                                                    "description": "Formatted address entities for the venues associated with the user's check-ins.",
                                                    "type": "array"
                                                  },
                                                  "text": {
                                                    "description": "Text describing the venue.",
                                                    "example": "Lake Sakakawea\nGarrison, ND 58540",
                                                    "type": "string"
                                                  }
                                                },
                                                "type": "object"
                                              },
                                              "labeledLatLngs": {
                                                "description": "Array of labeled latitude and longitude coordinates for the user's check-ins at venues.",
                                                "items": {
                                                  "description": "Array of labeled latitude and longitude coordinates for the venues associated with the user's check-ins.",
                                                  "properties": {
                                                    "description": "Array of labeled latitude and longitude coordinates for the venues associated with the user's check-ins.",
                                                    "label": {
                                                      "description": "The label for the labeled latitude and longitude coordinates of the venues in the check-ins of the user's responses.",
                                                      "example": "display",
                                                      "type": "string"
                                                    },
                                                    "lat": {
                                                      "default": 0,
                                                      "description": "Latitude coordinate for the labeled location object of the venue associated with the user's check-ins.",
                                                      "example": 47.4992621650669,
                                                      "type": "number"
                                                    },
                                                    "lng": {
                                                      "default": 0,
                                                      "description": "Longitude coordinate of the labeled latitude and longitude coordinates for the user's check-in venues.",
                                                      "example": -101.9282341003418,
                                                      "type": "number"
                                                    }
                                                  },
                                                  "type": "object"
                                                },
                                                "type": "array"
                                              },
                                              "lat": {
                                                "default": 0,
                                                "description": "The latitude coordinate of the venue associated with the user's check-in items in the response.",
                                                "example": 47.4992621650669,
                                                "type": "number"
                                              },
                                              "lng": {
                                                "default": 0,
                                                "description": "Longitude coordinate of the venue associated with the check-in items for the current user.",
                                                "example": -101.9282341003418,
                                                "type": "number"
                                              },
                                              "postalCode": {
                                                "description": "The venue's postal code.",
                                                "example": "58540",
                                                "type": "string"
                                              },
                                              "state": {
                                                "description": "The state of the venue associated with the user's check-ins.",
                                                "example": "ND",
                                                "type": "string"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "name": {
                                            "description": "The name of the venue associated with a user's check-in items.",
                                            "example": "Mattlantis 🐳",
                                            "type": "string"
                                          },
                                          "private": {
                                            "default": true,
                                            "description": "Flag indicating if the venue associated with the most recent check-in for the current user is private.",
                                            "example": true,
                                            "type": "boolean"
                                          },
                                          "stats": {
                                            "description": "Stats of the venue where the user has checked in.",
                                            "properties": {
                                              "checkinsCount": {
                                                "default": 0,
                                                "description": "Number of check-ins at a venue for the user who made the API request.",
                                                "example": 4,
                                                "type": "integer"
                                              },
                                              "description": "Total number of check-ins at a given venue.",
                                              "tipCount": {
                                                "default": 0,
                                                "description": "Total number of tips from the user's check-ins at the specified venue.",
                                                "example": 16,
                                                "type": "integer"
                                              },
                                              "usersCount": {
                                                "default": 0,
                                                "description": "Number of users who have checked in at the venue associated with the photo.",
                                                "example": 1,
                                                "type": "integer"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "url": {
                                            "description": "The URL of the venue associated with the user's check-ins.",
                                            "example": "http://foursquare.com/nfolkert",
                                            "type": "string"
                                          },
                                          "venueRatingBlacklisted": {
                                            "default": true,
                                            "description": "Flag indicating if the user's check-in venue ratings are blacklisted.",
                                            "example": true,
                                            "type": "boolean"
                                          },
                                          "verified": {
                                            "default": true,
                                            "description": "Boolean indicating if the venue associated with the user's check-in is verified.",
                                            "example": true,
                                            "type": "boolean"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "visibility": {
                                        "description": "User's check-in visibility information for the retrieved items in the response properties.",
                                        "example": "private",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            },
                            "city": {
                              "description": "Properties of the city belonging to the user object in the response.",
                              "example": "",
                              "type": "string"
                            },
                            "contact": {
                              "description": "Contact information for the current user's profile.",
                              "properties": {
                                "description": "Contains contact information for the user who requested the data.",
                                "email": {
                                  "description": "The email contact information for a user's response to a successful request for their own data.",
                                  "example": "",
                                  "type": "string"
                                },
                                "facebook": {
                                  "description": "Facebook contact information for the user who made the API request.",
                                  "example": "",
                                  "type": "string"
                                },
                                "verifiedEmail": {
                                  "description": "Verified email status for the current user's response.",
                                  "example": "true",
                                  "type": "string"
                                },
                                "verifiedPhone": {
                                  "description": "The verified phone number for the current user's contact information.",
                                  "example": "",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "countryCode": {
                              "description": "The user's country code.",
                              "example": "US",
                              "type": "string"
                            },
                            "createdAt": {
                              "default": 0,
                              "description": "The timestamp indicating when the user was created; UNIX timestamp in seconds since Epoch.",
                              "example": 1299013789,
                              "type": "integer"
                            },
                            "description": "User object containing information about the user who uploaded the photo.",
                            "firstName": {
                              "description": "The first name of the user associated with the successful API call to retrieve the current user's information.",
                              "example": "John",
                              "type": "string"
                            },
                            "friends": {
                              "description": "User's friends retrieved from the self endpoint.",
                              "properties": {
                                "count": {
                                  "default": 0,
                                  "description": "Number of friends for the current user.",
                                  "example": 5,
                                  "type": "integer"
                                },
                                "description": "User's friends' information.",
                                "groups": {
                                  "description": "Array of groups that the user's friends belong to.",
                                  "items": {
                                    "description": "User's friends' groups.",
                                    "properties": {
                                      "count": {
                                        "default": 0,
                                        "description": "Number of groups that the user's friends are members of.",
                                        "example": 0,
                                        "type": "integer"
                                      },
                                      "description": "User's friends' group information.",
                                      "items": {
                                        "description": "Array of groups that the user's friends belong to.",
                                        "type": "array"
                                      },
                                      "name": {
                                        "description": "User's friends' group names for a successful response from the self endpoint.",
                                        "example": "Mutual friends",
                                        "type": "string"
                                      },
                                      "type": {
                                        "description": "The type of groups that the user's friends are a part of.",
                                        "example": "friends",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            },
                            "gender": {
                              "description": "User gender.",
                              "example": "male",
                              "type": "string"
                            },
                            "handle": {
                              "description": "The handle of the authenticated user.",
                              "example": "johnsmith",
                              "type": "string"
                            },
                            "homeCity": {
                              "description": "The user's home city.",
                              "example": "",
                              "type": "string"
                            },
                            "id": {
                              "description": "ID of the user associated with the response from a successful request to retrieve self information.",
                              "example": "123456",
                              "type": "string"
                            },
                            "isAnonymous": {
                              "default": true,
                              "description": "Flag indicating if the user is anonymous.",
                              "example": false,
                              "type": "boolean"
                            },
                            "lastName": {
                              "description": "The last name of the user.",
                              "example": "Smith",
                              "type": "string"
                            },
                            "lenses": {
                              "description": "Array of lenses associated with the user's response data.",
                              "type": "array"
                            },
                            "lists": {
                              "description": "Array of lists created by the user.",
                              "properties": {
                                "count": {
                                  "default": 0,
                                  "description": "The total number of lists created by the current user.",
                                  "example": 15,
                                  "type": "integer"
                                },
                                "description": "User's lists associated with a self-request, including information about the user who created the lists.",
                                "groups": {
                                  "description": "Array of groups that the current user has saved lists to.",
                                  "items": {
                                    "description": "List of groups that the current user is a member of.",
                                    "properties": {
                                      "count": {
                                        "default": 0,
                                        "description": "The number of lists in a user's group for successful response.",
                                        "example": 10,
                                        "type": "integer"
                                      },
                                      "description": "Lists of groups associated with the current user's created lists.",
                                      "items": {
                                        "description": "Array of list groups containing items associated with the user's profile.",
                                        "items": {
                                          "description": "Array of list objects containing information about the user's groups and their items.",
                                          "properties": {
                                            "canonicalUrl": {
                                              "description": "The canonical URL for the list.",
                                              "example": "https://foursquare.com/johnsmith/list/not-worth-it",
                                              "type": "string"
                                            },
                                            "collaborative": {
                                              "default": true,
                                              "description": "Checks if the current user's lists contain any collaborative groups.",
                                              "example": false,
                                              "type": "boolean"
                                            },
                                            "createdAt": {
                                              "default": 0,
                                              "description": "The creation timestamp for items belonging to lists in groups for the authenticated user's profile; UNIX timestamp in seconds since Epoch.",
                                              "example": 1679435239,
                                              "type": "integer"
                                            },
                                            "description": {
                                              "example": "Find other places to blow your diet!",
                                              "type": "string"
                                            },
                                            "editable": {
                                              "default": true,
                                              "description": "Indicates whether the user has permission to edit the items in the group lists.",
                                              "example": true,
                                              "type": "boolean"
                                            },
                                            "followers": {
                                              "description": "List of follower objects for the authenticated user's lists.",
                                              "properties": {
                                                "count": {
                                                  "default": 0,
                                                  "description": "Total number of followers for the user who uploaded the photo.",
                                                  "example": 0,
                                                  "type": "integer"
                                                },
                                                "description": "Array of user objects representing the followers of the current user's lists' groups' items."
                                              },
                                              "type": "object"
                                            },
                                            "id": {
                                              "description": "Retrieve the unique identifier for the list group items associated with the user's self get response, specifically the individual item identifiers within those groups.",
                                              "example": "641a25e7cf08c07fbebbccc3",
                                              "type": "string"
                                            },
                                            "listItems": {
                                              "description": "User's lists containing groups, with each group containing items, and each item containing a list of list items.",
                                              "properties": {
                                                "count": {
                                                  "default": 0,
                                                  "description": "Number of list items in the user's lists.",
                                                  "example": 0,
                                                  "type": "integer"
                                                },
                                                "description": "Array of items in a user's list on Foursquare."
                                              },
                                              "type": "object"
                                            },
                                            "name": {
                                              "description": "The names of lists that the user has added items to.",
                                              "example": "Not Worth It",
                                              "type": "string"
                                            },
                                            "public": {
                                              "default": true,
                                              "description": "Flag indicating if the user's public lists contain any items.",
                                              "example": true,
                                              "type": "boolean"
                                            },
                                            "updatedAt": {
                                              "default": 0,
                                              "description": "Timestamp indicating when the user's list groups were last updated; UNIX timestamp in seconds since Epoch.",
                                              "example": 1679435239,
                                              "type": "integer"
                                            },
                                            "url": {
                                              "description": "URLs for user's lists.",
                                              "example": "/johnsmith/list/not-worth-it",
                                              "type": "string"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "type": "array"
                                      },
                                      "type": {
                                        "description": "The type of lists that the user is associated with.",
                                        "example": "created",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            },
                            "mayorships": {
                              "description": "Array of objects containing information about the mayorships held by the current user.",
                              "properties": {
                                "count": {
                                  "default": 0,
                                  "description": "Number of mayorships for the currently authenticated user.",
                                  "example": 0,
                                  "type": "integer"
                                },
                                "description": "Properties of the user's mayorships.",
                                "items": {
                                  "description": "Array of objects containing the user's mayorships.",
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            },
                            "photo": {
                              "description": "User's profile photo associated with a successful response from the '/users/self' endpoint.",
                              "properties": {
                                "default": {
                                  "default": true,
                                  "description": "Whether the user's profile photo is set as the default photo.",
                                  "example": true,
                                  "type": "boolean"
                                },
                                "description": "The user's profile photo information for successful responses.",
                                "prefix": {
                                  "description": "The prefix for the user's profile photo.",
                                  "example": "https://fastly.4sqi.net/img/user/",
                                  "type": "string"
                                },
                                "suffix": {
                                  "description": "URL suffix for the image.",
                                  "example": "/blank_boy.png",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "photos": {
                              "description": "Response object containing the retrieved data for the photos uploaded by the user.",
                              "properties": {
                                "count": {
                                  "default": 0,
                                  "description": "Number of photos uploaded by the current user.",
                                  "example": 14,
                                  "type": "integer"
                                },
                                "description": "User's photos associated with a successful response.",
                                "items": {
                                  "description": "Array of objects containing information about a user's photos.",
                                  "items": {
                                    "description": "Array of photo objects containing information about the user's photos.",
                                    "properties": {
                                      "createdAt": {
                                        "default": 0,
                                        "description": "Timestamp indicating when the user's photo was created; UNIX timestamp in seconds since Epoch.",
                                        "example": 1695938974,
                                        "type": "integer"
                                      },
                                      "description": "Array of photos uploaded by the user.",
                                      "height": {
                                        "default": 0,
                                        "description": "Height of the user's photos in pixels.",
                                        "example": 650,
                                        "type": "integer"
                                      },
                                      "id": {
                                        "description": "Unique identifier for the user's photos.",
                                        "example": "6515f99e2425d010750f76fd",
                                        "type": "string"
                                      },
                                      "prefix": {
                                        "description": "Response user's photos prefix from a successful API request.",
                                        "example": "https://fastly.4sqi.net/img/general/",
                                        "type": "string"
                                      },
                                      "source": {
                                        "description": "Metadata object containing information about the user's photos, including the source where they were obtained.",
                                        "properties": {
                                          "description": "Array of photo objects containing information about the source where the photo was obtained.",
                                          "name": {
                                            "description": "Information about the source of a user's photos.",
                                            "example": "Foursquare Web",
                                            "type": "string"
                                          },
                                          "url": {
                                            "description": "The URL for the source of a user's photos.",
                                            "example": "https://foursquare.com",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "suffix": {
                                        "description": "The photo suffix for a user's photos.",
                                        "example": "/7294631_VJqOKo4P9-W0VyQk0iOZZzqG178RAL1rswe4KpZ2YGg.png",
                                        "type": "string"
                                      },
                                      "tip": {
                                        "description": "User's photo tips retrieved from successful request.",
                                        "properties": {
                                          "agreeCount": {
                                            "default": 0,
                                            "description": "Number of users who have agreed with the tip attached to a photo uploaded by the current user.",
                                            "example": 0,
                                            "type": "integer"
                                          },
                                          "canonicalUrl": {
                                            "description": "The canonical URL for user's photos.",
                                            "example": "https://foursquare.com/item/6515f99d8f151130670423d4",
                                            "type": "string"
                                          },
                                          "createdAt": {
                                            "default": 0,
                                            "description": "Time stamp indicating when the user's tip was created; UNIX timestamp in seconds since Epoch.",
                                            "example": 1695938973,
                                            "type": "integer"
                                          },
                                          "description": "Tips associated with each photo.",
                                          "disagreeCount": {
                                            "default": 0,
                                            "description": "Number of times the tip was disagreed with by users who uploaded the photo.",
                                            "example": 0,
                                            "type": "integer"
                                          },
                                          "id": {
                                            "description": "A unique identifier.",
                                            "example": "6515f99d8f151130670423d4",
                                            "type": "string"
                                          },
                                          "like": {
                                            "default": true,
                                            "description": "Whether the user has liked a tip associated with a photo uploaded by the user.",
                                            "example": false,
                                            "type": "boolean"
                                          },
                                          "likes": {
                                            "description": "Number of likes for a tip associated with a user's photo.",
                                            "properties": {
                                              "count": {
                                                "default": 0,
                                                "description": "Number of likes for a user's tip photo. ",
                                                "example": 0,
                                                "type": "integer"
                                              },
                                              "description": "Array of users who have liked a tip associated with a photo uploaded by a user.",
                                              "groups": {
                                                "description": "Array of groups that liked tips for photos uploaded by the currently authenticated user. ",
                                                "type": "array"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "text": {
                                            "description": "The text of the user's tip for their photos in a successful response.",
                                            "example": "here is puppy number 2",
                                            "type": "string"
                                          },
                                          "todo": {
                                            "description": "Array of to-do objects associated with photos uploaded by the user.",
                                            "properties": {
                                              "count": {
                                                "default": 0,
                                                "description": "Number of to-dos associated with the user's photos.",
                                                "example": 0,
                                                "type": "integer"
                                              },
                                              "description": "User's photos with associated tips and to-do items."
                                            },
                                            "type": "object"
                                          },
                                          "type": {
                                            "description": "The type of tips associated with the photos of the current user.",
                                            "example": "user",
                                            "type": "string"
                                          },
                                          "viewCount": {
                                            "default": 0,
                                            "description": "User's photo tip view count for the retrieved photos in the response.",
                                            "example": 0,
                                            "type": "integer"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "venue": {
                                        "description": "Array of venue objects associated with the photos uploaded by the user.",
                                        "properties": {
                                          "beenHere": {
                                            "description": "The number of times the user has been to the venue associated with the photo.",
                                            "properties": {
                                              "description": "Array of venue objects where the user has been.",
                                              "lastCheckinExpiredAt": {
                                                "default": 0,
                                                "description": "Last check-in expiration timestamp for the user's photos at a specific venue; UNIX timestamp in seconds since Epoch.",
                                                "example": 0,
                                                "type": "integer"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "categories": {
                                            "description": "Categories of venues where the user's photos were taken.",
                                            "items": {
                                              "description": "Array of categories for the venue associated with the user's photos.",
                                              "properties": {
                                                "description": "Array of venue categories for the photos uploaded by the authenticated user.",
                                                "icon": {
                                                  "description": "Icon for the categories associated with the photos uploaded by a user.",
                                                  "properties": {
                                                    "description": "Icon associated with a venue category for a photo uploaded by the authenticated user.",
                                                    "prefix": {
                                                      "description": "URL prefix of the user's photos.",
                                                      "example": "https://ss3.4sqi.net/img/categories_v2/parks_outdoors/lake_",
                                                      "type": "string"
                                                    },
                                                    "suffix": {
                                                      "description": "Icon suffix for venue categories of user's photos in response from self user endpoint.",
                                                      "example": ".png",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "type": "object"
                                                },
                                                "id": {
                                                  "description": "Unique identifier for the categories of venues associated with a user's photos.",
                                                  "example": "4bf58dd8d48988d161941735",
                                                  "type": "string"
                                                },
                                                "name": {
                                                  "description": "Name of categories associated with the photos uploaded by the user.",
                                                  "example": "Lake",
                                                  "type": "string"
                                                },
                                                "pluralName": {
                                                  "description": "The plural name property for the categories of the venues associated with a user's photos.",
                                                  "example": "Lakes",
                                                  "type": "string"
                                                },
                                                "primary": {
                                                  "default": true,
                                                  "description": "Primary categories of the user's photos' associated venues.",
                                                  "example": true,
                                                  "type": "boolean"
                                                },
                                                "shortName": {
                                                  "description": "Short name of the categories associated with the photos of the user who made the API request.",
                                                  "example": "Lake",
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "type": "array"
                                          },
                                          "contact": {
                                            "description": "Venue contact information for user's photos. ",
                                            "properties": {
                                              "description": "Venue contact information for a user's uploaded photos on a successful API request.",
                                              "facebook": {
                                                "description": "The user's facebook contact information.",
                                                "example": "122222194529429",
                                                "type": "string"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "createdAt": {
                                            "default": 0,
                                            "description": "The creation timestamp of a user's check-in at a venue associated with a photo; UNIX timestamp in seconds since Epoch.",
                                            "example": 1326311206,
                                            "type": "integer"
                                          },
                                          "description": "Array of venue objects associated with the user's photos.",
                                          "id": {
                                            "description": "The unique identifier for a venue associated with a user's photos.",
                                            "example": "4f0de7267bebfc146005dcc0",
                                            "type": "string"
                                          },
                                          "like": {
                                            "default": true,
                                            "description": "Whether or not the user liked the venue associated with their uploaded photos.",
                                            "example": false,
                                            "type": "boolean"
                                          },
                                          "location": {
                                            "description": "Location information for photos uploaded by the user.",
                                            "properties": {
                                              "address": {
                                                "description": "The address of the venue associated with the photos of the user who made the request.",
                                                "example": "Lake Sakakawea",
                                                "type": "string"
                                              },
                                              "cc": {
                                                "description": "The country code for the venue's location associated with photos for the user.",
                                                "example": "US",
                                                "type": "string"
                                              },
                                              "city": {
                                                "description": "The city for the venue's location.",
                                                "example": "Garrison",
                                                "type": "string"
                                              },
                                              "contextGeoId": {
                                                "default": 0,
                                                "description": "Unique identifier for the contextual geo ID for the venue associated with a user's photos.",
                                                "example": 72057594043617170,
                                                "type": "integer"
                                              },
                                              "contextLine": {
                                                "description": "The location context line for the photo.",
                                                "example": "Garrison, ND",
                                                "type": "string"
                                              },
                                              "country": {
                                                "description": "Location of the user's photos at a specific venue in a specific country.",
                                                "example": "United States",
                                                "type": "string"
                                              },
                                              "description": "Location information for photos uploaded by the user.",
                                              "formattedAddress": {
                                                "description": "The formatted address of the venue associated with the user's uploaded photos.",
                                                "properties": {
                                                  "description": "Formatted address of the venue associated with the photo.",
                                                  "entities": {
                                                    "description": " \"Formatted address entities for venues where the user has uploaded photos.",
                                                    "type": "array"
                                                  },
                                                  "text": {
                                                    "description": "Formatted address text.",
                                                    "example": "Lake Sakakawea\nGarrison, ND 58540",
                                                    "type": "string"
                                                  }
                                                },
                                                "type": "object"
                                              },
                                              "labeledLatLngs": {
                                                "description": "Nested array containing labeled latitude and longitude coordinates for photos uploaded by the user at various venues.",
                                                "items": {
                                                  "description": "User's photos' associated venue's labeled latitude and longitude coordinates. ",
                                                  "properties": {
                                                    "description": "Array of labeled latitude and longitude coordinates for venues associated with the user's photos.",
                                                    "label": {
                                                      "description": "The labeled latitude and longitude coordinates for the user's photos at a specific venue.",
                                                      "example": "display",
                                                      "type": "string"
                                                    },
                                                    "lat": {
                                                      "default": 0,
                                                      "description": "Latitude coordinates for photos taken by the user at a specific venue.",
                                                      "example": 47.4992621650669,
                                                      "type": "number"
                                                    },
                                                    "lng": {
                                                      "default": 0,
                                                      "description": "Longitude coordinate of the user's photos' associated venue location.",
                                                      "example": -101.9282341003418,
                                                      "type": "number"
                                                    }
                                                  },
                                                  "type": "object"
                                                },
                                                "type": "array"
                                              },
                                              "lat": {
                                                "default": 0,
                                                "description": "Latitude coordinate of the location where a user's photo was taken at a specific venue.",
                                                "example": 47.4992621650669,
                                                "type": "number"
                                              },
                                              "lng": {
                                                "default": 0,
                                                "description": "Longitude coordinate of the venue's location associated with the photos uploaded by the current user.",
                                                "example": -101.9282341003418,
                                                "type": "number"
                                              },
                                              "postalCode": {
                                                "description": "Postal code associated with the user's check-in at a venue.",
                                                "example": "58540",
                                                "type": "string"
                                              },
                                              "state": {
                                                "description": "The state of the location for the photos of the user.",
                                                "example": "ND",
                                                "type": "string"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "name": {
                                            "description": "The name of the venue associated with a user's photos.",
                                            "example": "Mattlantis 🐳",
                                            "type": "string"
                                          },
                                          "private": {
                                            "default": true,
                                            "description": "Flag indicating if the photo venue is private.",
                                            "example": true,
                                            "type": "boolean"
                                          },
                                          "stats": {
                                            "description": "Statistics for the venues where the user has uploaded photos.",
                                            "properties": {
                                              "checkinsCount": {
                                                "default": 0,
                                                "description": "Number of check-ins at the venue for the user's photos.",
                                                "example": 4,
                                                "type": "integer"
                                              },
                                              "description": "Object containing venue statistics for the photos associated with the user's profile.",
                                              "tipCount": {
                                                "default": 0,
                                                "description": "Number of tips for a user's photos at a specific venue.",
                                                "example": 16,
                                                "type": "integer"
                                              },
                                              "usersCount": {
                                                "default": 0,
                                                "description": "Number of users who have uploaded photos at the venue.",
                                                "example": 1,
                                                "type": "integer"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "url": {
                                            "description": "The URL of a specific user's photo at a venue.",
                                            "example": "http://foursquare.com/nfolkert",
                                            "type": "string"
                                          },
                                          "venueRatingBlacklisted": {
                                            "default": true,
                                            "description": "Flag indicating if the user's rating for the venue is blacklisted. ",
                                            "example": true,
                                            "type": "boolean"
                                          },
                                          "verified": {
                                            "default": true,
                                            "description": "Indicates if the venue associated with the photo is verified.",
                                            "example": true,
                                            "type": "boolean"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "visibility": {
                                        "description": "User's photo visibility from their own profile.",
                                        "example": "public",
                                        "type": "string"
                                      },
                                      "width": {
                                        "default": 0,
                                        "description": "Width of user's uploaded photo.",
                                        "example": 480,
                                        "type": "integer"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            },
                            "privateProfile": {
                              "default": true,
                              "description": "Indicates if the user's profile is set to private.",
                              "example": false,
                              "type": "boolean"
                            },
                            "referralId": {
                              "description": "Response object containing the user's referral ID.",
                              "example": "u-7294631",
                              "type": "string"
                            },
                            "relationship": {
                              "description": "User's relationship status.",
                              "example": "self",
                              "type": "string"
                            },
                            "requests": {
                              "description": "User's requests for responses to API requests.",
                              "properties": {
                                "count": {
                                  "default": 0,
                                  "description": "Number of requests made by the user.",
                                  "example": 0,
                                  "type": "integer"
                                },
                                "description": "Object containing information about a user's requests."
                              },
                              "type": "object"
                            },
                            "state": {
                              "description": "Retrieve the state of the user who made the API request.",
                              "example": "",
                              "type": "string"
                            },
                            "tips": {
                              "description": "Array of tip objects containing tips written by the user.",
                              "properties": {
                                "count": {
                                  "default": 0,
                                  "description": "The total number of tips for the current user.",
                                  "example": 19,
                                  "type": "integer"
                                },
                                "description": "A user's tips from their profile."
                              },
                              "type": "object"
                            },
                            "type": {
                              "description": "Description of user type property.",
                              "example": "user",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "200"
          }
        },
        "security": [
          {
            "ManagedUserTokenAuth": []
          }
        ],
        "summary": "Get User Details",
        "tags": [
          "Users"
        ]
      }
    },
    "/users/self/activities": {
      "get": {
        "deprecated": false,
        "description": "A log of activities for the user whose `oauth_token` is provided.",
        "operationId": "get-user-activities",
        "parameters": [
          {
            "description": "The API version date as documented [here](/reference/versioning); e.g. 20231010",
            "in": "query",
            "name": "v",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The number of results to return, up to 200. Defaults to 100.",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"meta\": {\n    \"code\": 200,\n    \"requestId\": \"64272fa297675650355812cb\"\n  },\n  \"notifications\": [\n    {\n      \"type\": \"notificationTray\",\n      \"item\": {\n        \"unreadCount\": 0\n      }\n    },\n    {\n      \"type\": \"unconfirmed\",\n      \"item\": {\n        \"unreadCount\": 0\n      }\n    }\n  ],\n  \"response\": {\n    \"activities\": {\n      \"leadingMarker\": \"59b97e6cf79faa0d5e23abeb\",\n      \"trailingMarker\": \"4f71fbece4b0fb1e715d675c\",\n      \"moreData\": false,\n      \"buckets\": [],\n      \"count\": 9,\n      \"items\": [\n        {\n          \"createdAt\": 1505328748,\n          \"thumbnails\": [\n            {\n              \"id\": \"123456\",\n              \"type\": \"user\",\n              \"photo\": \"https://fastly.4sqi.net/img/user/110/blank_boy.png\"\n            }\n          ],\n          \"summary\": {\n            \"entities\": [\n              {\n                \"indices\": [\n                  0,\n                  11\n                ],\n                \"type\": \"user\",\n                \"id\": \"123456\"\n              },\n              {\n                \"indices\": [\n                  11,\n                  12\n                ],\n                \"type\": \"newline\"\n              },\n              {\n                \"indices\": [\n                  15,\n                  28\n                ],\n                \"type\": \"venue\",\n                \"id\": \"4f0de7267bebfc146005dcc0\"\n              }\n            ],\n            \"text\": \"John Smith at Mattlantis 🐳\"\n          },\n          \"type\": \"create\",\n          \"referralId\": \"c-59b97e6cf79faa0d5e23abeb*10\",\n          \"content\": {\n            \"type\": \"checkin\",\n            \"object\": {\n              \"id\": \"59b97e6cf79faa0d5e23abeb\",\n              \"createdAt\": 1505328748,\n              \"type\": \"checkin\",\n              \"private\": true,\n              \"visibility\": \"private\",\n              \"entities\": [],\n              \"shout\": \"Monday monday!\",\n              \"timeZoneOffset\": -240,\n              \"photos\": {\n                \"count\": 1,\n                \"items\": [\n                  {\n                    \"id\": \"59b97e6d270ee77dbf2b8aa0\",\n                    \"createdAt\": 1505328749,\n                    \"prefix\": \"https://fastly.4sqi.net/img/general/\",\n                    \"suffix\": \"/123456_KK8FbnS6sqgrlXgZeCwkYbSn2efiAQBoT7x4p_hteis.jpg\",\n                    \"width\": 1440,\n                    \"height\": 1920,\n                    \"user\": {\n                      \"id\": \"12345678\",\n                      \"firstName\": \"John\",\n                      \"lastName\": \"Smith\",\n                      \"gender\": \"male\",\n                      \"countryCode\": \"US\",\n                      \"relationship\": \"self\",\n                      \"photo\": {\n                        \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n                        \"suffix\": \"/blank_boy.png\"\n                      },\n                      \"isAnonymous\": false\n                    },                \n                    \"visibility\": \"private\"\n                  }\n                ],\n                \"layout\": {\n                  \"name\": \"single\"\n                }\n              },\n              \"user\": {\n                \"id\": \"123456\",\n                \"firstName\": \"John\",\n                \"lastName\": \"Smith\",\n                \"gender\": \"male\",\n                \"countryCode\": \"US\",\n                \"relationship\": \"self\",\n                \"photo\": {\n                  \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n                  \"suffix\": \"/blank_boy.png\",\n                  \"default\": true\n                },\n                \"isAnonymous\": false\n              },\n              \"posts\": {\n                \"count\": 0,\n                \"textCount\": 0\n              },\n              \"likes\": {\n                \"count\": 0,\n                \"groups\": []\n              },\n              \"like\": false,\n              \"venue\": {\n                \"id\": \"4f0de7267bebfc146005dcc0\",\n                \"name\": \"Mattlantis 🐳\",\n                \"contact\": {\n                  \"facebook\": \"122222194529429\"\n                },\n                \"location\": {\n                  \"address\": \"Lake Sakakawea\",\n                  \"lat\": 47.4992621650669,\n                  \"lng\": -101.9282341003418,\n                  \"labeledLatLngs\": [\n                    {\n                      \"label\": \"display\",\n                      \"lat\": 47.4992621650669,\n                      \"lng\": -101.9282341003418\n                    }\n                  ],\n                  \"postalCode\": \"58540\",\n                  \"cc\": \"US\",\n                  \"city\": \"Garrison\",\n                  \"state\": \"ND\",\n                  \"country\": \"United States\",\n                  \"contextLine\": \"Garrison, ND\",\n                  \"contextGeoId\": 72057594043617170,\n                  \"formattedAddress\": {\n                    \"text\": \"Lake Sakakawea\\nGarrison, ND 58540\",\n                    \"entities\": []\n                  }\n                },\n                \"categories\": [\n                  {\n                    \"id\": \"4bf58dd8d48988d161941735\",\n                    \"name\": \"Lake\",\n                    \"pluralName\": \"Lakes\",\n                    \"shortName\": \"Lake\",\n                    \"icon\": {\n                      \"prefix\": \"https://ss3.4sqi.net/img/categories_v2/parks_outdoors/lake_\",\n                      \"suffix\": \".png\"\n                    },\n                    \"primary\": true\n                  }\n                ],\n                \"verified\": true,\n                \"stats\": {\n                  \"tipCount\": 14,\n                  \"usersCount\": 1,\n                  \"checkinsCount\": 4\n                },\n                \"private\": true,\n                \"url\": \"http://foursquare.com/johnsmith\",\n                \"like\": false,\n                \"venueRatingBlacklisted\": true,\n                \"beenHere\": {\n                  \"lastCheckinExpiredAt\": 0\n                },\n                \"createdAt\": 1326311206\n              },\n              \"isMayor\": false\n            },\n            \"likeable\": true,\n            \"commentable\": true\n          }\n        },\n        {\n          \"createdAt\": 1505328682,\n          \"thumbnails\": [\n            {\n              \"id\": \"123456\",\n              \"type\": \"user\",\n              \"photo\": \"https://fastly.4sqi.net/img/user/110/blank_boy.png\"\n            }\n          ],\n          \"summary\": {\n            \"entities\": [\n              {\n                \"indices\": [\n                  0,\n                  11\n                ],\n                \"type\": \"user\",\n                \"id\": \"123456\"\n              },\n              {\n                \"indices\": [\n                  11,\n                  12\n                ],\n                \"type\": \"newline\"\n              },\n              {\n                \"indices\": [\n                  15,\n                  22\n                ],\n                \"type\": \"venue\",\n                \"id\": \"4f21c7e27beb6c5a9479b1d8\"\n              }\n            ],\n            \"text\": \"John Smith at Smarmia\"\n          },\n          \"type\": \"create\",\n          \"referralId\": \"c-59b97e2a0d173f01fd48252e*10\",\n          \"content\": {\n            \"type\": \"checkin\",\n            \"object\": {\n              \"id\": \"59b97e2a0d173f01fd48252e\",\n              \"createdAt\": 1505328682,\n              \"type\": \"checkin\",\n              \"timeZoneOffset\": -240,\n              \"photos\": {\n                \"count\": 1,\n                \"items\": [\n                  {\n                    \"id\": \"59b97e2c9cadd90e7e9d34d7\",\n                    \"createdAt\": 1505328684,\n                    \"prefix\": \"https://fastly.4sqi.net/img/general/\",\n                    \"suffix\": \"/123456_KwCujD9q6_WvkyCxFXePxehjhkDRCBo7QixqdLXK-ls.jpg\",\n                    \"width\": 1440,\n                    \"height\": 1920,\n                    \"user\": {\n                      \"id\": \"12345678\",\n                      \"firstName\": \"John\",\n                      \"lastName\": \"Smith\",\n                      \"gender\": \"male\",\n                      \"countryCode\": \"US\",\n                      \"relationship\": \"self\",\n                      \"photo\": {\n                        \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n                        \"suffix\": \"/blank_boy.png\"\n                      },\n                      \"isAnonymous\": false\n                    },  \n              \n                    \"visibility\": \"public\"\n                  }\n                ],\n                \"layout\": {\n                  \"name\": \"single\"\n                }\n              },\n              \"user\": {\n                \"id\": \"12345678\",\n                \"firstName\": \"John\",\n                \"lastName\": \"Smith\",\n                \"gender\": \"male\",\n                \"countryCode\": \"US\",\n                \"relationship\": \"self\",\n                \"photo\": {\n                  \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n                  \"suffix\": \"/blank_boy.png\"\n                },\n                \"isAnonymous\": false\n              },  \n        \n              \"posts\": {\n                \"count\": 0,\n                \"textCount\": 0\n              },\n              \"likes\": {\n                \"count\": 0,\n                \"groups\": []\n              },\n              \"like\": false,\n              \"venue\": {\n                \"id\": \"4f21c7e27beb6c5a9479b1d8\",\n                \"name\": \"Smarmia\",\n                \"contact\": {\n                  \"facebook\": \"122222194529429\"\n                },\n                \"location\": {\n                  \"address\": \"Briny Deep\",\n                  \"lat\": 53.46254514565835,\n                  \"lng\": -98.42561580240726,\n                  \"labeledLatLngs\": [\n                    {\n                      \"label\": \"display\",\n                      \"lat\": 53.46254514565835,\n                      \"lng\": -98.42561580240726\n                    }\n                  ],\n                  \"cc\": \"CA\",\n                  \"city\": \"Warren Landing\",\n                  \"state\": \"MB\",\n                  \"country\": \"Canada\",\n                  \"contextLine\": \"Warren Landing, Canada\",\n                  \"contextGeoId\": 72057594044104270,\n                  \"formattedAddress\": {\n                    \"text\": \"Briny Deep\\nWarren Landing MB\\nCanada\",\n                    \"entities\": []\n                  }\n                },\n                \"categories\": [\n                  {\n                    \"id\": \"4bf58dd8d48988d161941735\",\n                    \"name\": \"Lake\",\n                    \"pluralName\": \"Lakes\",\n                    \"shortName\": \"Lake\",\n                    \"icon\": {\n                      \"prefix\": \"https://ss3.4sqi.net/img/categories_v2/parks_outdoors/lake_\",\n                      \"suffix\": \".png\"\n                    },\n                    \"primary\": true\n                  }\n                ],\n                \"verified\": true,\n                \"stats\": {\n                  \"tipCount\": 15,\n                  \"usersCount\": 1,\n                  \"checkinsCount\": 3\n                },\n                \"url\": \"http://foursquare.com/johnsmith\",\n                \"like\": false,\n                \"venueRatingBlacklisted\": true,\n                \"beenHere\": {\n                  \"lastCheckinExpiredAt\": 0\n                },\n                \"createdAt\": 1327613922\n              },\n              \"isMayor\": false\n            },\n            \"likeable\": true,\n            \"commentable\": true\n          }\n        },\n        {\n          \"createdAt\": 1505328612,\n          \"thumbnails\": [\n            {\n              \"id\": \"123456\",\n              \"type\": \"user\",\n              \"photo\": \"https://fastly.4sqi.net/img/user/110/blank_boy.png\"\n            }\n          ],\n          \"summary\": {\n            \"entities\": [\n              {\n                \"indices\": [\n                  0,\n                  11\n                ],\n                \"type\": \"user\",\n                \"id\": \"123456\"\n              },\n              {\n                \"indices\": [\n                  11,\n                  12\n                ],\n                \"type\": \"newline\"\n              },\n              {\n                \"indices\": [\n                  15,\n                  24\n                ],\n                \"type\": \"venue\",\n                \"id\": \"59b97b3e3b4e0078378fd877\"\n              }\n            ],\n            \"text\": \"John Smith at Barbalota\"\n          },\n          \"type\": \"create\",\n          \"referralId\": \"c-59b97de4464d6562a1da973a*2\",\n          \"content\": {\n            \"type\": \"checkin\",\n            \"object\": {\n              \"id\": \"59b97de4464d6562a1da973a\",\n              \"createdAt\": 1505328612,\n              \"type\": \"checkin\",\n              \"timeZoneOffset\": -240,\n              \"photos\": {\n                \"count\": 0,\n                \"items\": []\n              },\n              \"user\": {\n                \"id\": \"12345678\",\n                \"firstName\": \"John\",\n                \"lastName\": \"Smith\",\n                \"gender\": \"male\",\n                \"countryCode\": \"US\",\n                \"relationship\": \"self\",\n                \"photo\": {\n                  \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n                  \"suffix\": \"/blank_boy.png\"\n                },\n                \"isAnonymous\": false\n              },  \n        \n              \"posts\": {\n                \"count\": 0,\n                \"textCount\": 0\n              },\n              \"likes\": {\n                \"count\": 0,\n                \"groups\": []\n              },\n              \"like\": false,\n              \"venue\": {\n                \"id\": \"59b97b3e3b4e0078378fd877\",\n                \"name\": \"Barbalota\",\n                \"contact\": {},\n                \"location\": {\n                  \"lat\": 47.5949473078459,\n                  \"lng\": -101.49440288543701,\n                  \"labeledLatLngs\": [\n                    {\n                      \"label\": \"display\",\n                      \"lat\": 47.5949473078459,\n                      \"lng\": -101.49440288543701\n                    }\n                  ],\n                  \"cc\": \"US\",\n                  \"state\": \"North Dakota\",\n                  \"country\": \"United States\",\n                  \"contextLine\": \"North Dakota\",\n                  \"contextGeoId\": 9151314443722711000,\n                  \"formattedAddress\": {\n                    \"text\": \"North Dakota\",\n                    \"entities\": []\n                  }\n                },\n                \"categories\": [\n                  {\n                    \"id\": \"4bf58dd8d48988d103941735\",\n                    \"name\": \"Home (private)\",\n                    \"pluralName\": \"Homes (private)\",\n                    \"shortName\": \"Home\",\n                    \"icon\": {\n                      \"prefix\": \"https://ss3.4sqi.net/img/categories_v2/building/home_\",\n                      \"suffix\": \".png\"\n                    },\n                    \"primary\": true\n                  }\n                ],\n                \"verified\": false,\n                \"stats\": {\n                  \"tipCount\": 0,\n                  \"usersCount\": 0,\n                  \"checkinsCount\": 0\n                },\n                \"private\": true,\n                \"like\": false,\n                \"venueRatingBlacklisted\": true,\n                \"beenHere\": {\n                  \"lastCheckinExpiredAt\": 0\n                },\n                \"createdAt\": 1505327934\n              },\n              \"isMayor\": false\n            },\n            \"likeable\": true,\n            \"commentable\": true\n          }\n        },\n        {\n          \"createdAt\": 1505328544,\n          \"thumbnails\": [\n            {\n              \"id\": \"123456\",\n              \"type\": \"user\",\n              \"photo\": \"https://fastly.4sqi.net/img//110/blank_boy.png\"\n            }\n          ],\n          \"summary\": {\n            \"entities\": [\n              {\n                \"indices\": [\n                  0,\n                  11\n                ],\n                \"type\": \"\",\n                \"id\": \"123456\"\n              },\n              {\n                \"indices\": [\n                  11,\n                  12\n                ],\n                \"type\": \"newline\"\n              },\n              {\n                \"indices\": [\n                  15,\n                  37\n                ],\n                \"type\": \"venue\",\n                \"id\": \"59b97cfa6adbf54afde7edba\"\n              }\n            ],\n            \"text\": \"John Smith at Bottom of Lake Montauk\"\n          },\n          \"type\": \"create\",\n          \"referralId\": \"c-59b97da0c0cacb1d7b172b14*10\",\n          \"content\": {\n            \"type\": \"checkin\",\n            \"object\": {\n              \"id\": \"59b97da0c0cacb1d7b172b14\",\n              \"createdAt\": 1505328544,\n              \"type\": \"checkin\",\n              \"private\": true,\n              \"visibility\": \"private\",\n              \"entities\": [],\n              \"shout\": \"sneaking\",\n              \"timeZoneOffset\": -240,\n              \"photos\": {\n                \"count\": 1,\n                \"items\": [\n                  {\n                    \"id\": \"59b97da25d891b2954e1ffb0\",\n                    \"createdAt\": 1505328546,\n                    \"prefix\": \"https://fastly.4sqi.net/img/general/\",\n                    \"suffix\": \"/123456_LbFUAXvkD0zwtYG8sL34oOxgoCsQ-hm6_4CSD1mHI2c.jpg\",\n                    \"width\": 1440,\n                    \"height\": 1920,\n                    \"\": {\n                      \"id\": \"12345678\",\n                      \"firstName\": \"John\",\n                      \"lastName\": \"Smith\",\n                      \"gender\": \"male\",\n                      \"countryCode\": \"US\",\n                      \"relationship\": \"self\",\n                      \"photo\": {\n                        \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n                        \"suffix\": \"/blank_boy.png\"\n                      },\n                    \"visibility\": \"private\"\n                  }\n                }\n                ],\n                \"layout\": {\n                  \"name\": \"single\"\n                }\n              },\n              \"user\": {\n                \"id\": \"12345678\",\n                \"firstName\": \"John\",\n                \"lastName\": \"Smith\",\n                \"gender\": \"male\",\n                \"countryCode\": \"US\",\n                \"relationship\": \"self\",\n                \"photo\": {\n                  \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n                  \"suffix\": \"/blank_boy.png\"\n                },\n              \"posts\": {\n                \"count\": 0,\n                \"textCount\": 0\n              },\n              \"likes\": {\n                \"count\": 0,\n                \"groups\": []\n              },\n              \"like\": false,\n              \"venue\": {\n                \"id\": \"59b97cfa6adbf54afde7edba\",\n                \"name\": \"Bottom of Lake Montauk\",\n                \"contact\": {},\n                \"location\": {\n                  \"lat\": 41.06190161780883,\n                  \"lng\": -71.9223403930664,\n                  \"labeledLatLngs\": [\n                    {\n                      \"label\": \"display\",\n                      \"lat\": 41.06190161780883,\n                      \"lng\": -71.9223403930664\n                    }\n                  ],\n                  \"cc\": \"US\",\n                  \"state\": \"New York\",\n                  \"country\": \"United States\",\n                  \"contextLine\": \"New York\",\n                  \"contextGeoId\": 9151314443246693000,\n                  \"formattedAddress\": {\n                    \"text\": \"New York\",\n                    \"entities\": []\n                  }\n                },\n                \"categories\": [\n                  {\n                    \"id\": \"4bf58dd8d48988d103941735\",\n                    \"name\": \"Home (private)\",\n                    \"pluralName\": \"Homes (private)\",\n                    \"shortName\": \"Home\",\n                    \"icon\": {\n                      \"prefix\": \"https://ss3.4sqi.net/img/categories_v2/building/home_\",\n                      \"suffix\": \".png\"\n                    },\n                    \"primary\": true\n                  }\n                ],\n                \"verified\": false,\n                \"stats\": {\n                  \"tipCount\": 0,\n                  \"usersCount\": 0,\n                  \"checkinsCount\": 0\n                },\n                \"private\": true,\n                \"like\": false,\n                \"venueRatingBlacklisted\": true,\n                \"beenHere\": {\n                  \"lastCheckinExpiredAt\": 0\n                },\n                \"createdAt\": 1505328378\n              },\n              \"isMayor\": false\n            },\n            \"likeable\": true,\n            \"commentable\": true\n          }\n        },\n        {\n          \"createdAt\": 1493240656,\n          \"thumbnails\": [\n            {\n              \"id\": \"123456\",\n              \"type\": \"user\",\n              \"photo\": \"https://fastly.4sqi.net/img/user/110/blank_boy.png\"\n            }\n          ],\n          \"summary\": {\n            \"entities\": [\n              {\n                \"indices\": [\n                  0,\n                  11\n                ],\n                \"type\": \"user\",\n                \"id\": \"123456\"\n              },\n              {\n                \"indices\": [\n                  11,\n                  12\n                ],\n                \"type\": \"newline\"\n              },\n              {\n                \"indices\": [\n                  15,\n                  19\n                ],\n                \"type\": \"venue\",\n                \"id\": \"4c374bf80a71c9b6f2893ec9\"\n              }\n            ],\n            \"text\": \"John Smith at SoHo\"\n          },\n          \"type\": \"create\",\n          \"referralId\": \"c-59010b5067a9fe733b6f5f11*2\",\n          \"content\": {\n            \"type\": \"checkin\",\n            \"object\": {\n              \"id\": \"59010b5067a9fe733b6f5f11\",\n              \"createdAt\": 1493240656,\n              \"type\": \"checkin\",\n              \"timeZoneOffset\": -240,\n              \"photos\": {\n                \"count\": 0,\n                \"items\": []\n              },\n              \"user\": {\n                \"id\": \"12345678\",\n                \"firstName\": \"John\",\n                \"lastName\": \"Smith\",\n                \"gender\": \"male\",\n                \"countryCode\": \"US\",\n                \"relationship\": \"self\",\n                \"photo\": {\n                  \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n                  \"suffix\": \"/blank_boy.png\"\n                },\n              \"posts\": {\n                \"count\": 0,\n                \"textCount\": 0\n              },\n              \"likes\": {\n                \"count\": 0,\n                \"groups\": []\n              },\n              \"like\": false,\n              \"venue\": {\n                \"id\": \"4c374bf80a71c9b6f2893ec9\",\n                \"name\": \"SoHo\",\n                \"contact\": {},\n                \"location\": {\n                  \"lat\": 40.72350233828193,\n                  \"lng\": -73.99875640869139,\n                  \"labeledLatLngs\": [\n                    {\n                      \"label\": \"display\",\n                      \"lat\": 40.72350233828193,\n                      \"lng\": -73.99875640869139\n                    }\n                  ],\n                  \"postalCode\": \"10012\",\n                  \"cc\": \"US\",\n                  \"city\": \"New York\",\n                  \"state\": \"NY\",\n                  \"country\": \"United States\",\n                  \"contextLine\": \"New York, NY\",\n                  \"contextGeoId\": 72057594043056510,\n                  \"formattedAddress\": {\n                    \"text\": \"New York, NY 10012\",\n                    \"entities\": []\n                  }\n                },\n                \"categories\": [\n                  {\n                    \"id\": \"4f2a25ac4b909258e854f55f\",\n                    \"name\": \"Neighborhood\",\n                    \"pluralName\": \"Neighborhoods\",\n                    \"shortName\": \"Neighborhood\",\n                    \"icon\": {\n                      \"prefix\": \"https://ss3.4sqi.net/img/categories_v2/parks_outdoors/neighborhood_\",\n                      \"suffix\": \".png\"\n                    },\n                    \"primary\": true\n                  }\n                ],\n                \"verified\": true,\n                \"stats\": {\n                  \"tipCount\": 146,\n                  \"usersCount\": 51041,\n                  \"checkinsCount\": 114305\n                },\n                \"url\": \"http://www.sohonyc.com\",\n                \"like\": false,\n                \"venueRatingBlacklisted\": true,\n                \"beenHere\": {\n                  \"lastCheckinExpiredAt\": 0\n                },\n                \"venuePage\": {\n                  \"id\": \"53600036\"\n                },\n                \"locked\": true,\n                \"createdAt\": 1278692344\n              },\n              \"isMayor\": false\n            },\n            \"likeable\": true,\n            \"commentable\": true\n          }\n        },\n        {\n          \"createdAt\": 1382133772,\n          \"thumbnails\": [\n            {\n              \"id\": \"123456\",\n              \"type\": \"user\",\n              \"photo\": \"https://fastly.4sqi.net/img/user/110/blank_boy.png\"\n            }\n          ],\n          \"summary\": {\n            \"entities\": [\n              {\n                \"indices\": [\n                  0,\n                  11\n                ],\n                \"type\": \"user\",\n                \"id\": \"123456\"\n              },\n              {\n                \"indices\": [\n                  11,\n                  12\n                ],\n                \"type\": \"newline\"\n              },\n              {\n                \"indices\": [\n                  15,\n                  22\n                ],\n                \"type\": \"venue\",\n                \"id\": \"4f21c7e27beb6c5a9479b1d8\"\n              }\n            ],\n            \"text\": \"John Smith at Smarmia\"\n          },\n          \"type\": \"create\",\n          \"referralId\": \"c-5261b00ce4b088dd611793e7*2\",\n          \"content\": {\n            \"type\": \"checkin\",\n            \"object\": {\n              \"id\": \"5261b00ce4b088dd611793e7\",\n              \"createdAt\": 1382133772,\n              \"type\": \"checkin\",\n              \"private\": true,\n              \"visibility\": \"private\",\n              \"entities\": [],\n              \"shout\": \"Where am I?\",\n              \"timeZoneOffset\": -300,\n              \"photos\": {\n                \"count\": 0,\n                \"items\": []\n              },\n              \"user\": {\n                \"id\": \"12345678\",\n                \"firstName\": \"John\",\n                \"lastName\": \"Smith\",\n                \"gender\": \"male\",\n                \"countryCode\": \"US\",\n                \"relationship\": \"self\",\n                \"photo\": {\n                  \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n                  \"suffix\": \"/blank_boy.png\"\n                },\n              \"posts\": {\n                \"count\": 0,\n                \"textCount\": 0\n              },\n              \"likes\": {\n                \"count\": 0,\n                \"groups\": []\n              },\n              \"like\": false,\n              \"venue\": {\n                \"id\": \"4f21c7e27beb6c5a9479b1d8\",\n                \"name\": \"Smarmia\",\n                \"contact\": {\n                  \"facebook\": \"122222194529429\"\n                },\n                \"location\": {\n                  \"address\": \"Briny Deep\",\n                  \"lat\": 53.46254514565835,\n                  \"lng\": -98.42561580240726,\n                  \"labeledLatLngs\": [\n                    {\n                      \"label\": \"display\",\n                      \"lat\": 53.46254514565835,\n                      \"lng\": -98.42561580240726\n                    }\n                  ],\n                  \"cc\": \"CA\",\n                  \"city\": \"Warren Landing\",\n                  \"state\": \"MB\",\n                  \"country\": \"Canada\",\n                  \"contextLine\": \"Warren Landing, Canada\",\n                  \"contextGeoId\": 72057594044104270,\n                  \"formattedAddress\": {\n                    \"text\": \"Briny Deep\\nWarren Landing MB\\nCanada\",\n                    \"entities\": []\n                  }\n                },\n                \"categories\": [\n                  {\n                    \"id\": \"4bf58dd8d48988d161941735\",\n                    \"name\": \"Lake\",\n                    \"pluralName\": \"Lakes\",\n                    \"shortName\": \"Lake\",\n                    \"icon\": {\n                      \"prefix\": \"https://ss3.4sqi.net/img/categories_v2/parks_outdoors/lake_\",\n                      \"suffix\": \".png\"\n                    },\n                    \"primary\": true\n                  }\n                ],\n                \"verified\": true,\n                \"stats\": {\n                  \"tipCount\": 15,\n                  \"usersCount\": 1,\n                  \"checkinsCount\": 3\n                },\n                \"url\": \"http://foursquare.com/johnsmith\",\n                \"like\": false,\n                \"venueRatingBlacklisted\": true,\n                \"beenHere\": {\n                  \"lastCheckinExpiredAt\": 0\n                },\n                \"createdAt\": 1327613922\n              },\n              \"isMayor\": false\n            },\n            \"likeable\": true,\n            \"commentable\": true\n          }\n        },\n        {\n          \"createdAt\": 1360988489,\n          \"thumbnails\": [\n            {\n              \"id\": \"123456\",\n              \"type\": \"user\",\n              \"photo\": \"https://fastly.4sqi.net/img/user/110/blank_boy.png\"\n            }\n          ],\n          \"summary\": {\n            \"entities\": [\n              {\n                \"indices\": [\n                  0,\n                  11\n                ],\n                \"type\": \"user\",\n                \"id\": \"123456\"\n              },\n              {\n                \"indices\": [\n                  11,\n                  12\n                ],\n                \"type\": \"newline\"\n              },\n              {\n                \"indices\": [\n                  15,\n                  43\n                ],\n                \"type\": \"venue\",\n                \"id\": \"49d79743f964a520385d1fe3\"\n              }\n            ],\n            \"text\": \"John Smith at Crunch Fitness - Polk Street\"\n          },\n          \"type\": \"create\",\n          \"referralId\": \"c-511f0949222f295dc50959d4*10\",\n          \"content\": {\n            \"type\": \"checkin\",\n            \"object\": {\n              \"id\": \"511f0949222f295dc50959d4\",\n              \"createdAt\": 1360988489,\n              \"type\": \"checkin\",\n              \"timeZoneOffset\": -480,\n              \"photos\": {\n                \"count\": 1,\n                \"items\": [\n                  {\n                    \"id\": \"511f094d222f295dc5095ba7\",\n                    \"createdAt\": 1360988493,\n                    \"prefix\": \"https://fastly.4sqi.net/img/general/\",\n                    \"suffix\": \"/123456_PxrhTnhtuZCp_G71LudxeelDEt3CWpofKyk56elRWYQ.jpg\",\n                    \"width\": 720,\n                    \"height\": 960,\n                    \"user\": {\n                      \"id\": \"12345678\",\n                      \"firstName\": \"John\",\n                      \"lastName\": \"Smith\",\n                      \"gender\": \"male\",\n                      \"countryCode\": \"US\",\n                      \"relationship\": \"self\",\n                      \"photo\": {\n                        \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n                        \"suffix\": \"/blank_boy.png\"\n                      },\n                    \"visibility\": \"public\"\n                  }\n                }\n                ],\n                \"layout\": {\n                  \"name\": \"single\"\n                }\n              },\n              \"user\": {\n                \"id\": \"12345678\",\n                \"firstName\": \"John\",\n                \"lastName\": \"Smith\",\n                \"gender\": \"male\",\n                \"countryCode\": \"US\",\n                \"relationship\": \"self\",\n                \"photo\": {\n                  \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n                  \"suffix\": \"/blank_boy.png\"\n                },\n              \"posts\": {\n                \"count\": 0,\n                \"textCount\": 0\n              },\n              \"likes\": {\n                \"count\": 0,\n                \"groups\": []\n              },\n              \"like\": false,\n              \"venue\": {\n                \"id\": \"49d79743f964a520385d1fe3\",\n                \"name\": \"Crunch Fitness - Polk Street\",\n                \"contact\": {\n                  \"phone\": \"4152925444\",\n                  \"formattedPhone\": \"(415) 292-5444\",\n                  \"twitter\": \"crunchgym\",\n                  \"facebook\": \"251419281543463\",\n                  \"facebookUsername\": \"CrunchPolkSt\",\n                  \"facebookName\": \"Crunch Fitness\"\n                },\n                \"location\": {\n                  \"address\": \"2330 Polk Street\",\n                  \"lat\": 37.79831883950535,\n                  \"lng\": -122.42200210690498,\n                  \"labeledLatLngs\": [\n                    {\n                      \"label\": \"display\",\n                      \"lat\": 37.79831883950535,\n                      \"lng\": -122.42200210690498\n                    }\n                  ],\n                  \"postalCode\": \"94109\",\n                  \"cc\": \"US\",\n                  \"neighborhood\": \"Polk Gulch\",\n                  \"city\": \"San Francisco\",\n                  \"state\": \"CA\",\n                  \"country\": \"United States\",\n                  \"contextLine\": \"San Francisco, CA\",\n                  \"contextGeoId\": 72057594043319890,\n                  \"formattedAddress\": {\n                    \"text\": \"2330 Polk Street\\nSan Francisco, CA 94109\",\n                    \"entities\": []\n                  }\n                },\n                \"categories\": [\n                  {\n                    \"id\": \"4bf58dd8d48988d175941735\",\n                    \"name\": \"Gym / Fitness Center\",\n                    \"pluralName\": \"Gyms or Fitness Centers\",\n                    \"shortName\": \"Gym / Fitness\",\n                    \"icon\": {\n                      \"prefix\": \"https://ss3.4sqi.net/img/categories_v2/building/gym_\",\n                      \"suffix\": \".png\"\n                    },\n                    \"primary\": true\n                  }\n                ],\n                \"verified\": true,\n                \"stats\": {\n                  \"tipCount\": 17,\n                  \"usersCount\": 1671,\n                  \"checkinsCount\": 27752\n                },\n                \"url\": \"https://www.crunch.com/locations/polk-st\",\n                \"hasMenu\": true,\n                \"like\": false,\n                \"menu\": {\n                  \"type\": \"Prices\",\n                  \"label\": \"Prices\",\n                  \"anchor\": \"View Prices\",\n                  \"url\": \"https://foursquare.com/v/crunch-fitness--polk-street/49d79743f964a520385d1fe3/menu\",\n                  \"mobileUrl\": \"https://foursquare.com/v/49d79743f964a520385d1fe3/device_menu\"\n                },\n                \"allowMenuUrlEdit\": true,\n                \"beenHere\": {\n                  \"lastCheckinExpiredAt\": 0\n                },\n                \"venuePage\": {\n                  \"id\": \"526734479\"\n                },\n                \"storeId\": \"Alhambra\",\n                \"createdAt\": 1238865731\n              },\n              \"isMayor\": false\n            },\n            \"likeable\": true,\n            \"commentable\": true\n          }\n        },\n        {\n          \"createdAt\": 1352514588,\n          \"thumbnails\": [\n            {\n              \"id\": \"123456\",\n              \"type\": \"user\",\n              \"photo\": \"https://fastly.4sqi.net/img/user/110/blank_boy.png\"\n            }\n          ],\n          \"summary\": {\n            \"entities\": [\n              {\n                \"indices\": [\n                  0,\n                  11\n                ],\n                \"type\": \"user\",\n                \"id\": \"123456\"\n              },\n              {\n                \"indices\": [\n                  11,\n                  12\n                ],\n                \"type\": \"newline\"\n              },\n              {\n                \"indices\": [\n                  15,\n                  33\n                ],\n                \"type\": \"venue\",\n                \"id\": \"4c6f67b434443704f02e215f\"\n              }\n            ],\n            \"text\": \"John Smith at McGruffs Crime Lab\"\n          },\n          \"type\": \"create\",\n          \"referralId\": \"c-509dbc1ce4b0c4d83ba7c99e*2\",\n          \"content\": {\n            \"type\": \"checkin\",\n            \"object\": {\n              \"id\": \"509dbc1ce4b0c4d83ba7c99e\",\n              \"createdAt\": 1352514588,\n              \"type\": \"checkin\",\n              \"timeZoneOffset\": -300,\n              \"photos\": {\n                \"count\": 0,\n                \"items\": []\n              },\n              \"user\": {\n                \"id\": \"12345678\",\n                \"firstName\": \"John\",\n                \"lastName\": \"Smith\",\n                \"gender\": \"male\",\n                \"countryCode\": \"US\",\n                \"relationship\": \"self\",\n                \"photo\": {\n                  \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n                  \"suffix\": \"/blank_boy.png\"\n                },\n              \"posts\": {\n                \"count\": 0,\n                \"textCount\": 0\n              },\n              \"likes\": {\n                \"count\": 0,\n                \"groups\": []\n              },\n              \"like\": false,\n              \"comments\": {\n                \"count\": 1,\n                \"items\": [\n                  {\n                    \"id\": \"509dbc40e4b078734839a690\",\n                    \"createdAt\": 1352514624,\n                    \"user\": {\n                      \"id\": \"12345678\",\n                      \"firstName\": \"John\",\n                      \"lastName\": \"Smith\",\n                      \"gender\": \"male\",\n                      \"countryCode\": \"US\",\n                      \"relationship\": \"self\",\n                      \"photo\": {\n                        \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n                        \"suffix\": \"/blank_boy.png\"\n                      },\n                      \"isAnonymous\": false\n                    },  \n                    \"text\": \"I'm commenting.\"\n                  }\n                ]\n              },\n              \"venue\": {\n                \"id\": \"4c6f67b434443704f02e215f\",\n                \"name\": \"McGruffs Crime Lab\",\n                \"contact\": {},\n                \"location\": {\n                  \"isFuzzed\": true,\n                  \"lat\": 40.690008376109326,\n                  \"lng\": -73.97712595918333,\n                  \"cc\": \"US\",\n                  \"neighborhood\": \"Fort Greene\",\n                  \"city\": \"Brooklyn\",\n                  \"state\": \"NY\",\n                  \"country\": \"United States\",\n                  \"contextLine\": \"Brooklyn, NY\",\n                  \"contextGeoId\": 72057594043038240,\n                  \"formattedAddress\": {\n                    \"text\": \"Lafayette\\nBrooklyn, NY 11217\",\n                    \"entities\": []\n                  }\n                },\n                \"categories\": [\n                  {\n                    \"id\": \"4bf58dd8d48988d103941735\",\n                    \"name\": \"Home (private)\",\n                    \"pluralName\": \"Homes (private)\",\n                    \"shortName\": \"Home\",\n                    \"icon\": {\n                      \"prefix\": \"https://ss3.4sqi.net/img/categories_v2/building/home_\",\n                      \"suffix\": \".png\"\n                    },\n                    \"primary\": true\n                  }\n                ],\n                \"verified\": true,\n                \"stats\": {\n                  \"tipCount\": 4,\n                  \"usersCount\": 22,\n                  \"checkinsCount\": 364\n                },\n                \"like\": false,\n                \"venueRatingBlacklisted\": true,\n                \"beenHere\": {\n                  \"lastCheckinExpiredAt\": 0\n                },\n                \"venuePage\": {\n                  \"id\": \"32779395\"\n                },\n                \"createdAt\": 1282369460\n              },\n              \"isMayor\": false\n            },\n            \"likeable\": true,\n            \"commentable\": true\n          }\n        },\n        {\n          \"createdAt\": 1332870124,\n          \"thumbnails\": [\n            {\n              \"id\": \"123456\",\n              \"type\": \"user\",\n              \"photo\": \"https://fastly.4sqi.net/img/user/110/blank_boy.png\"\n            }\n          ],\n          \"summary\": {\n            \"entities\": [\n              {\n                \"indices\": [\n                  0,\n                  11\n                ],\n                \"type\": \"user\",\n                \"id\": \"123456\"\n              },\n              {\n                \"indices\": [\n                  11,\n                  12\n                ],\n                \"type\": \"newline\"\n              },\n              {\n                \"indices\": [\n                  15,\n                  33\n                ],\n                \"type\": \"venue\",\n                \"id\": \"4c6f67b434443704f02e215f\"\n              }\n            ],\n            \"text\": \"John Smith at McGruffs Crime Lab\"\n          },\n          \"type\": \"create\",\n          \"referralId\": \"c-4f71fbece4b0fb1e715d675c*2\",\n          \"content\": {\n            \"type\": \"checkin\",\n            \"object\": {\n              \"id\": \"4f71fbece4b0fb1e715d675c\",\n              \"createdAt\": 1332870124,\n              \"type\": \"checkin\",\n              \"entities\": [],\n              \"shout\": \"Test\",\n              \"timeZoneOffset\": -240,\n              \"photos\": {\n                \"count\": 0,\n                \"items\": []\n              },\n              \"user\": {\n                \"id\": \"12345678\",\n                \"firstName\": \"John\",\n                \"lastName\": \"Smith\",\n                \"gender\": \"male\",\n                \"countryCode\": \"US\",\n                \"relationship\": \"self\",\n                \"photo\": {\n                  \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n                  \"suffix\": \"/blank_boy.png\"\n                },\n                \"isAnonymous\": false\n              },  \n              \"posts\": {\n                \"count\": 0,\n                \"textCount\": 0\n              },\n              \"likes\": {\n                \"count\": 0,\n                \"groups\": []\n              },\n              \"like\": false,\n              \"venue\": {\n                \"id\": \"4c6f67b434443704f02e215f\",\n                \"name\": \"McGruffs Crime Lab\",\n                \"contact\": {},\n                \"location\": {\n                  \"isFuzzed\": true,\n                  \"lat\": 40.690008376109326,\n                  \"lng\": -73.97712595918333,\n                  \"cc\": \"US\",\n                  \"neighborhood\": \"Fort Greene\",\n                  \"city\": \"Brooklyn\",\n                  \"state\": \"NY\",\n                  \"country\": \"United States\",\n                  \"contextLine\": \"Brooklyn, NY\",\n                  \"contextGeoId\": 72057594043038240,\n                  \"formattedAddress\": {\n                    \"text\": \"Lafayette\\nBrooklyn, NY 11217\",\n                    \"entities\": []\n                  }\n                },\n                \"categories\": [\n                  {\n                    \"id\": \"4bf58dd8d48988d103941735\",\n                    \"name\": \"Home (private)\",\n                    \"pluralName\": \"Homes (private)\",\n                    \"shortName\": \"Home\",\n                    \"icon\": {\n                      \"prefix\": \"https://ss3.4sqi.net/img/categories_v2/building/home_\",\n                      \"suffix\": \".png\"\n                    },\n                    \"primary\": true\n                  }\n                ],\n                \"verified\": true,\n                \"stats\": {\n                  \"tipCount\": 4,\n                  \"usersCount\": 22,\n                  \"checkinsCount\": 364\n                },\n                \"like\": false,\n                \"venueRatingBlacklisted\": true,\n                \"beenHere\": {\n                  \"lastCheckinExpiredAt\": 0\n                },\n                \"venuePage\": {\n                  \"id\": \"32779395\"\n                },\n                \"createdAt\": 1282369460\n              },\n              \"isMayor\": false\n            },\n            \"likeable\": true,\n            \"commentable\": true\n          }\n        }\n      ]\n    }\n  }\n}"
                  }
                }
              }
            },
            "description": "200"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "description": "The metadata, status code, and unique identifier for an API request response with a 400 error.",
                  "properties": {
                    "description": "Response object containing information about the user's activities, potentially indicating a bad request (400)."
                  },
                  "type": "object"
                }
              }
            },
            "description": "400"
          }
        },
        "security": [
          {
            "ManagedUserTokenAuth": []
          }
        ],
        "summary": "Get User Activities",
        "tags": [
          "Users"
        ]
      }
    },
    "/users/self/checkins": {
      "get": {
        "deprecated": false,
        "description": "Get the history of checkins for the user whose `oauth_token` is provided.",
        "operationId": "get-user-checkins",
        "parameters": [
          {
            "description": "The API version date as documented [here](/reference/versioning); e.g. 20231010",
            "in": "query",
            "name": "v",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The number of results to return, up to 250; defaults to 20.",
            "in": "query",
            "name": "limit",
            "required": true,
            "schema": {
              "type": "int32"
            }
          },
          {
            "description": "The offset of the item at which to begin the response for pagination; defaults to 0 with no max.",
            "in": "query",
            "name": "offset",
            "required": true,
            "schema": {
              "type": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"meta\": {\n    \"code\": 200,\n    \"requestId\": \"652465e6d1f2933441255424\"\n  },\n  \"notifications\": [\n    {\n      \"type\": \"notificationTray\",\n      \"item\": {\n        \"unreadCount\": 0\n      }\n    },\n    {\n      \"type\": \"unconfirmed\",\n      \"item\": {\n        \"unreadCount\": 0\n      }\n    }\n  ],\n  \"response\": {\n    \"checkins\": {\n      \"count\": 3,\n      \"items\": [\n        {\n          \"id\": \"59b97e6cf79faa0d5e23abeb\",\n          \"createdAt\": 1505328748,\n          \"type\": \"checkin\",\n          \"private\": true,\n          \"visibility\": \"private\",\n          \"entities\": [],\n          \"shout\": \"Monday monday!\",\n          \"timeZoneOffset\": -240,\n          \"venue\": {\n            \"id\": \"4f0de7267bebfc146005dcc0\",\n            \"name\": \"Mattlantis 🐳\"},\n          \"likes\": {\n            \"count\": 0,\n            \"groups\": []\n          },\n          \"like\": false,\n          \"isMayor\": false,\n          \"photos\": {\n            \"count\": 1,\n            \"items\": [\n              {\n                \"id\": \"59b97e6d270ee77dbf2b8aa0\",\n                \"createdAt\": 1505328749,\n                \"source\": {\n                  \"name\": \"Swarm for iOS\",\n                  \"url\": \"https://www.swarmapp.com\"\n                },\n                \"prefix\": \"https://fastly.4sqi.net/img/general/\",\n                \"suffix\": \"/7294631_KK8FbnS6sqgrlXgZeCwkYbSn2efiAQBoT7x4p_hteis.jpg\",\n                \"width\": 1440,\n                \"height\": 1920,\n                \"user\": {\n                  \"id\": \"123456\",\n                  \"firstName\": \"John\",\n                  \"lastName\": \"Smith\",\n                  \"handle\": \"johnsmith\",\n                  \"privateProfile\": false,\n                  \"gender\": \"male\",\n                  \"countryCode\": \"US\",\n                  \"relationship\": \"self\",\n                  \"photo\": {\n                    \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n                    \"suffix\": \"/blank_boy.png\",\n                    \"default\": true\n                  },\n                  \"birthday\": 19700101,\n                  \"isAnonymous\": false\n                },\n                \"visibility\": \"private\"\n              }\n            ],\n            \"layout\": {\n              \"name\": \"single\"\n            }\n          },\n          \"posts\": {\n            \"count\": 0,\n            \"textCount\": 0\n          },\n          \"comments\": {\n            \"count\": 0\n          },\n          \"source\": {\n            \"name\": \"Swarm for iOS\",\n            \"url\": \"https://www.swarmapp.com\"\n          }\n        },\n        {\n          \"id\": \"59b97e2a0d173f01fd48252e\",\n          \"createdAt\": 1505328682,\n          \"type\": \"checkin\",\n          \"timeZoneOffset\": -240,\n          \"venue\": {\n            \"id\": \"4f21c7e27beb6c5a9479b1d8\",\n            \"name\": \"Smarmia\"},\n          \"likes\": {\n            \"count\": 0,\n            \"groups\": []\n          },\n          \"like\": false,\n          \"isMayor\": false,\n          \"photos\": {\n            \"count\": 1,\n            \"items\": [\n              {\n                \"id\": \"59b97e2c9cadd90e7e9d34d7\",\n                \"createdAt\": 1505328684,\n                \"source\": {\n                  \"name\": \"Swarm for iOS\",\n                  \"url\": \"https://www.swarmapp.com\"\n                },\n                \"prefix\": \"https://fastly.4sqi.net/img/general/\",\n                \"suffix\": \"/7294631_KwCujD9q6_WvkyCxFXePxehjhkDRCBo7QixqdLXK-ls.jpg\",\n                \"width\": 1440,\n                \"height\": 1920,\n                \"user\": {\n                  \"id\": \"123456\",\n                  \"firstName\": \"John\",\n                  \"lastName\": \"Smith\",\n                  \"handle\": \"johnsmith\",\n                  \"privateProfile\": false,\n                  \"gender\": \"male\",\n                  \"countryCode\": \"US\",\n                  \"relationship\": \"self\",\n                  \"photo\": {\n                    \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n                    \"suffix\": \"/blank_boy.png\",\n                    \"default\": true\n                  },\n                  \"birthday\": 19700101,\n                  \"isAnonymous\": false\n                },\n                \"visibility\": \"public\"\n              }\n            ],\n            \"layout\": {\n              \"name\": \"single\"\n            }\n          },\n          \"posts\": {\n            \"count\": 0,\n            \"textCount\": 0\n          },\n          \"comments\": {\n            \"count\": 0\n          },\n          \"source\": {\n            \"name\": \"Swarm for iOS\",\n            \"url\": \"https://www.swarmapp.com\"\n          }\n        },\n        {\n          \"id\": \"59b97de4464d6562a1da973a\",\n          \"createdAt\": 1505328612,\n          \"type\": \"checkin\",\n          \"timeZoneOffset\": -240,\n          \"venue\": {\n            \"id\": \"59b97b3e3b4e0078378fd877\",\n            \"name\": \"Barbalota\"},\n          \"likes\": {\n            \"count\": 0,\n            \"groups\": []\n          },\n          \"like\": false,\n          \"isMayor\": false,\n          \"photos\": {\n            \"count\": 0,\n            \"items\": []\n          },\n          \"posts\": {\n            \"count\": 0,\n            \"textCount\": 0\n          },\n          \"comments\": {\n            \"count\": 0\n          },\n          \"source\": {\n            \"name\": \"Swarm for iOS\",\n            \"url\": \"https://www.swarmapp.com\"\n          }\n        },\n        {\n          \"id\": \"59b97da0c0cacb1d7b172b14\",\n          \"createdAt\": 1505328544,\n          \"type\": \"checkin\",\n          \"private\": true,\n          \"visibility\": \"private\",\n          \"entities\": [],\n          \"shout\": \"sneaking\",\n          \"timeZoneOffset\": -240,\n          \"venue\": {\n            \"id\": \"59b97cfa6adbf54afde7edba\",\n            \"name\": \"Bottom of Lake Montauk\"},\n          \"likes\": {\n            \"count\": 0,\n            \"groups\": []\n          },\n          \"like\": false,\n          \"isMayor\": false,\n          \"photos\": {\n            \"count\": 1,\n            \"items\": [\n              {\n                \"id\": \"59b97da25d891b2954e1ffb0\",\n                \"createdAt\": 1505328546,\n                \"source\": {\n                  \"name\": \"Swarm for iOS\",\n                  \"url\": \"https://www.swarmapp.com\"\n                },\n                \"prefix\": \"https://fastly.4sqi.net/img/general/\",\n                \"suffix\": \"/7294631_LbFUAXvkD0zwtYG8sL34oOxgoCsQ-hm6_4CSD1mHI2c.jpg\",\n                \"width\": 1440,\n                \"height\": 1920,\n                \"user\": {\n                  \"id\": \"123456\",\n                  \"firstName\": \"John\",\n                  \"lastName\": \"Smith\",\n                  \"handle\": \"johnsmith\",\n                  \"privateProfile\": false,\n                  \"gender\": \"male\",\n                  \"countryCode\": \"US\",\n                  \"relationship\": \"self\",\n                  \"photo\": {\n                    \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n                    \"suffix\": \"/blank_boy.png\",\n                    \"default\": true\n                  },\n                  \"birthday\": 19700101,\n                  \"isAnonymous\": false\n                },\n                \"visibility\": \"private\"\n              }\n            ],\n            \"layout\": {\n              \"name\": \"single\"\n            }\n          },\n          \"posts\": {\n            \"count\": 0,\n            \"textCount\": 0\n          },\n          \"comments\": {\n            \"count\": 0\n          },\n          \"source\": {\n            \"name\": \"Swarm for iOS\",\n            \"url\": \"https://www.swarmapp.com\"\n          }\n        }\n      ]\n    }\n  }\n}"
                  }
                },
                "schema": {
                  "description": "Success response containing retrieved check-in data for the authenticated user.",
                  "properties": {
                    "description": "Properties of successful check-in responses for a user's own check-ins.",
                    "meta": {
                      "description": "Metadata object containing additional information about the response.",
                      "properties": {
                        "code": {
                          "default": 0,
                          "description": "Status code for successful response from the 'checkins.get' endpoint for the current user.",
                          "example": 200,
                          "type": "integer"
                        },
                        "description": "Metadata object containing additional information about the successful check-in request.",
                        "requestId": {
                          "description": "The unique identifier for the API request.",
                          "example": "652465e6d1f2933441255424",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "notifications": {
                      "description": "Array of notification objects containing information about the user's check-ins.",
                      "items": {
                        "description": "Response object containing an array of notification objects for the authenticated user's check-ins.",
                        "properties": {
                          "description": "Array of notification objects for the current user's check-ins.",
                          "item": {
                            "description": "Array of notification objects containing information about unread items in the user's check-in responses.",
                            "properties": {
                              "description": "Response object containing notifications associated with a user's check-ins.",
                              "unreadCount": {
                                "default": 0,
                                "description": "Number of unread items in a user's notifications.",
                                "example": 0,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": {
                            "description": "Array of notification types for the user's check-ins response.",
                            "example": "notificationTray",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "response": {
                      "description": "Response object containing the retrieved data for check-ins made by the user.",
                      "properties": {
                        "checkins": {
                          "description": "An array of check-in objects containing information about the user's past check-ins.",
                          "properties": {
                            "count": {
                              "default": 0,
                              "description": "Total number of check-ins for the authenticated user.",
                              "example": 23,
                              "type": "integer"
                            },
                            "description": "Object containing information about a user's check-ins.",
                            "items": {
                              "description": "Array of check-in objects containing information about the user's past check-ins.",
                              "items": {
                                "description": "Array of check-in objects from the user's self check-in history.",
                                "properties": {
                                  "comments": {
                                    "description": "Array of comment objects containing additional information about the comments associated with the user's check-ins.",
                                    "properties": {
                                      "count": {
                                        "default": 0,
                                        "description": "Total number of comments on the user's check-ins. ",
                                        "example": 0,
                                        "type": "integer"
                                      },
                                      "description": "Array of comment objects containing information about the comments on the user's check-ins."
                                    },
                                    "type": "object"
                                  },
                                  "createdAt": {
                                    "default": 0,
                                    "description": "Timestamp for the creation date of a check-in made by the authenticated user; UNIX timestamp in seconds since Epoch.",
                                    "example": 1505328748,
                                    "type": "integer"
                                  },
                                  "description": "Array of check-in objects containing information about the user's past check-ins.",
                                  "entities": {
                                    "description": "Properties of entities within check-ins.",
                                    "type": "array"
                                  },
                                  "id": {
                                    "description": "Response object containing the retrieved check-in data, with a unique identifier for each check-in.",
                                    "example": "59b97e6cf79faa0d5e23abeb",
                                    "type": "string"
                                  },
                                  "isMayor": {
                                    "default": true,
                                    "description": "Flag indicating if the user is the mayor of the venue associated with the check-in.",
                                    "example": false,
                                    "type": "boolean"
                                  },
                                  "like": {
                                    "default": true,
                                    "description": "Whether the user has liked the check-in items in the response.",
                                    "example": false,
                                    "type": "boolean"
                                  },
                                  "likes": {
                                    "description": "User's recent check-ins, including information about likes.",
                                    "properties": {
                                      "count": {
                                        "default": 0,
                                        "description": "Number of likes for each check-in made by the current user.",
                                        "example": 0,
                                        "type": "integer"
                                      },
                                      "description": "An array of check-ins with associated likes for the current user.",
                                      "groups": {
                                        "description": "Array of groups that have liked the check-in items within the user's check-ins response.",
                                        "type": "array"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "photos": {
                                    "description": "Array of photos associated with the user's check-ins.",
                                    "properties": {
                                      "count": {
                                        "default": 0,
                                        "description": "Total number of photos in the user's check-in response.",
                                        "example": 1,
                                        "type": "integer"
                                      },
                                      "description": "Array of photo objects associated with the user's check-ins.",
                                      "items": {
                                        "description": "Array of photos associated with the user's check-ins.",
                                        "items": {
                                          "description": " \"An array of photos associated with the user's check-ins.",
                                          "properties": {
                                            "createdAt": {
                                              "default": 0,
                                              "description": "Timestamp indicating when the photo was created; UNIX timestamp in seconds since Epoch.",
                                              "example": 1505328749,
                                              "type": "integer"
                                            },
                                            "description": "Array of photos associated with the user's check-ins.",
                                            "height": {
                                              "default": 0,
                                              "description": "Height in pixels of photos associated with check-ins made by the user.",
                                              "example": 1920,
                                              "type": "integer"
                                            },
                                            "id": {
                                              "description": "Unique identifier for the photo associated with a check-in.",
                                              "example": "59b97e6d270ee77dbf2b8aa0",
                                              "type": "string"
                                            },
                                            "prefix": {
                                              "description": "URL prefix for the most recent check-ins made by the authenticated user.",
                                              "example": "https://fastly.4sqi.net/img/general/",
                                              "type": "string"
                                            },
                                            "source": {
                                              "description": "Array of photo objects containing information about the source of each photo associated with the user's check-ins.",
                                              "properties": {
                                                "description": "Array of photo objects from the user's check-ins, including source information.",
                                                "name": {
                                                  "description": "Response containing photo sources for a user's check-in history.",
                                                  "example": "Swarm for iOS",
                                                  "type": "string"
                                                },
                                                "url": {
                                                  "description": "Array of photo objects containing the source URL for the user's check-in photos.",
                                                  "example": "https://www.swarmapp.com",
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "suffix": {
                                              "description": "URL suffixes for photos associated with a user's check-ins.",
                                              "example": "/7294631_KK8FbnS6sqgrlXgZeCwkYbSn2efiAQBoT7x4p_hteis.jpg",
                                              "type": "string"
                                            },
                                            "user": {
                                              "description": "List of user's recent check-ins, including associated photos, with information about the user who uploaded each photo.",
                                              "properties": {
                                                "birthday": {
                                                  "default": 0,
                                                  "description": "Birthday of the user who uploaded the photo associated with the check-in at this venue.",
                                                  "example": 19700101,
                                                  "type": "integer"
                                                },
                                                "countryCode": {
                                                  "description": "Response containing a list of check-in photos with associated user country codes.",
                                                  "example": "US",
                                                  "type": "string"
                                                },
                                                "description": "Array of photo objects from the user's check-ins.",
                                                "firstName": {
                                                  "description": "The user's first name.",
                                                  "example": "John",
                                                  "type": "string"
                                                },
                                                "gender": {
                                                  "description": "Gender information for photos associated with user check-ins.",
                                                  "example": "male",
                                                  "type": "string"
                                                },
                                                "handle": {
                                                  "description": "The handle of a user's check-in photos.",
                                                  "example": "johnsmith",
                                                  "type": "string"
                                                },
                                                "id": {
                                                  "description": "Unique identifier for the user who uploaded the photo in the response from a successful request for self check-in data.",
                                                  "example": "123456",
                                                  "type": "string"
                                                },
                                                "isAnonymous": {
                                                  "default": true,
                                                  "description": "Flag indicating if the user is anonymous when retrieving check-in photos for the current user.",
                                                  "example": false,
                                                  "type": "boolean"
                                                },
                                                "lastName": {
                                                  "description": "Response containing user's last name for photos associated with check-ins retrieved from the current user's feed.",
                                                  "example": "Smith",
                                                  "type": "string"
                                                },
                                                "photo": {
                                                  "description": "User's photo associated with a check-in from the response of a successful request for the logged-in user's check-ins, with additional information about the photo and the user who uploaded it.",
                                                  "properties": {
                                                    "default": {
                                                      "default": true,
                                                      "description": "Response containing information about photos associated with a user's check-ins.",
                                                      "example": true,
                                                      "type": "boolean"
                                                    },
                                                    "description": "Array of user profile photos associated with the check-ins retrieved for the authenticated user.",
                                                    "prefix": {
                                                      "description": "URL prefix.",
                                                      "example": "https://fastly.4sqi.net/img/user/",
                                                      "type": "string"
                                                    },
                                                    "suffix": {
                                                      "description": "URL suffix.",
                                                      "example": "/blank_boy.png",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "type": "object"
                                                },
                                                "privateProfile": {
                                                  "default": true,
                                                  "description": "Indicates if the user's profile is private for photos associated with their check-ins.",
                                                  "example": false,
                                                  "type": "boolean"
                                                },
                                                "relationship": {
                                                  "description": "User check-in photos and their associated user relationship information.",
                                                  "example": "self",
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "visibility": {
                                              "description": "The visibility of the user's check-in photos.",
                                              "example": "private",
                                              "type": "string"
                                            },
                                            "width": {
                                              "default": 0,
                                              "description": "Width of photos associated with check-ins made by the user.",
                                              "example": 1440,
                                              "type": "integer"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "type": "array"
                                      },
                                      "layout": {
                                        "description": "Layout of photos associated with the check-ins retrieved for the current user.",
                                        "properties": {
                                          "description": "Response object containing photos associated with the user's check-ins.\n\nResponse object containing photos associated with the user's check-ins.",
                                          "name": {
                                            "description": "Response object containing the layout name for the photos of the user's check-ins.",
                                            "example": "single",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "posts": {
                                    "description": "Array of post objects containing information about the user's check-ins.",
                                    "properties": {
                                      "count": {
                                        "default": 0,
                                        "description": "Number of posts associated with each check-in made by the current user.",
                                        "example": 0,
                                        "type": "integer"
                                      },
                                      "description": "Array of posts associated with the user's check-ins.",
                                      "textCount": {
                                        "default": 0,
                                        "description": "Total number of characters in the text of posts associated with check-ins for the user.",
                                        "example": 0,
                                        "type": "integer"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "private": {
                                    "default": true,
                                    "description": "Array of private check-in objects for the authenticated user.",
                                    "example": true,
                                    "type": "boolean"
                                  },
                                  "shout": {
                                    "description": "The shout (comment) associated with each.",
                                    "example": "Monday monday!",
                                    "type": "string"
                                  },
                                  "source": {
                                    "description": "Response object containing the retrieved data for the check-in items, including the source of the check-ins.",
                                    "properties": {
                                      "description": "Array of check-in source objects for the authenticated user's check-ins.",
                                      "name": {
                                        "description": "The source for the self user's check-ins.",
                                        "example": "Swarm for iOS",
                                        "type": "string"
                                      },
                                      "url": {
                                        "description": "Response object containing the retrieved check-ins with URLs for the source of each check-in item.",
                                        "example": "https://www.swarmapp.com",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "timeZoneOffset": {
                                    "default": 0,
                                    "description": "Time zone offset for check-ins associated with the current user.",
                                    "example": -240,
                                    "type": "integer"
                                  },
                                  "type": {
                                    "description": "Response object containing an array of check-in objects, each with a type property.",
                                    "example": "checkin",
                                    "type": "string"
                                  },
                                  "venue": {
                                    "description": "Array of venue objects for the user's recent check-ins at this location.",
                                    "properties": {
                                      "description": "Array of venue objects for the user's check-in history.",
                                      "id": {
                                        "description": "IDs of venues associated with check-ins from the current user's account.",
                                        "example": "4f0de7267bebfc146005dcc0",
                                        "type": "string"
                                      },
                                      "name": {
                                        "description": "The name of the venue for each check-in.",
                                        "example": "Mattlantis 🐳",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "visibility": {
                                    "description": "Response object containing the visibility of the user's check-ins.",
                                    "example": "private",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "description": "Array of check-in objects containing information about the user's check-ins."
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "200"
          }
        },
        "security": [
          {
            "ManagedUserTokenAuth": []
          }
        ],
        "summary": "Get User Checkins",
        "tags": [
          "Users"
        ]
      }
    },
    "/users/self/lists": {
      "get": {
        "deprecated": false,
        "description": "Get lists for the user whose `oauth_token` is provided.",
        "operationId": "get-user-lists",
        "parameters": [
          {
            "description": "The API version date as documented [here](/reference/versioning); e.g. 20231010",
            "in": "query",
            "name": "v",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "can be `created` (lists created by this user), `edited` (other people's lists this user has edited), `followed` (lists this user follows), `friends` (lists from this user's friends), and `suggested` (lists relevant to the user's current location).",
            "in": "query",
            "name": "group",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The latitude/longitude around which to retrieve place information. This must be specified as latitude,longitude (e.g., ll=41.8781,-87.6298). Required in order to receive the `suggested` group.",
            "in": "query",
            "name": "ll",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Number of results to return, up to 200.",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The number of results to skip. Used to page through results.",
            "in": "query",
            "name": "offset",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"meta\": {\n    \"code\": 200,\n    \"requestId\": \"652464754421613d6b31c618\"\n  },\n  \"notifications\": [\n    {\n      \"type\": \"notificationTray\",\n      \"item\": {\n        \"unreadCount\": 3\n      }\n    },\n    {\n      \"type\": \"unconfirmed\",\n      \"item\": {\n        \"unreadCount\": 0\n      }\n    }\n  ],\n  \"response\": {\n    \"lists\": {\n      \"count\": 3,\n      \"groups\": [\n        {\n          \"type\": \"yours\",\n          \"name\": \"Your Places\",\n          \"count\": 2,\n          \"items\": [\n            {\n              \"id\": \"12345678/todos\",\n              \"name\": \"My Saved Places\",\n              \"description\": \"\",\n              \"placesSummary\": \"Carleton Farm, Lake Stevens\",\n              \"type\": \"todos\",\n              \"user\": {\n                \"id\": \"123456\",\n                \"firstName\": \"John\",\n                \"lastName\": \"Smith\",\n                \"handle\": \"johnsmith\",\n                \"privateProfile\": false,\n                \"gender\": \"male\",\n                \"address\": \"\",\n                \"city\": \"\",\n                \"state\": \"\",\n                \"countryCode\": \"US\",\n                \"relationship\": \"self\",\n                \"photo\": {\n                  \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n                  \"suffix\": \"/blank_boy.png\",\n                  \"default\": true\n                },\n                \"birthday\": 19700101,\n                \"isAnonymous\": false\n              },\n              \"editable\": true,\n              \"public\": true,\n              \"collaborative\": false,\n              \"url\": \"/johnsmith/list/todos\",\n              \"canonicalUrl\": \"https://foursquare.com/johnsmith/list/todos\",\n              \"updatedAt\": 1679427002,\n              \"listItems\": {\n                \"count\": 2\n              },\n              \"photos\": {\n                \"count\": 2,\n                \"groups\": [\n                  {\n                    \"type\": \"venue\",\n                    \"name\": \"Venue photos\",\n                    \"count\": 2,\n                    \"items\": [\n                      {\n                        \"id\": \"525b139e11d205d46552f414\",\n                        \"createdAt\": 1381700510,\n                        \"prefix\": \"https://fastly.4sqi.net/img/general/\",\n                        \"suffix\": \"/61734_4kMJsSWy_r5OJ1ZKztfIAwNDaHNrLKvG6qUAOfLxoFc.jpg\",\n                        \"width\": 960,\n                        \"height\": 720,\n                        \"user\": {\n                          \"id\": \"61734\",\n                          \"firstName\": \"Kayla\",\n                          \"lastName\": \"Pdot\",\n                          \"handle\": \"kaylap2353356\",\n                          \"privateProfile\": false,\n                          \"gender\": \"female\",\n                          \"countryCode\": \"US\",\n                          \"followingRelationship\": \"none\",\n                          \"photo\": {\n                            \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n                            \"suffix\": \"/IXT03VXSG50F14ZV.jpg\"\n                          },\n                          \"isAnonymous\": false\n                        },\n                        \"visibility\": \"public\"\n                      },\n                      {\n                        \"id\": \"61468859ce6e2f4782b3118f\",\n                        \"createdAt\": 1632012377,\n                        \"prefix\": \"https://fastly.4sqi.net/img/general/\",\n                        \"suffix\": \"/28408559_77UU-A_VPjZiEUw3bDBcA878VDKrDFOlb80mSwwJ3dQ.jpg\",\n                        \"width\": 1280,\n                        \"height\": 1280,\n                        \"user\": {\n                          \"id\": \"28408559\",\n                          \"firstName\": \"Adam\",\n                          \"lastName\": \"DeBruler\",\n                          \"handle\": \"adamd3321588\",\n                          \"privateProfile\": false,\n                          \"gender\": \"male\",\n                          \"countryCode\": \"US\",\n                          \"followingRelationship\": \"none\",\n                          \"photo\": {\n                            \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n                            \"suffix\": \"/28408559-JDHXXGBMJAGYZIGG.jpg\"\n                          },\n                          \"isAnonymous\": false\n                        },\n                        \"visibility\": \"public\"\n                      }\n                    ]\n                  }\n                ]\n              },\n              \"following\": true\n            },\n            {\n              \"id\": \"12345678/venuelikes\",\n              \"name\": \"My Liked Places\",\n              \"description\": \"\",\n              \"placesSummary\": \"Snohomish Bakery, Lucky Dragon - Chinese Restaurant, Ixtapa, Carleton Farm\",\n              \"type\": \"liked\",\n              \"user\": {\n                \"id\": \"123456\",\n                \"firstName\": \"John\",\n                \"lastName\": \"Smith\",\n                \"handle\": \"johnsmith\",\n                \"privateProfile\": false,\n                \"gender\": \"male\",\n                \"address\": \"\",\n                \"city\": \"\",\n                \"state\": \"\",\n                \"countryCode\": \"US\",\n                \"relationship\": \"self\",\n                \"photo\": {\n                  \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n                  \"suffix\": \"/blank_boy.png\",\n                  \"default\": true\n                },\n                \"birthday\": 19700101,\n                \"isAnonymous\": false\n              },\n              \"editable\": true,\n              \"public\": true,\n              \"collaborative\": false,\n              \"url\": \"/johnsmith/list/venuelikes\",\n              \"canonicalUrl\": \"https://foursquare.com/johnsmith/list/venuelikes\",\n              \"updatedAt\": 1695750924,\n              \"listItems\": {\n                \"count\": 7\n              },\n              \"photos\": {\n                \"count\": 4,\n                \"groups\": [\n                  {\n                    \"type\": \"venue\",\n                    \"name\": \"Venue photos\",\n                    \"count\": 4,\n                    \"items\": [\n                      {\n                        \"id\": \"5ae85d7f031320002cffa778\",\n                        \"createdAt\": 1525177727,\n                        \"prefix\": \"https://fastly.4sqi.net/img/general/\",\n                        \"suffix\": \"/619659_zc7zxQjMxMdPeWlBxxr1MpuByFT0QO1zrOqcZBvFmj8.jpg\",\n                        \"width\": 1900,\n                        \"height\": 1425,\n                        \"user\": {\n                          \"id\": \"123456\",\n                          \"firstName\": \"John\",\n                          \"lastName\": \"Smith\",\n                          \"handle\": \"johnsmith\",\n                          \"privateProfile\": false,\n                          \"gender\": \"male\",\n                          \"address\": \"\",\n                          \"city\": \"\",\n                          \"state\": \"\",\n                          \"countryCode\": \"US\",\n                          \"relationship\": \"self\",\n                          \"photo\": {\n                            \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n                            \"suffix\": \"/blank_boy.png\",\n                            \"default\": true\n                          },\n                          \"birthday\": 19700101,\n                          \"isAnonymous\": false\n                        },\n                        \"visibility\": \"public\"\n                      },\n                      {\n                        \"id\": \"54fb8eef498ebead33e1e0f7\",\n                        \"createdAt\": 1425772271,\n                        \"prefix\": \"https://fastly.4sqi.net/img/general/\",\n                        \"suffix\": \"/2007467_5M6vf0qtOVf-R2G0DOOKwlERjvOTL-az7PqJ8oSI170.jpg\",\n                        \"width\": 1920,\n                        \"height\": 1440,\n                        \"user\": {\n                          \"id\": \"12345\",\n                          \"firstName\": \"John\",\n                          \"lastName\": \"Smith\",\n                          \"handle\": \"johnsmith\",\n                          \"privateProfile\": false,\n                          \"gender\": \"male\",\n                          \"countryCode\": \"US\",\n                          \"followingRelationship\": \"followingThem\",\n                          \"photo\": {\n                            \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n                            \"suffix\": \"/blank_boy.png\"\n                          },\n                          \"isAnonymous\": false\n                        },\n                        \"visibility\": \"public\"\n                      },\n                      {\n                        \"id\": \"4e17cec618a8166f7385d612\",\n                        \"createdAt\": 1310183110,\n                        \"prefix\": \"https://fastly.4sqi.net/img/general/\",\n                        \"suffix\": \"/SJK3C3ZXHZO2IMLLRVFLOKGIDA5DVKTJUCNNNL1MHRELW5ZR\",\n                        \"width\": 2592,\n                        \"height\": 1944,\n                        \"user\": {\n                          \"id\": \"12345\",\n                          \"firstName\": \"John\",\n                          \"lastName\": \"Smith\",\n                          \"handle\": \"John Smith\",\n                          \"privateProfile\": false,\n                          \"gender\": \"male\",\n                          \"countryCode\": \"US\",\n                          \"followingRelationship\": \"followingThem\",\n                          \"photo\": {\n                            \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n                            \"suffix\": \"/blank_boy.png\"\n                          },\n                          \"isAnonymous\": false\n                        },\n                        \"visibility\": \"public\"\n                      },\n                      {\n                        \"id\": \"51ce29fe498efab4ea5617ee\",\n                        \"createdAt\": 1372465662,\n                        \"prefix\": \"https://fastly.4sqi.net/img/general/\",\n                        \"suffix\": \"/8419893_h8ujdi4afA4n6pVvp3tIiUWTne8qEObr_MOf5wzOK38.jpg\",\n                        \"width\": 720,\n                        \"height\": 720,\n                        \"user\": {\n                          \"id\": \"12345\",\n                          \"firstName\": \"John\",\n                          \"lastName\": \"Smith\",\n                          \"handle\": \"John Smith\",\n                          \"privateProfile\": false,\n                          \"gender\": \"male\",\n                          \"countryCode\": \"US\",\n                          \"followingRelationship\": \"followingThem\",\n                          \"photo\": {\n                            \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n                            \"suffix\": \"/blank_boy.png\"\n                          },\n                          \"isAnonymous\": false\n                        },\n                        \"visibility\": \"public\"\n                      }\n                    ]\n                  }\n                ]\n              },\n              \"following\": true\n            }\n          ]\n        },\n        {\n          \"type\": \"created\",\n          \"name\": \"Lists You Created\",\n          \"count\": 1,\n          \"items\": [\n            {\n              \"id\": \"641a1784a0241300b3095b91\",\n              \"name\": \"My Places\",\n              \"description\": \"\",\n              \"placesSummary\": \"Ixtapa\",\n              \"user\": {\n                \"id\": \"12345\",\n                \"firstName\": \"John\",\n                \"lastName\": \"Smith\",\n                \"handle\": \"John Smith\",\n                \"privateProfile\": false,\n                \"gender\": \"male\",\n                \"address\": \"\",\n                \"city\": \"\",\n                \"state\": \"\",\n                \"countryCode\": \"US\",\n                \"followingRelationship\": \"followingThem\",\n                \"photo\": {\n                  \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n                  \"suffix\": \"/blank_boy.png\"\n                },\n                \"birthday\": 333331200,\n                \"isAnonymous\": false\n              },\n              \"editable\": true,\n              \"public\": true,\n              \"collaborative\": false,\n              \"url\": \"/johnsmith/list/my-places\",\n              \"canonicalUrl\": \"https://foursquare.com/johnsmith/list/my-places\",\n              \"createdAt\": 1679431556,\n              \"updatedAt\": 1679431586,\n              \"photo\": {\n                \"id\": \"4fefd86de4b07928d93300ed\",\n                \"createdAt\": 1341118573,\n                \"prefix\": \"https://fastly.4sqi.net/img/general/\",\n                \"suffix\": \"/_iCL2Ja6N5B67rfv5DRD6UGR--_bFzoltkkoqGVHtKk.jpg\",\n                \"width\": 612,\n                \"height\": 612,\n                \"user\": {\n                  \"id\": \"12345\",\n                  \"firstName\": \"John\",\n                  \"lastName\": \"Smith\",\n                  \"handle\": \"John Smith\",\n                  \"privateProfile\": false,\n                  \"gender\": \"male\",\n                  \"countryCode\": \"US\",\n                  \"followingRelationship\": \"followingThem\",\n                  \"photo\": {\n                    \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n                    \"suffix\": \"/blank_boy.png\"\n                  },\n                  \"isAnonymous\": false\n                },\n                \"visibility\": \"public\"\n              },\n              \"followers\": {\n                \"count\": 0\n              },\n              \"listItems\": {\n                \"count\": 1\n              },\n              \"following\": true\n            }\n          ]\n        }\n      ]\n    }\n  }\n}"
                  }
                },
                "schema": {
                  "description": "Successful response object containing lists created by the authenticated user.",
                  "properties": {
                    "description": "Properties for retrieving lists for the authenticated user.",
                    "meta": {
                      "description": "Metadata object containing additional information about the response.",
                      "properties": {
                        "code": {
                          "default": 0,
                          "description": "Status code indicating the result of the API request.",
                          "example": 200,
                          "type": "integer"
                        },
                        "description": "Metadata object containing additional information about the response for retrieving a list of lists for the current user.",
                        "requestId": {
                          "description": "The unique identifier for the API request in the metadata object for successful responses to the 'lists' endpoint for the authenticated user.",
                          "example": "652464754421613d6b31c618",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "notifications": {
                      "description": "Array of notification objects returned for the successful response to a request for the authenticated user's lists.",
                      "items": {
                        "description": "Array of notification objects containing information about the user's notifications. ",
                        "properties": {
                          "description": "Array of notification objects containing information about the user's notifications in the notification tray.",
                          "item": {
                            "description": "Notification items for a user's lists.",
                            "properties": {
                              "description": "Array of notification items containing information about unread items in a user's lists.",
                              "unreadCount": {
                                "default": 0,
                                "description": "Number of unread items in the notification for the current user's lists.",
                                "example": 3,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": {
                            "description": "The type of notification for a list of user's lists.",
                            "example": "notificationTray",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "response": {
                      "description": "Object containing the retrieved data for a user's lists.",
                      "properties": {
                        "description": "Response object containing the retrieved data about the user's lists.",
                        "lists": {
                          "description": "Array of lists created by the authenticated user.",
                          "properties": {
                            "count": {
                              "default": 0,
                              "description": "Total number of lists associated with the user's account.",
                              "example": 3,
                              "type": "integer"
                            },
                            "description": "Array of list objects containing information about lists created by the user.",
                            "groups": {
                              "description": "Lists of groups for the authenticated user.",
                              "items": {
                                "description": "Array of groups containing lists created by the user.",
                                "properties": {
                                  "count": {
                                    "default": 0,
                                    "description": "Total number of lists.",
                                    "example": 2,
                                    "type": "integer"
                                  },
                                  "description": "Response object containing an array of groups within a list of lists for the current user.",
                                  "items": {
                                    "description": "Array of items in the lists groups response for the user's self lists, with properties for the group, items, and lists.",
                                    "items": {
                                      "description": "Object for retrieving lists of lists grouped by items for a user's self.",
                                      "properties": {
                                        "canonicalUrl": {
                                          "description": "Canonical URL for the user's list.",
                                          "example": "https://foursquare.com/johnsmith/list/todos",
                                          "type": "string"
                                        },
                                        "collaborative": {
                                          "default": true,
                                          "description": "Whether or not the list is collaborative.",
                                          "example": false,
                                          "type": "boolean"
                                        },
                                        "description": {
                                          "example": "",
                                          "type": "string"
                                        },
                                        "editable": {
                                          "default": true,
                                          "description": "Indicates whether the list items are editable by the user.",
                                          "example": true,
                                          "type": "boolean"
                                        },
                                        "following": {
                                          "default": true,
                                          "description": "Response containing the lists that the user is following.",
                                          "example": true,
                                          "type": "boolean"
                                        },
                                        "id": {
                                          "description": "The unique identifier for the items in the user's lists.",
                                          "example": "12345678/todos",
                                          "type": "string"
                                        },
                                        "listItems": {
                                          "description": "Items of a user's personal lists.",
                                          "properties": {
                                            "count": {
                                              "default": 0,
                                              "description": "Number of list items in the lists retrieved from a user's groups.",
                                              "example": 2,
                                              "type": "integer"
                                            },
                                            "description": "Array of list items including the list name, description, and number of items."
                                          },
                                          "type": "object"
                                        },
                                        "name": {
                                          "description": "The name for the currently authenticated user's lists.",
                                          "example": "My Saved Places",
                                          "type": "string"
                                        },
                                        "photos": {
                                          "description": "Lists of photos associated with items in a user's group lists.",
                                          "properties": {
                                            "count": {
                                              "default": 0,
                                              "description": "Total number of photos in the response for a specific user's lists.",
                                              "example": 2,
                                              "type": "integer"
                                            },
                                            "description": "Array of photos associated with the items in the user's self lists groups items.",
                                            "groups": {
                                              "description": "List of photos grouped by items within items within groups within lists within response from successful request for self user's lists.",
                                              "items": {
                                                "description": "An array of photo objects from a list of groups containing items from a user's lists.",
                                                "properties": {
                                                  "count": {
                                                    "default": 0,
                                                    "description": "Total number of photos in the user's lists, grouped by groups, and items, with a count property for each photo group.",
                                                    "example": 2,
                                                    "type": "integer"
                                                  },
                                                  "description": "Array of photo groups associated with lists created by the user.",
                                                  "items": {
                                                    "description": "Response containing information about a user's lists, including groups and photos, returned in an array format.",
                                                    "items": {
                                                      "description": "List of photos in groups for items in a user's lists.",
                                                      "properties": {
                                                        "createdAt": {
                                                          "default": 0,
                                                          "description": "Timestamp indicating when the photo was created; UNIX timestamp in seconds since Epoch.",
                                                          "example": 1381700510,
                                                          "type": "integer"
                                                        },
                                                        "description": "List of photos in a user's list group.",
                                                        "height": {
                                                          "default": 0,
                                                          "description": "The height of the photos in the response of a successful request to retrieve items from a user's lists.",
                                                          "example": 720,
                                                          "type": "integer"
                                                        },
                                                        "id": {
                                                          "description": "The id for the list of photos for the authenticated user.",
                                                          "example": "525b139e11d205d46552f414",
                                                          "type": "string"
                                                        },
                                                        "prefix": {
                                                          "description": "The URL prefix for the user's photos.",
                                                          "example": "https://fastly.4sqi.net/img/general/",
                                                          "type": "string"
                                                        },
                                                        "suffix": {
                                                          "description": "The URL suffix for the user's suffix.",
                                                          "example": "/61734_4kMJsSWy_r5OJ1ZKztfIAwNDaHNrLKvG6qUAOfLxoFc.jpg",
                                                          "type": "string"
                                                        },
                                                        "user": {
                                                          "description": "List of photos associated with a user's check-ins, including the user's profile photo and the venue's location.",
                                                          "properties": {
                                                            "countryCode": {
                                                              "description": "The country code of the user who uploaded each photo.",
                                                              "example": "US",
                                                              "type": "string"
                                                            },
                                                            "description": "Array of photo objects from the user's lists, grouped by user, with associated user information.",
                                                            "firstName": {
                                                              "description": "The user's first name.",
                                                              "example": "Kayla",
                                                              "type": "string"
                                                            },
                                                            "followingRelationship": {
                                                              "description": "Photo groups and user information for a list of users who are following the authenticated user's lists.",
                                                              "example": "none",
                                                              "type": "string"
                                                            },
                                                            "gender": {
                                                              "description": "Photos in the lists of groups items for the user's self, sorted by gender.",
                                                              "example": "female",
                                                              "type": "string"
                                                            },
                                                            "handle": {
                                                              "description": "Response object containing the user's lists, including associated groups and photos, and their handles.",
                                                              "example": "kaylap2353356",
                                                              "type": "string"
                                                            },
                                                            "id": {
                                                              "description": "Array of photo objects containing information about the user's photos in the response.",
                                                              "example": "61734",
                                                              "type": "string"
                                                            },
                                                            "isAnonymous": {
                                                              "default": true,
                                                              "description": "Photo information for a user's anonymous check-ins.",
                                                              "example": false,
                                                              "type": "boolean"
                                                            },
                                                            "lastName": {
                                                              "description": "The user's last name.",
                                                              "example": "Pdot",
                                                              "type": "string"
                                                            },
                                                            "photo": {
                                                              "description": "A user's photos from a list of groups containing photo objects with information such as the user's profile photo.",
                                                              "properties": {
                                                                "description": "A user's lists, including user information and photo details.",
                                                                "prefix": {
                                                                  "description": "Photo URL prefix.",
                                                                  "example": "https://fastly.4sqi.net/img/user/",
                                                                  "type": "string"
                                                                },
                                                                "suffix": {
                                                                  "description": "User's photo suffix for items in a list of photos from a group.",
                                                                  "example": "/IXT03VXSG50F14ZV.jpg",
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "type": "object"
                                                            },
                                                            "privateProfile": {
                                                              "default": true,
                                                              "description": "Photos from a private user's lists.",
                                                              "example": false,
                                                              "type": "boolean"
                                                            }
                                                          },
                                                          "type": "object"
                                                        },
                                                        "visibility": {
                                                          "description": "Visibility of photos within items within groups.",
                                                          "example": "public",
                                                          "type": "string"
                                                        },
                                                        "width": {
                                                          "default": 0,
                                                          "description": "The width in pixels of photos in a group item within a list item within a group within the response for the user's lists.",
                                                          "example": 960,
                                                          "type": "integer"
                                                        }
                                                      },
                                                      "type": "object"
                                                    },
                                                    "type": "array"
                                                  },
                                                  "name": {
                                                    "description": "The name of the photo group.",
                                                    "example": "Venue photos",
                                                    "type": "string"
                                                  },
                                                  "type": {
                                                    "description": "A list of photos that belong to a specific group within a user's list of lists.",
                                                    "example": "venue",
                                                    "type": "string"
                                                  }
                                                },
                                                "type": "object"
                                              },
                                              "type": "array"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "placesSummary": {
                                          "description": "A list of places from a user's lists, including groups and items.",
                                          "example": "Carleton Farm, Lake Stevens",
                                          "type": "string"
                                        },
                                        "public": {
                                          "default": true,
                                          "description": "Boolean indicating if the items in the user's public lists are included in the response.",
                                          "example": true,
                                          "type": "boolean"
                                        },
                                        "type": {
                                          "description": "List of user's lists grouped by type.",
                                          "example": "todos",
                                          "type": "string"
                                        },
                                        "updatedAt": {
                                          "default": 0,
                                          "description": "Timestamp indicating when the item was last updated; UNIX timestamp in seconds since Epoch.",
                                          "example": 1679427002,
                                          "type": "integer"
                                        },
                                        "url": {
                                          "description": "URL for the items.",
                                          "example": "/johnsmith/list/todos",
                                          "type": "string"
                                        },
                                        "user": {
                                          "description": "List of user's lists containing groups of items, each with user information.",
                                          "properties": {
                                            "address": {
                                              "description": "A list of groups containing items and their associated users' addresses for a successful response.",
                                              "example": "",
                                              "type": "string"
                                            },
                                            "birthday": {
                                              "default": 0,
                                              "description": "Birthday of the user who created the list items.",
                                              "example": 19700101,
                                              "type": "integer"
                                            },
                                            "city": {
                                              "description": "The city of the user who created the lists that are returned by the endpoint.",
                                              "example": "",
                                              "type": "string"
                                            },
                                            "countryCode": {
                                              "description": "The user's country code.",
                                              "example": "US",
                                              "type": "string"
                                            },
                                            "description": "The response contains a list of user groups containing individual items within individual lists for the authenticated user.",
                                            "firstName": {
                                              "description": "The first name of the user who created each list.",
                                              "example": "John",
                                              "type": "string"
                                            },
                                            "gender": {
                                              "description": "The user's gender information.",
                                              "example": "male",
                                              "type": "string"
                                            },
                                            "handle": {
                                              "description": "The handle of the user associated with the items in the groups.",
                                              "example": "johnsmith",
                                              "type": "string"
                                            },
                                            "id": {
                                              "description": "The user's unique identifier.",
                                              "example": "123456",
                                              "type": "string"
                                            },
                                            "isAnonymous": {
                                              "default": true,
                                              "description": "Indicates if the user who uploaded the photo is anonymous.",
                                              "example": false,
                                              "type": "boolean"
                                            },
                                            "lastName": {
                                              "description": "The last name of the user.",
                                              "example": "Smith",
                                              "type": "string"
                                            },
                                            "photo": {
                                              "description": "This object represents a user's photo associated with items in a list group retrieved via the self endpoint.",
                                              "properties": {
                                                "default": {
                                                  "default": true,
                                                  "description": "The default photo of the user who created the items in the lists of groups retrieved by the 'lists' endpoint.",
                                                  "example": true,
                                                  "type": "boolean"
                                                },
                                                "description": "List of group items containing user photos for a given user.",
                                                "prefix": {
                                                  "description": "URL prefix.",
                                                  "example": "https://fastly.4sqi.net/img/user/",
                                                  "type": "string"
                                                },
                                                "suffix": {
                                                  "description": "URL photo suffix.",
                                                  "example": "/blank_boy.png",
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "privateProfile": {
                                              "default": true,
                                              "description": "A boolean indicating whether the user has a private profile.",
                                              "example": false,
                                              "type": "boolean"
                                            },
                                            "relationship": {
                                              "description": "Response objects containing information about a user's relationship with the users who added items to lists in their personal lists.",
                                              "example": "self",
                                              "type": "string"
                                            },
                                            "state": {
                                              "description": "The state of the user.",
                                              "example": "",
                                              "type": "string"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "name": {
                                    "description": "The group name for the for the current user's lists.",
                                    "example": "Your Places",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "Alist of groups and their types for a user's lists.",
                                    "example": "yours",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "200"
          }
        },
        "security": [
          {
            "ManagedUserTokenAuth": []
          }
        ],
        "summary": "Get User Lists",
        "tags": [
          "Users"
        ]
      }
    },
    "/users/self/tastes": {
      "get": {
        "deprecated": false,
        "description": "Get the tastes for the user whose `oauth_token` is provided.",
        "operationId": "get-user-tastes",
        "parameters": [
          {
            "description": "The API version date as documented [here](/reference/versioning); e.g. 20231010",
            "in": "query",
            "name": "v",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"meta\": {\n    \"code\": 200,\n    \"requestId\": \"65381662818a1363ed583c6b\"\n  },\n  \"notifications\": [\n    {\n      \"type\": \"notificationTray\",\n      \"item\": {\n        \"unreadCount\": 0\n      }\n    }\n  ],\n  \"response\": {\n    \"tastes\": {\n      \"count\": 2,\n      \"groups\": [\n        {\n          \"type\": \"allTastes\",\n          \"name\": \"All 6 tastes\",\n          \"count\": 6,\n          \"items\": [\n            {\n              \"id\": \"52cc5701498e1b6fd7a2a9c6\",\n              \"text\": \"BBQ chicken\",\n              \"onUser\": true\n            },\n            {\n              \"id\": \"52cc5707498ec8fe9f4820bf\",\n              \"text\": \"Brie cheese\",\n              \"onUser\": true\n            },\n            {\n              \"id\": \"52cb360d498e49ae1f58c946\",\n              \"text\": \"Dim sum\",\n              \"onUser\": true\n            },\n            {\n              \"id\": \"52fbc95d498e387e4fa26851\",\n              \"text\": \"Mac & cheese\",\n              \"onUser\": true\n            },\n            {\n              \"id\": \"52cb360d498e49ae1f58c8d7\",\n              \"text\": \"Scenic views\",\n              \"onUser\": true\n            },\n            {\n              \"id\": \"52e132be498e4d5a8a79c364\",\n              \"text\": \"Zoos\",\n              \"onUser\": true\n            }\n          ]\n        }\n      ]\n    }\n  }\n}"
                  }
                },
                "schema": {
                  "description": "Array of tastes associated with the specified user.",
                  "properties": {
                    "description": "List of tastes for a specific user.",
                    "meta": {
                      "description": "Unique identifier for the API request metadata.",
                      "properties": {
                        "code": {
                          "default": 0,
                          "description": "Status code indicating the result of the API request.",
                          "example": 200,
                          "type": "integer"
                        },
                        "description": "Metadata object containing additional information about the successful response for retrieving a user's tastes.",
                        "requestId": {
                          "description": "Unique identifier for the API request.",
                          "example": "65381662818a1363ed583c6b",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "notifications": {
                      "description": "Array of notification objects for the specified user's tastes.",
                      "items": {
                        "description": "Notifications associated with the specified user's tastes.",
                        "properties": {
                          "description": "Array of notification objects for the specified user's taste preferences.",
                          "item": {
                            "description": "Array of notification items containing information about the user's preferences.",
                            "properties": {
                              "description": "Array of notification items containing unread counts for a specific user's tastes.",
                              "unreadCount": {
                                "default": 0,
                                "description": "Number of unread items in the user's taste notifications.",
                                "example": 0,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": {
                            "description": "Response object containing the type of notifications for a specific user's tastes.",
                            "example": "notificationTray",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "response": {
                      "description": "The response object containing the retrieved taste data for the specified user.",
                      "properties": {
                        "description": "Array of photo objects containing information about the user's tastes.",
                        "tastes": {
                          "description": "Array of taste objects associated with the specified user.",
                          "properties": {
                            "count": {
                              "default": 0,
                              "description": "Number of tastes for a specific user.",
                              "example": 2,
                              "type": "integer"
                            },
                            "description": "Array of user's tastes for the specified user ID.",
                            "groups": {
                              "description": "Array of taste groups associated with a specific user.",
                              "items": {
                                "description": "List of taste groups for a specific user.",
                                "properties": {
                                  "count": {
                                    "default": 0,
                                    "description": "Total number of taste groups for a user.",
                                    "example": 6,
                                    "type": "integer"
                                  },
                                  "description": "Array of objects representing the tastes of the specified user, including group information.",
                                  "items": {
                                    "description": "Array of taste groups for a user, containing taste items for each group.",
                                    "items": {
                                      "description": "List of tastes for a specific user.",
                                      "properties": {
                                        "description": "Array of taste categories for the user, containing the items that belong to each category.",
                                        "id": {
                                          "description": "List of taste groups for a specific user.",
                                          "example": "52cc5701498e1b6fd7a2a9c6",
                                          "type": "string"
                                        },
                                        "onUser": {
                                          "default": true,
                                          "description": "Whether the user has specified any tastes, and if so, the groups of tastes for the items associated with the user.",
                                          "example": true,
                                          "type": "boolean"
                                        },
                                        "text": {
                                          "description": "User's tastes, including groups and individual items, with their corresponding text descriptions.",
                                          "example": "BBQ chicken",
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "name": {
                                    "description": "The name of the user's taste groups.",
                                    "example": "All 6 tastes",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "Type of tastes groups associated with a specific user.",
                                    "example": "allTastes",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "200"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "description": "Response object for retrieving the tastes of a user, with a status code of 400 indicating a bad request.",
                  "properties": {
                    "description": "Properties for a 400 response when retrieving a user's tastes fails."
                  },
                  "type": "object"
                }
              }
            },
            "description": "400"
          }
        },
        "security": [
          {
            "ManagedUserTokenAuth": []
          }
        ],
        "summary": "Get User Tastes",
        "tags": [
          "Users"
        ]
      }
    },
    "/users/self/tips": {
      "get": {
        "deprecated": false,
        "description": "Get the tips/reviews for the user whose `oauth_token` is provided.",
        "operationId": "get-user-tips",
        "parameters": [
          {
            "description": "The API version date as documented [here](/reference/versioning); e.g. 20231010",
            "in": "query",
            "name": "v",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The number of results to return, up to 500; defaults to 30.",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The offset of the item at which to begin the response for pagination; no max or default.",
            "in": "query",
            "name": "offset",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The ID of the [category](https://location.foursquare.com/places/docs/categories#personalization-apis--movement-sdk) of interest (e.g. \"Arts and Entertainment\"); filter tips for just venues in this category.",
            "in": "query",
            "name": "categoryId",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of the venue of interest; filter venue tips for only this venue.",
            "in": "query",
            "name": "venueId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"meta\": {\n    \"code\": 200,\n    \"requestId\": \"6524655bf5e66e4def905286\"\n  },\n  \"notifications\": [\n    {\n      \"type\": \"notificationTray\",\n      \"item\": {\n        \"unreadCount\": 0\n      }\n    },\n    {\n      \"type\": \"unconfirmed\",\n      \"item\": {\n        \"unreadCount\": 0\n      }\n    }\n  ],\n  \"response\": {\n    \"tips\": {\n      \"count\": 19,\n      \"items\": [\n        {\n          \"id\": \"6515f99d8f151130670423d4\",\n          \"createdAt\": 1695938973,\n          \"text\": \"here is puppy number 2\",\n          \"type\": \"user\",\n          \"canonicalUrl\": \"https://foursquare.com/item/6515f99d8f151130670423d4\",\n          \"photo\": {\n            \"id\": \"6515f99e2425d010750f76fd\",\n            \"createdAt\": 1695938974,\n            \"source\": {\n              \"name\": \"Foursquare Web\",\n              \"url\": \"https://foursquare.com\"\n            },\n            \"prefix\": \"https://fastly.4sqi.net/img/general/\",\n            \"suffix\": \"/1234567_VJqOKo4P9-W0VyQk0iOZZzqG178RAL1rswe4KpZ2YGg.png\",\n            \"width\": 480,\n            \"height\": 650,\n            \"visibility\": \"public\"\n          },\n          \"photourl\": \"https://fastly.4sqi.net/img/general/original/1234567_VJqOKo4P9-W0VyQk0iOZZzqG178RAL1rswe4KpZ2YGg.png\",\n          \"likes\": {\n            \"count\": 0,\n            \"groups\": []\n          },\n          \"like\": false,\n          \"viewCount\": 0,\n          \"agreeCount\": 0,\n          \"disagreeCount\": 0,\n          \"todo\": {\n            \"count\": 0\n          },\n          \"venue\": {\n            \"id\": \"4f0de7267bebfc146005dcc0\",\n            \"name\": \"Mattlantis 🐳\"}\n        },\n        {\n          \"id\": \"6515f98d5a5bd638fc6585e6\",\n          \"createdAt\": 1695938957,\n          \"text\": \"here is puppy number 1\",\n          \"type\": \"user\",\n          \"canonicalUrl\": \"https://foursquare.com/item/6515f98d5a5bd638fc6585e6\",\n          \"photo\": {\n            \"id\": \"6515f98e2425d010750f727a\",\n            \"createdAt\": 1695938958,\n            \"source\": {\n              \"name\": \"Foursquare Web\",\n              \"url\": \"https://foursquare.com\"\n            },\n            \"prefix\": \"https://fastly.4sqi.net/img/general/\",\n            \"suffix\": \"/1234567__mJ46zH779YHTAjC2zLVLR-9UexkcHlhnJ7Bm_vd5Ws.gif\",\n            \"width\": 220,\n            \"height\": 220,\n            \"visibility\": \"public\"\n          },\n          \"photourl\": \"https://fastly.4sqi.net/img/general/original/1234567__mJ46zH779YHTAjC2zLVLR-9UexkcHlhnJ7Bm_vd5Ws.gif\",\n          \"likes\": {\n            \"count\": 0,\n            \"groups\": []\n          },\n          \"like\": false,\n          \"viewCount\": 0,\n          \"agreeCount\": 0,\n          \"disagreeCount\": 0,\n          \"todo\": {\n            \"count\": 0\n          },\n          \"venue\": {\n            \"id\": \"4f0de7267bebfc146005dcc0\",\n            \"name\": \"Mattlantis 🐳\"}\n        }\n      ]\n    }\n  }\n}"
                  }
                },
                "schema": {
                  "description": "A user's tips.",
                  "properties": {
                    "description": "Response object containing tips for the authenticated user.",
                    "meta": {
                      "description": "Metadata object containing additional information about the successful response from the 'GET tips' endpoint for the current user.",
                      "properties": {
                        "code": {
                          "default": 0,
                          "description": "Status code indicating the result of the API request for retrieving user's tips.",
                          "example": 200,
                          "type": "integer"
                        },
                        "description": "Metadata object containing additional information about the response, including the status code and unique identifier for the API request.",
                        "requestId": {
                          "description": "A unique identifier for the request.",
                          "example": "6524655bf5e66e4def905286",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "notifications": {
                      "description": "Array of objects containing information about user notifications for the tips endpoint.",
                      "items": {
                        "description": "Array of notification objects for tips endpoint.",
                        "properties": {
                          "description": "Array of notification objects within the response for getting user tips, with a focus on the notification tray.",
                          "item": {
                            "description": "Array of notification objects containing the type and number of unread items for a user's tips.",
                            "properties": {
                              "description": "Array of notification items containing unread count for the user's tips.",
                              "unreadCount": {
                                "default": 0,
                                "description": "Total number of unread items in the notifications for the current user.",
                                "example": 0,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": {
                            "description": "The type of notification.",
                            "example": "notificationTray",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "response": {
                      "description": "Response object containing a user's tips.",
                      "properties": {
                        "description": "Array of tip objects containing retrieved data for the user's tips, including the tip's unique identifier, text, and venue information.",
                        "tips": {
                          "description": "Get a list of tips submitted by the authenticated user.",
                          "properties": {
                            "count": {
                              "default": 0,
                              "description": "Number of tips in the response for the current user.",
                              "example": 19,
                              "type": "integer"
                            },
                            "description": "Array of tip objects containing information about tips created by the user.",
                            "items": {
                              "description": " \"Array of tip objects containing information about tips submitted by the user.",
                              "items": {
                                "description": "Response object containing an array of tip objects for the current user.",
                                "properties": {
                                  "agreeCount": {
                                    "default": 0,
                                    "description": "Number of users who have agreed with the tip associated with the response when retrieving tips for the current user.",
                                    "example": 0,
                                    "type": "integer"
                                  },
                                  "canonicalUrl": {
                                    "description": "Canonical URL.",
                                    "example": "https://foursquare.com/item/6515f99d8f151130670423d4",
                                    "type": "string"
                                  },
                                  "createdAt": {
                                    "default": 0,
                                    "description": "Timestamp indicating when the user's tips were created; UNIX timestamp in seconds since Epoch.",
                                    "example": 1695938973,
                                    "type": "integer"
                                  },
                                  "description": "Array of tip objects containing information about the user's tips at different locations.",
                                  "disagreeCount": {
                                    "default": 0,
                                    "description": "Number of users who have disagreed with the tip associated with the response from the '/users/self/tips' endpoint.",
                                    "example": 0,
                                    "type": "integer"
                                  },
                                  "id": {
                                    "description": "The unique identifier for the tips.",
                                    "example": "6515f99d8f151130670423d4",
                                    "type": "string"
                                  },
                                  "like": {
                                    "default": true,
                                    "description": "Indicates whether the user has liked the tips associated with their own account.",
                                    "example": false,
                                    "type": "boolean"
                                  },
                                  "likes": {
                                    "description": "List of likes for tips retrieved by the authenticated user.",
                                    "properties": {
                                      "count": {
                                        "default": 0,
                                        "description": "Total number of likes for the tips associated with the authenticated user.",
                                        "example": 0,
                                        "type": "integer"
                                      },
                                      "description": "A list of tips for the authenticated user, including the number of likes for each tip.",
                                      "groups": {
                                        "description": "An array of groups containing information about the likes on the items in the user's tips response.",
                                        "type": "array"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "photo": {
                                    "description": "Response containing photo objects for tips associated with the user.",
                                    "properties": {
                                      "createdAt": {
                                        "default": 0,
                                        "description": "Timestamp indicating when the user's tips were created; UNIX timestamp in seconds since Epoch.",
                                        "example": 1695938974,
                                        "type": "integer"
                                      },
                                      "description": "Array of photo objects associated with the tips retrieved for the authenticated user.",
                                      "height": {
                                        "default": 0,
                                        "description": "Height of photos in tips retrieved for the current user.",
                                        "example": 650,
                                        "type": "integer"
                                      },
                                      "id": {
                                        "description": "Photo IDs for tips written by the authenticated user.",
                                        "example": "6515f99e2425d010750f76fd",
                                        "type": "string"
                                      },
                                      "prefix": {
                                        "description": "URL prefix.",
                                        "example": "https://fastly.4sqi.net/img/general/",
                                        "type": "string"
                                      },
                                      "source": {
                                        "description": "Properties for the source of the user's tips, as retrieved from the 'users/self/tips' endpoint.",
                                        "properties": {
                                          "description": "Array of photo objects containing information about the tips written by the user.",
                                          "name": {
                                            "description": "The source name for photos associated with tips posted by a user.",
                                            "example": "Foursquare Web",
                                            "type": "string"
                                          },
                                          "url": {
                                            "description": "URL for the venue.",
                                            "example": "https://foursquare.com",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "suffix": {
                                        "description": "URL suffix.",
                                        "example": "/1234567_VJqOKo4P9-W0VyQk0iOZZzqG178RAL1rswe4KpZ2YGg.png",
                                        "type": "string"
                                      },
                                      "visibility": {
                                        "description": "Visibility information for photos associated with a user's tips.",
                                        "example": "public",
                                        "type": "string"
                                      },
                                      "width": {
                                        "default": 0,
                                        "description": "Integer representing the width of the photo associated with a tip retrieved for the user.",
                                        "example": 480,
                                        "type": "integer"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "photourl": {
                                    "description": "Tips and corresponding photo URLs for the user's personal tips.",
                                    "example": "https://fastly.4sqi.net/img/general/original/1234567_VJqOKo4P9-W0VyQk0iOZZzqG178RAL1rswe4KpZ2YGg.png",
                                    "type": "string"
                                  },
                                  "text": {
                                    "description": "Text from tips associated with a user's account.",
                                    "example": "here is puppy number 2",
                                    "type": "string"
                                  },
                                  "todo": {
                                    "description": "An array of objects containing tips from the authenticated user, including any to-do items associated with each tip.",
                                    "properties": {
                                      "count": {
                                        "default": 0,
                                        "description": "Number of to-do items for tips retrieved by the authenticated user.",
                                        "example": 0,
                                        "type": "integer"
                                      },
                                      "description": "Array of to-do objects associated with the user's tips."
                                    },
                                    "type": "object"
                                  },
                                  "type": {
                                    "description": "The type of each tip.",
                                    "example": "user",
                                    "type": "string"
                                  },
                                  "venue": {
                                    "description": "Array of venue objects containing tips for the currently authenticated user.",
                                    "properties": {
                                      "description": "Array of venue objects associated with tips retrieved for the authenticated user's self.",
                                      "id": {
                                        "description": "The unique identifier for the venue associated with the user's tips.",
                                        "example": "4f0de7267bebfc146005dcc0",
                                        "type": "string"
                                      },
                                      "name": {
                                        "description": "Retrieve the names of venues from tips associated with a user's profile.",
                                        "example": "Mattlantis 🐳",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "viewCount": {
                                    "default": 0,
                                    "description": "Number of views for tips retrieved by the user.",
                                    "example": 0,
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "200"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "description": "This endpoint returns a 400 error response if the requested tips cannot be retrieved for the authenticated user.",
                  "properties": {
                    "description": "Response object containing properties for the specified user's tips, with a 400 status code indicating an error."
                  },
                  "type": "object"
                }
              }
            },
            "description": "400"
          }
        },
        "security": [
          {
            "ManagedUserTokenAuth": []
          }
        ],
        "summary": "Get User Tips",
        "tags": [
          "Users"
        ]
      }
    },
    "/venues/categories": {
      "get": {
        "deprecated": false,
        "description": "Get the entire list of [categories](/places/docs/categories#personalization-apis--movement-sdk) that can be applied to a venue.",
        "operationId": "get-venue-categories",
        "parameters": [
          {
            "description": "The API version date as documented [here](/reference/versioning); e.g. 20231010",
            "in": "query",
            "name": "v",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"meta\": {\n    \"code\": 200,\n    \"requestId\": \"5854a3664434b94a0959cfb7\"\n  },\n  \"notifications\": [\n    {\n      \"item\": {\n        \"unreadCount\": 13\n      },\n      \"type\": \"notificationTray\"\n    }\n  ],\n  \"response\": {\n    \"categories\": [\n      {\n        \"id\": \"4d4b7104d754a06370d81259\",\n        \"name\": \"Arts and Entertainment\",\n        \"pluralName\": \"Arts and Entertainment\",\n        \"shortName\": \"Arts & Entertainment\",\n        \"icon\": {\n          \"prefix\": \"https://ss3.4sqi.net/img/categories_v2/arts_entertainment/default_\",\n          \"suffix\": \".png\"\n        },\n        \"categoryCode\": 10000,\n        \"categories\": [\n          {\n            \"id\": \"4bf58dd8d48988d182941735\",\n            \"name\": \"Amusement Park\",\n            \"pluralName\": \"Amusement Parks\",\n            \"shortName\": \"Amusement Park\",\n            \"icon\": {\n              \"prefix\": \"https://ss3.4sqi.net/img/categories_v2/arts_entertainment/themepark_\",\n              \"suffix\": \".png\"\n            },\n            \"categoryCode\": 10001,\n            \"categories\": [\n              {\n                \"id\": \"5109983191d435c0d71c2bb1\",\n                \"name\": \"Attraction\",\n                \"pluralName\": \"Attractions\",\n                \"shortName\": \"Attraction\",\n                \"icon\": {\n                  \"prefix\": \"https://ss3.4sqi.net/img/categories_v2/arts_entertainment/themepark_\",\n                  \"suffix\": \".png\"\n                },\n                \"categoryCode\": 10058,\n                \"categories\": []\n              }\n            ]\n          },\n          {\n            \"id\": \"4fceea171983d5d06c3e9823\",\n            \"name\": \"Aquarium\",\n            \"pluralName\": \"Aquariums\",\n            \"shortName\": \"Aquarium\",\n            \"icon\": {\n              \"prefix\": \"https://ss3.4sqi.net/img/categories_v2/arts_entertainment/aquarium_\",\n              \"suffix\": \".png\"\n            },\n            \"categoryCode\": 10002,\n            \"categories\": []\n          },\n          {\n            \"id\": \"4bf58dd8d48988d1e1931735\",\n            \"name\": \"Arcade\",\n            \"pluralName\": \"Arcades\",\n            \"shortName\": \"Arcade\",\n            \"icon\": {\n              \"prefix\": \"https://ss3.4sqi.net/img/categories_v2/arts_entertainment/arcade_\",\n              \"suffix\": \".png\"\n            },\n            \"categoryCode\": 10003,\n            \"categories\": []\n          }\n        ]\n      }\n    ]\n  }\n}\n"
                  }
                },
                "schema": {
                  "description": "Response object containing an array containing all possible venue categories.",
                  "properties": {
                    "description": "Response object containing an array of venue categories.",
                    "meta": {
                      "description": "Metadata object containing additional information about the response.",
                      "properties": {
                        "code": {
                          "default": 0,
                          "description": "Status code indicating the result of the venue search API request.",
                          "example": 200,
                          "type": "integer"
                        },
                        "description": "Metadata object containing additional information.",
                        "requestId": {
                          "description": "Unique identifier for the API request.",
                          "example": "5ac51d7e6a607143d811cecb",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "response": {
                      "description": "Response object containing the venue categories.",
                      "properties": {
                        "description": "Response object containing the venue categories.",
                        "categories": {
                          "description": "Array of all categories that can be applied to a venue.",
                          "properties": {
                            "id": {
                              "description": "The ID for the category.",
                              "type": "string"
                            },
                            "name": {
                              "description": "The full name of the category.",
                              "type": "string"
                            },
                            "pluralName": {
                              "description": "A plural name for the category.",
                              "type": "string"
                            },
                            "shortName": {
                              "description": "A short name for the category.",
                              "type": "string"
                            },
                            "icon": {
                              "description": "Icon for categories associated with a venue search response.",
                              "properties": {
                                "prefix": {
                                  "description": "The URL prefix for the icon.",
                                  "type": "string"
                                },
                                "suffix": {
                                  "description": "The URL suffix for the icon.",
                                  "type": "string"
                                }
                              }
                            },
                            "categoryCode": {
                              "description": "Unique 5-integer style code for the category associated with the given venue ID.",
                              "example": 11180,
                              "type": "string"
                            },
                            "categories": {
                              "description": "Child categories.",
                              "properties": {
                                "id": {
                                  "description": "The ID for the category.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "The full name of the category.",
                                  "type": "string"
                                },
                                "pluralName": {
                                  "description": "A plural name for the category.",
                                  "type": "string"
                                },
                                "shortName": {
                                  "description": "A short name for the category.",
                                  "type": "string"
                                },
                                "icon": {
                                  "description": "Icon for categories associated with a venue search response.",
                                  "properties": {
                                    "prefix": {
                                      "description": "The URL prefix for the icon.",
                                      "type": "string"
                                    },
                                    "suffix": {
                                      "description": "The URL suffix for the icon.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "categoryCode": {
                                  "description": "Unique 5-integer style code for the category associated with the given venue ID.",
                                  "example": 11180,
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "200"
          },
          "400": {
            "content": {
              "text/plain": {
                "examples": {
                  "Result": {
                    "value": "For full list of API error codes:\nhttps://location.foursquare.com/developer/reference/errors-v2"
                  }
                }
              }
            },
            "description": "400"
          }
        },
        "security": [
          {
            "ManagedUserTokenAuth": []
          }
        ],
        "summary": "Get Venue Categories",
        "tags": [
          "Venues"
        ]
      }
    },
    "/venues/search": {
      "get": {
        "deprecated": false,
        "description": "Search for venues near a user's location based on a set radius.",
        "operationId": "search-for-nearby-venues",
        "parameters": [
          {
            "description": "The API version date as documented [here](/reference/versioning); e.g. 20231010",
            "in": "query",
            "name": "v",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A string to be searched against a venue's tips, category, etc.",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The latitude/longitude around which to retrieve place information. This must be specified as latitude,longitude (e.g., ll=41.8781,-87.6298). **Required if `near `is not specified.**",
            "in": "query",
            "name": "ll",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A string naming a place in the world. If the near string is not geocodable, returns a failed_geocode error. Otherwise, searches within the bounds of the geocode and adds a geocode object to the response. **Required if `ll` is not specified.**",
            "in": "query",
            "name": "near",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Limit results to venues within this many meters of the specified location. Defaults to a city-wide area. Only valid for requests that use categoryId or query. The maximum supported radius is currently 100,000 meters.",
            "in": "query",
            "name": "radius",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "A comma separated list of categories to limit results to. If you specify categoryId. Specifying a radius may improve results. If specifying a top-level category, all sub-categories will also match the query.",
            "in": "query",
            "name": "categoryId",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Number of results to return; up to 50.",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "A third-party URL which we will attempt to match against our map of venues to URLs.",
            "in": "query",
            "name": "url",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"meta\": {\n    \"code\": 200,\n    \"requestId\": \"5ac51d7e6a607143d811cecb\"\n  },\n  \"response\": {\n    \"venues\": [\n      {\n        \"id\": \"5642aef9498e51025cf4a7a5\",\n        \"name\": \"Mr. Purple\",\n        \"location\": {\n          \"address\": \"180 Orchard St\",\n          \"crossStreet\": \"btwn Houston & Stanton St\",\n          \"lat\": 40.72173744277209,\n          \"lng\": -73.98800687282996,\n          \"labeledLatLngs\": [\n            {\n              \"label\": \"display\",\n              \"lat\": 40.72173744277209,\n              \"lng\": -73.98800687282996\n            }\n          ],\n          \"distance\": 8,\n          \"postalCode\": \"10002\",\n          \"cc\": \"US\",\n          \"city\": \"New York\",\n          \"state\": \"NY\",\n          \"country\": \"United States\",\n          \"formattedAddress\": [\n            \"180 Orchard St (btwn Houston & Stanton St)\",\n            \"New York, NY 10002\",\n            \"United States\"\n          ]\n        },\n        \"categories\": [\n          {\n            \"id\": \"4bf58dd8d48988d1d5941735\",\n            \"name\": \"Hotel Bar\",\n            \"pluralName\": \"Hotel Bars\",\n            \"shortName\": \"Hotel Bar\",\n            \"icon\": {\n              \"prefix\": \"https://ss3.4sqi.net/img/categories_v2/travel/hotel_bar_\",\n              \"suffix\": \".png\"\n            },\n            \"primary\": true\n          }\n        ],\n        \"venuePage\": {\n          \"id\": \"150747252\"\n        }\n      }\n    ]\n  }\n}\n"
                  }
                },
                "schema": {
                  "description": "Array of venue objects for a successful search query.",
                  "properties": {
                    "description": "Response object containing an array of venue objects with properties such as name, location, and distance. ",
                    "meta": {
                      "description": "Metadata object containing additional information about the response.",
                      "properties": {
                        "code": {
                          "default": 0,
                          "description": "Status code indicating the result of the venue search API request.",
                          "example": 200,
                          "type": "integer"
                        },
                        "description": "Metadata object containing additional information.",
                        "requestId": {
                          "description": "Unique identifier for the API request.",
                          "example": "5ac51d7e6a607143d811cecb",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "response": {
                      "description": "Response object containing the retrieved data from a venue search.",
                      "properties": {
                        "description": "Response object containing information about the retrieved venue search results.",
                        "venues": {
                          "description": "Array of venue objects returned in the response for successful search.",
                          "items": {
                            "description": "List of venues matching the search query.",
                            "properties": {
                              "categories": {
                                "description": "Categories associated with the venues.",
                                "items": {
                                  "description": "Array of category objects associated with the venues in the response.",
                                  "properties": {
                                    "description": "Array of category objects for the venues returned in the search response.",
                                    "icon": {
                                      "description": "Icon for categories associated with a venue search response.",
                                      "properties": {
                                        "description": "Icon associated with categories of venues returned in the response of a successful search.",
                                        "prefix": {
                                          "description": "Prefix of the icon for the categories of venues returned in a successful response from a search query.",
                                          "example": "https://ss3.4sqi.net/img/categories_v2/travel/hotel_bar_",
                                          "type": "string"
                                        },
                                        "suffix": {
                                          "description": "The suffix for the icon of the categories of venues searched.",
                                          "example": ".png",
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "id": {
                                      "description": "Unique identifier for the category associated with a venue search response.",
                                      "example": "4bf58dd8d48988d1d5941735",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Venue categories associated with successful search responses.",
                                      "example": "Hotel Bar",
                                      "type": "string"
                                    },
                                    "pluralName": {
                                      "description": "The plural name of the categories associated with the venues returned in the response from the venue search endpoint.",
                                      "example": "Hotel Bars",
                                      "type": "string"
                                    },
                                    "primary": {
                                      "default": true,
                                      "description": "Primary categories for venues returned from a search query.",
                                      "example": true,
                                      "type": "boolean"
                                    },
                                    "shortName": {
                                      "description": "Short names of categories for venues returned in search responses.",
                                      "example": "Hotel Bar",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "description": "Array of venue objects containing information about nearby venues.",
                              "id": {
                                "description": "Unique identifier for the venues returned in a successful search response.",
                                "example": "5642aef9498e51025cf4a7a5",
                                "type": "string"
                              },
                              "location": {
                                "description": "Venue locations for a successful search request.",
                                "properties": {
                                  "address": {
                                    "description": "Street address of the venue from successful search results for venues.",
                                    "example": "180 Orchard St",
                                    "type": "string"
                                  },
                                  "cc": {
                                    "description": "Response containing location country code for venues searched.",
                                    "example": "US",
                                    "type": "string"
                                  },
                                  "city": {
                                    "description": "Location information for venues in a city, returned from a successful search request.",
                                    "example": "New York",
                                    "type": "string"
                                  },
                                  "country": {
                                    "description": "The country of the venues returned by a successful search request to the Foursquare API.",
                                    "example": "United States",
                                    "type": "string"
                                  },
                                  "crossStreet": {
                                    "description": "The cross street of the location of venues retrieved from a successful search request.",
                                    "example": "btwn Houston & Stanton St",
                                    "type": "string"
                                  },
                                  "description": "The location properties for venues returned in a successful search response.",
                                  "distance": {
                                    "default": 0,
                                    "description": "Distance from the user's location to the venue in meters.",
                                    "example": 8,
                                    "type": "integer"
                                  },
                                  "formattedAddress": {
                                    "description": "Location of the venue in a human-readable format.",
                                    "items": {
                                      "description": "Response object containing an array of venue objects with formatted address information for each venue.",
                                      "example": "180 Orchard St (btwn Houston & Stanton St)",
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "labeledLatLngs": {
                                    "description": "Array of labeled latitude and longitude coordinates for venues retrieved in a successful response to a search query.",
                                    "items": {
                                      "description": "Array of labeled latitude and longitude coordinates for the venues returned by the search.",
                                      "properties": {
                                        "description": "Array of labeled latitude and longitude coordinates for venues returned in the response.",
                                        "label": {
                                          "description": "Location labels for venues returned in a successful search response. ",
                                          "example": "display",
                                          "type": "string"
                                        },
                                        "lat": {
                                          "default": 0,
                                          "description": "Latitude coordinates of venues returned in a successful search response.",
                                          "example": 40.72173744277209,
                                          "type": "number"
                                        },
                                        "lng": {
                                          "default": 0,
                                          "description": "Longitude coordinate for labeled latitude and longitude coordinates of venues returned in a successful response.",
                                          "example": -73.98800687282996,
                                          "type": "number"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "lat": {
                                    "default": 0,
                                    "description": "Latitude coordinate of the venues returned from a search query.",
                                    "example": 40.72173744277209,
                                    "type": "number"
                                  },
                                  "lng": {
                                    "default": 0,
                                    "description": "Longitude coordinate of the searched venues.",
                                    "example": -73.98800687282996,
                                    "type": "number"
                                  },
                                  "postalCode": {
                                    "description": "Postal codes for venues in a search response for a successful API request.",
                                    "example": "10002",
                                    "type": "string"
                                  },
                                  "state": {
                                    "description": "Information about the state of a venue's location.",
                                    "example": "NY",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "name": {
                                "description": "Name of the venues returned in a successful search. ",
                                "example": "Mr. Purple",
                                "type": "string"
                              },
                              "venuePage": {
                                "description": "Object representing a venue page within the response of a successful venue search.",
                                "properties": {
                                  "description": "Properties for venues returned in a successful search response, including venue page information.",
                                  "id": {
                                    "description": "Unique identifier for the venue's associated page.",
                                    "example": "150747252",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "200"
          },
          "400": {
            "content": {
              "text/plain": {
                "examples": {
                  "Result": {
                    "value": "For full list of API error codes:\n\nhttps://location.foursquare.com/developer/reference/personalization-apis-errors"
                  }
                }
              }
            },
            "description": "400"
          }
        },
        "security": [
          {
            "ManagedUserTokenAuth": []
          }
        ],
        "summary": "Search Nearby Venues",
        "tags": [
          "Search"
        ]
      }
    },
    "/venues/trending": {
      "get": {
        "deprecated": false,
        "description": "Surface places similar to a user's current location based on geographic proximity, consumer behavior trends, and venues offering similar experiences.",
        "operationId": "get-trending-venues",
        "parameters": [
          {
            "description": "The API version date as documented [here](/reference/versioning); e.g. 20231010",
            "in": "query",
            "name": "v",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The latitude/longitude around which to retrieve place information. This must be specified as latitude,longitude (e.g., ll=41.8781,-87.6298). **Required if `near `is not specified.**",
            "in": "query",
            "name": "ll",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A string naming a place in the world. If the near string is not geocodable, returns a failed_geocode error. Otherwise, searches within the bounds of the geocode and adds a geocode object to the response. **Required if `ll` is not specified.**",
            "in": "query",
            "name": "near",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Limit results to venues within this many meters of the specified location. Defaults to a city-wide area. Only valid for requests that use categoryId or query. The maximum supported radius is currently 100,000 meters.",
            "in": "query",
            "name": "radius",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Number of results to return; up to 50.",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"meta\": {\n    \"code\": 200,\n    \"requestId\": \"5ac51dde351e3d4df64064f8\"\n  },\n  \"response\": {\n    \"venues\": [\n      {\n        \"id\": \"5735dc3f498e1ac6a088f324\",\n        \"name\": \"Union Fare\",\n        \"location\": {\n          \"address\": \"5 E 17th St\",\n          \"crossStreet\": \"btwn 5th Ave & Union Sq W\",\n          \"lat\": 40.737697,\n          \"lng\": -73.991402,\n          \"labeledLatLngs\": [\n            {\n              \"label\": \"display\",\n              \"lat\": 40.737697,\n              \"lng\": -73.991402\n            }\n          ],\n          \"distance\": 1802,\n          \"postalCode\": \"10003\",\n          \"cc\": \"US\",\n          \"city\": \"New York\",\n          \"state\": \"NY\",\n          \"country\": \"United States\",\n          \"formattedAddress\": [\n            \"5 E 17th St (btwn 5th Ave & Union Sq W)\",\n            \"New York, NY 10003\",\n            \"United States\"\n          ]\n        },\n        \"categories\": [\n          {\n            \"id\": \"4bf58dd8d48988d157941735\",\n            \"name\": \"New American Restaurant\",\n            \"pluralName\": \"New American Restaurants\",\n            \"shortName\": \"New American\",\n            \"icon\": {\n              \"prefix\": \"https://ss3.4sqi.net/img/categories_v2/food/newamerican_\",\n              \"suffix\": \".png\"\n            },\n            \"primary\": true\n          }\n        ]\n      }\n    ]\n  }\n}"
                  }
                },
                "schema": {
                  "description": "Successful response containing a list of trending venues.",
                  "properties": {
                    "description": "Properties for the response object containing the retrieved trending venues data.",
                    "meta": {
                      "description": "Metadata object containing additional information about the response.",
                      "properties": {
                        "code": {
                          "default": 0,
                          "description": "Status code indicating the result of the trending venues API request.",
                          "example": 200,
                          "type": "integer"
                        },
                        "description": "Metadata object for successful response from the 'trending' endpoint for venues.",
                        "requestId": {
                          "description": "Unique request identifier.",
                          "example": "5ac51dde351e3d4df64064f8",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "response": {
                      "description": "Response object containing trending venues near the user's location.",
                      "properties": {
                        "description": "Response object representing the retrieved data for trending venues.",
                        "venues": {
                          "description": "Array of trending venues near the user's location.",
                          "items": {
                            "description": "Array of venue objects representing the trending venues in the response.",
                            "properties": {
                              "categories": {
                                "description": "Array of categories associated with venues trending at the time of the request.",
                                "items": {
                                  "description": "Array of categories for the trending venues.",
                                  "properties": {
                                    "description": "An array of categories associated with the trending venues.",
                                    "icon": {
                                      "description": "Icon for categories associated with trending venues. ",
                                      "properties": {
                                        "description": "Icon for categories of trending venues in the response.",
                                        "prefix": {
                                          "description": "The icons associated with the categories of venues trending near the user's location.",
                                          "example": "https://ss3.4sqi.net/img/categories_v2/food/newamerican_",
                                          "type": "string"
                                        },
                                        "suffix": {
                                          "description": "The suffix for the icon of the categories associated with trending venues.",
                                          "example": ".png",
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "id": {
                                      "description": "Unique identifiers for categories associated with trending venues.",
                                      "example": "4bf58dd8d48988d157941735",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "The trending venues and their corresponding categories.",
                                      "example": "New American Restaurant",
                                      "type": "string"
                                    },
                                    "pluralName": {
                                      "description": "The plural names of the categories of trending venues.",
                                      "example": "New American Restaurants",
                                      "type": "string"
                                    },
                                    "primary": {
                                      "default": true,
                                      "description": "Primary categories of trending venues in a specific location.",
                                      "example": true,
                                      "type": "boolean"
                                    },
                                    "shortName": {
                                      "description": "Response containing trending venues and their associated categories.",
                                      "example": "New American",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "description": "An array of trending venues objects with unique identifiers, names, and locations.",
                              "id": {
                                "description": "Unique identifier for trending venues.",
                                "example": "5735dc3f498e1ac6a088f324",
                                "type": "string"
                              },
                              "location": {
                                "description": "The location of the venues returned by a successful trending venues request.",
                                "properties": {
                                  "address": {
                                    "description": "Properties of the addresses for trending venues.",
                                    "example": "5 E 17th St",
                                    "type": "string"
                                  },
                                  "cc": {
                                    "description": "The trending venue's country code for a successful response.",
                                    "example": "US",
                                    "type": "string"
                                  },
                                  "city": {
                                    "description": "Trending venues in a specific city.",
                                    "example": "New York",
                                    "type": "string"
                                  },
                                  "country": {
                                    "description": "The country.",
                                    "example": "United States",
                                    "type": "string"
                                  },
                                  "crossStreet": {
                                    "description": "Trending venues' cross streets for a successful API response.",
                                    "example": "btwn 5th Ave & Union Sq W",
                                    "type": "string"
                                  },
                                  "description": "Array of venue objects with location details for trending venues.",
                                  "distance": {
                                    "default": 0,
                                    "description": "Distance between user and trending venues in meters.",
                                    "example": 1802,
                                    "type": "integer"
                                  },
                                  "formattedAddress": {
                                    "description": "Formatted addresses of the trending venues in the response.",
                                    "items": {
                                      "description": "Trending venues' locations' formatted addresses.",
                                      "example": "5 E 17th St (btwn 5th Ave & Union Sq W)",
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "labeledLatLngs": {
                                    "description": "Labeled latitude and longitude coordinates of trending venues in the response array.",
                                    "items": {
                                      "description": "Array of labeled latitude and longitude coordinates for trending venues.",
                                      "properties": {
                                        "description": "Array of labeled latitude and longitude coordinates for trending venues.",
                                        "label": {
                                          "description": "Retrieve the labels for the labeled latitude and longitude coordinates of the trending venues.",
                                          "example": "display",
                                          "type": "string"
                                        },
                                        "lat": {
                                          "default": 0,
                                          "description": "Latitude coordinates for trending venues.",
                                          "example": 40.737697,
                                          "type": "number"
                                        },
                                        "lng": {
                                          "default": 0,
                                          "description": "Longitude coordinates for trending venues.",
                                          "example": -73.991402,
                                          "type": "number"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "lat": {
                                    "default": 0,
                                    "description": "Latitude coordinates for trending venues.",
                                    "example": 40.737697,
                                    "type": "number"
                                  },
                                  "lng": {
                                    "default": 0,
                                    "description": "Longitude coordinate for trending venues in a given location.",
                                    "example": -73.991402,
                                    "type": "number"
                                  },
                                  "postalCode": {
                                    "description": "Retrieve postal codes for trending venues.",
                                    "example": "10003",
                                    "type": "string"
                                  },
                                  "state": {
                                    "description": "The US state.",
                                    "example": "NY",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "name": {
                                "description": "The name of the trending venue.",
                                "example": "Union Fare",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "200"
          },
          "400": {
            "content": {
              "text/plain": {
                "examples": {
                  "Result": {
                    "value": "For full list of API error codes:\nhttps://location.foursquare.com/developer/reference/errors-v2"
                  }
                }
              }
            },
            "description": "400"
          }
        },
        "security": [
          {
            "ManagedUserTokenAuth": []
          }
        ],
        "summary": "Get Trending Venues",
        "tags": [
          "Venues"
        ]
      }
    },
    "/venues/{venue_id}/": {
      "get": {
        "deprecated": false,
        "description": "Get the details - e.g. location and contact information - of the venue specified.",
        "operationId": "get-venue-details",
        "parameters": [
          {
            "description": "The venue you want details for; e.g., Foursquare HQ's venue_id = 5a187743ccad6b307315e6fe",
            "in": "path",
            "name": "venue_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The API version date as documented [here](/reference/versioning); e.g. 20231010",
            "in": "query",
            "name": "v",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"meta\": {\n    \"code\": 200,\n    \"requestId\": \"6414976cc061821472274e5e\"\n  },\n  \"response\": {\n    \"venue\": {\n      \"id\": \"5a187743ccad6b307315e6fe\",\n      \"name\": \"Foursquare HQ\",\n      \"contact\": {\n        \"phone\": \"6463804813\",\n        \"formattedPhone\": \"(646) 380-4813\",\n        \"twitter\": \"foursquare\",\n        \"instagram\": \"foursquare\"\n      },\n      \"location\": {\n        \"address\": \"50 W 23rd St\",\n        \"crossStreet\": \"btwn 5th & 6th Ave\",\n        \"lat\": 40.742058823215544,\n        \"lng\": -73.9918041229248,\n        \"labeledLatLngs\": [\n          {\n            \"label\": \"display\",\n            \"lat\": 40.742058823215544,\n            \"lng\": -73.9918041229248\n          }\n        ],\n        \"postalCode\": \"10010\",\n        \"cc\": \"US\",\n        \"city\": \"New York\",\n        \"state\": \"NY\",\n        \"country\": \"United States\",\n        \"formattedAddress\": [\n          \"50 W 23rd St (btwn 5th & 6th Ave)\",\n          \"New York, NY 10010\",\n          \"United States\"\n        ]\n      },\n      \"canonicalUrl\": \"https://foursquare.com/v/foursquare-hq/5a187743ccad6b307315e6fe\",\n      \"categories\": [\n        {\n          \"id\": \"4bf58dd8d48988d125941735\",\n          \"name\": \"Tech Startup\",\n          \"pluralName\": \"Tech Startups\",\n          \"shortName\": \"Tech Startup\",\n          \"icon\": {\n            \"prefix\": \"https://ss3.4sqi.net/img/categories_v2/shops/technology_\",\n            \"suffix\": \".png\"\n          },\n          \"categoryCode\": 11180,\n          \"primary\": true\n        }\n      ],\n      \"verified\": true,\n      \"stats\": {\n        \"tipCount\": 41\n      },\n      \"url\": \"https://foursquare.com\",\n      \"likes\": {\n        \"count\": 141,\n        \"groups\": [\n          {\n            \"type\": \"others\",\n            \"count\": 141,\n            \"items\": []\n          }\n        ],\n        \"summary\": \"141 Likes\"\n      },\n      \"dislike\": false,\n      \"ok\": false,\n      \"venueRatingBlacklisted\": true,\n      \"beenHere\": {\n        \"count\": 0,\n        \"unconfirmedCount\": 0,\n        \"marked\": false,\n        \"lastCheckinExpiredAt\": 0\n      },\n      \"photos\": {\n        \"count\": 476,\n        \"groups\": [\n          {\n            \"type\": \"venue\",\n            \"name\": \"Venue photos\",\n            \"count\": 476,\n            \"items\": [\n              {\n                \"id\": \"5aeb7f7389ad460024c22206\",\n                \"createdAt\": 1525383027,\n                \"source\": {\n                  \"name\": \"Swarm for iOS\",\n                  \"url\": \"https://www.swarmapp.com\"\n                },\n                \"prefix\": \"https://fastly.4sqi.net/img/general/\",\n                \"suffix\": \"/5435652_tVudly9wn9jCMpn9N6qT54RBpyx-rc3BGWg9o4E1gOk.jpg\",\n                \"width\": 1440,\n                \"height\": 1828,\n                \"visibility\": \"public\"\n              },\n              {\n                \"id\": \"5ae8dd16029a550039b83f03\",\n                \"createdAt\": 1525210390,\n                \"source\": {\n                  \"name\": \"Swarm for iOS\",\n                  \"url\": \"https://www.swarmapp.com\"\n                },\n                \"prefix\": \"https://fastly.4sqi.net/img/general/\",\n                \"suffix\": \"/386427136_I5e039H76JppC17htf_W1O024KONpSL6cjmJVsjqps0.jpg\",\n                \"width\": 1440,\n                \"height\": 1920,\n                \"visibility\": \"public\"\n              },\n              {\n                \"id\": \"5ae87ec28496ca002c036bb0\",\n                \"createdAt\": 1525186242,\n                \"source\": {\n                  \"name\": \"Swarm for iOS\",\n                  \"url\": \"https://www.swarmapp.com\"\n                },\n                \"prefix\": \"https://fastly.4sqi.net/img/general/\",\n                \"suffix\": \"/47321_be2z7K5ZLWO4wOs5wBuyzrKCTlNf0HWNvuskWcie8tI.jpg\",\n                \"width\": 1440,\n                \"height\": 1920,\n                \"visibility\": \"public\"\n              },\n              {\n                \"id\": \"5ae85d7f031320002cffa778\",\n                \"createdAt\": 1525177727,\n                \"source\": {\n                  \"name\": \"Swarm for Android\",\n                  \"url\": \"https://www.swarmapp.com\"\n                },\n                \"prefix\": \"https://fastly.4sqi.net/img/general/\",\n                \"suffix\": \"/619659_zc7zxQjMxMdPeWlBxxr1MpuByFT0QO1zrOqcZBvFmj8.jpg\",\n                \"width\": 1900,\n                \"height\": 1425,\n                \"visibility\": \"public\"\n              }\n            ]\n          }\n        ]\n      },\n      \"venuePage\": {\n        \"id\": \"489091283\"\n      },\n      \"reasons\": {\n        \"count\": 1,\n        \"items\": [\n          {\n            \"summary\": \"Lots of people like this place\",\n            \"type\": \"general\",\n            \"reasonName\": \"rawLikesReason\"\n          }\n        ]\n      },\n      \"description\": \"Foursquare helps you find places you’ll love, anywhere in the world.\",\n      \"page\": {\n        \"user\": {\n          \"firstName\": \"Foursquare HQ\",\n          \"countryCode\": \"US\",\n          \"type\": \"venuePage\",\n          \"venue\": {\n            \"id\": \"5a187743ccad6b307315e6fe\"\n          },\n          \"tips\": {\n            \"count\": 0\n          },\n          \"lists\": {\n            \"groups\": [\n              {\n                \"type\": \"created\",\n                \"count\": 2,\n                \"items\": []\n              }\n            ]\n          },\n          \"bio\": \"\"\n        }\n      },\n      \"createdAt\": 1511552835,\n      \"hereNow\": {\n        \"count\": 1,\n        \"summary\": \"One other person is here\",\n        \"groups\": [\n          {\n            \"type\": \"others\",\n            \"name\": \"Other people here\",\n            \"count\": 1,\n            \"items\": []\n          }\n        ]\n      },\n      \"tips\": {\n        \"count\": 41,\n        \"groups\": [\n          {\n            \"type\": \"others\",\n            \"name\": \"All tips\",\n            \"count\": 41,\n            \"items\": [\n              {\n                \"id\": \"5c6c99eab9b37b002c0a67a5\",\n                \"createdAt\": 1550621162,\n                \"text\": \"The people who work here are friendly.\",\n                \"type\": \"user\",\n                \"canonicalUrl\": \"https://foursquare.com/item/5c6c99eab9b37b002c0a67a5\",\n                \"likes\": {\n                  \"count\": 0,\n                  \"groups\": []\n                },\n                \"logView\": true,\n                \"agreeCount\": 1,\n                \"disagreeCount\": 0,\n                \"todo\": {\n                  \"count\": 0\n                },\n                \"user\": {\n                  \"firstName\": \"John\",\n                  \"lastName\": \"Smith\",\n                  \"address\": \"\",\n                  \"city\": \"\",\n                  \"state\": \"\",\n                  \"countryCode\": \"US\"\n                }\n              },\n              {\n                \"id\": \"5c196e40db2aeb002cd8761f\",\n                \"createdAt\": 1545170496,\n                \"text\": \"Rooms on the engineering side are all nature/outdoors related. Everything else is alphabetical starting from the lobby clockwise\",\n                \"type\": \"user\",\n                \"canonicalUrl\": \"https://foursquare.com/item/5c196e40db2aeb002cd8761f\",\n                \"likes\": {\n                  \"count\": 0,\n                  \"groups\": []\n                },\n                \"logView\": true,\n                \"agreeCount\": 1,\n                \"disagreeCount\": 0,\n                \"todo\": {\n                  \"count\": 0\n                },\n                \"user\": {\n                  \"firstName\": \"John\",\n                  \"lastName\": \"Smith\",\n                  \"address\": \"\",\n                  \"city\": \"\",\n                  \"state\": \"\",\n                  \"countryCode\": \"US\"\n                },\n                \"authorInteractionType\": \"liked\"\n              },\n              {\n                \"id\": \"5c0cab9535d3fc002cabb8f5\",\n                \"createdAt\": 1544334229,\n                \"text\": \"It was cool to see the outside of my favor app. Wish I was inside. Next time though !\",\n                \"type\": \"user\",\n                \"canonicalUrl\": \"https://foursquare.com/item/5c0cab9535d3fc002cabb8f5\",\n                \"likes\": {\n                  \"count\": 0,\n                  \"groups\": []\n                },\n                \"logView\": true,\n                \"agreeCount\": 0,\n                \"disagreeCount\": 0,\n                \"todo\": {\n                  \"count\": 0\n                },\n                \"user\": {\n                  \"firstName\": \"John\",\n                  \"lastName\": \"Smith\",\n                  \"address\": \"\",\n                  \"city\": \"\",\n                  \"state\": \"\",\n                  \"countryCode\": \"US\"\n                }\n              },\n              {\n                \"id\": \"5c22166f67e5f2002ccc377e\",\n                \"createdAt\": 1545737839,\n                \"text\": \"mükemmel harika bir yer\",\n                \"type\": \"user\",\n                \"canonicalUrl\": \"https://foursquare.com/item/5c22166f67e5f2002ccc377e\",\n                \"lang\": \"tr\",\n                \"likes\": {\n                  \"count\": 0,\n                  \"groups\": []\n                },\n                \"logView\": true,\n                \"agreeCount\": 0,\n                \"disagreeCount\": 0,\n                \"todo\": {\n                  \"count\": 0\n                },\n                \"user\": {\n                  \"firstName\": \"John\",\n                  \"lastName\": \"Smith\",\n                  \"address\": \"\",\n                  \"city\": \"\",\n                  \"state\": \"\",\n                  \"countryCode\": \"US\"\n                },\n                \"authorInteractionType\": \"liked\"\n              }\n            ]\n          }\n        ]\n      },\n      \"shortUrl\": \"http://4sq.com/2n15dwb\",\n      \"timeZone\": \"America/New_York\",\n      \"listed\": {\n        \"count\": 45,\n        \"groups\": [\n          {\n            \"type\": \"others\",\n            \"name\": \"Lists from other people\",\n            \"count\": 45,\n            \"items\": [\n              {\n                \"id\": \"5ad0e20146e1b61376729df3\",\n                \"name\": \"A Foursquare history tour in NYC\",\n                \"description\": \"The places on this list hold a special place in the history of Foursquare. As we celebrate our 10th anniversary on 4SQDay - 2019, we share these ten places and their significance in our journey.\",\n                \"type\": \"others\",\n                \"user\": {\n                  \"firstName\": \"Foursquare City Guide\",\n                  \"countryCode\": \"US\",\n                  \"type\": \"page\"\n                },\n                \"editable\": false,\n                \"public\": true,\n                \"collaborative\": false,\n                \"url\": \"/foursquare/list/a-foursquare-history-tour-in-nyc\",\n                \"canonicalUrl\": \"https://foursquare.com/foursquare/list/a-foursquare-history-tour-in-nyc\",\n                \"createdAt\": 1523638785,\n                \"updatedAt\": 1555356575,\n                \"photo\": {\n                  \"id\": \"4fad38e6e4b0348adb9a1f81\",\n                  \"createdAt\": 1336752358,\n                  \"prefix\": \"https://fastly.4sqi.net/img/general/\",\n                  \"suffix\": \"/lzF1d7-k6UyfdeTG7OHoI3htft0ped1oObzkAuPZH1w.jpg\",\n                  \"width\": 720,\n                  \"height\": 540,\n                  \"visibility\": \"public\"\n                },\n                \"logView\": true,\n                \"guideType\": \"itinerary\",\n                \"guide\": true,\n                \"followers\": {\n                  \"count\": 143\n                },\n                \"listItems\": {\n                  \"count\": 10,\n                  \"items\": [\n                    {\n                      \"id\": \"t5ad0c435db3aef092af147a7\",\n                      \"createdAt\": 1523639587,\n                      \"photo\": {\n                        \"id\": \"5a5f5d8e0f013c577354cd0a\",\n                        \"createdAt\": 1516199310,\n                        \"prefix\": \"https://fastly.4sqi.net/img/general/\",\n                        \"suffix\": \"/118155043_p2nDhsjcvLgjn7zAjRvOTad9K28cOqekwBVaaYkxhU0.jpg\",\n                        \"width\": 1440,\n                        \"height\": 1920,\n                        \"visibility\": \"public\"\n                      }\n                    }\n                  ]\n                }\n              },\n              {\n                \"id\": \"4e5b95beb61c4aaa3e182d8d\",\n                \"name\": \"A brief history of foursquare\",\n                \"description\": \"Foursquare (and it's predecessor, dodgeball.com) were designed and built in downtown NYC.  Here's a walking tour of where a lot of the ideas came from.\",\n                \"type\": \"others\",\n                \"user\": {\n                  \"firstName\": \"John\",\n                  \"lastName\": \"Smith\",\n                  \"address\": \"\",\n                  \"city\": \"\",\n                  \"state\": \"\",\n                  \"countryCode\": \"US\"\n                },\n                \"editable\": false,\n                \"public\": true,\n                \"collaborative\": false,\n                \"url\": \"/johnsmith/list/a-brief-history-of-foursquare\",\n                \"canonicalUrl\": \"https://foursquare.com/dens/list/a-brief-history-of-foursquare\",\n                \"createdAt\": 1314624958,\n                \"updatedAt\": 1523632177,\n                \"photo\": {\n                  \"id\": \"4d3213d8c7e92da171098d8f\",\n                  \"createdAt\": 1295127512,\n                  \"prefix\": \"https://fastly.4sqi.net/img/general/\",\n                  \"suffix\": \"/SGZUTVKSRTXNYTBHP0SN1SDSAMWH21CPQGEBWOURHYLDOGYE.jpg\",\n                  \"width\": 540,\n                  \"height\": 720,\n                  \"visibility\": \"public\"\n                },\n                \"followers\": {\n                  \"count\": 1295\n                },\n                \"listItems\": {\n                  \"count\": 19,\n                  \"items\": [\n                    {\n                      \"id\": \"t5ad0c435db3aef092af147a7\",\n                      \"createdAt\": 1523632177\n                    }\n                  ]\n                }\n              },\n              {\n                \"id\": \"51472a4be4b031528dfbb567\",\n                \"name\": \"Inspirational\",\n                \"description\": \"\",\n                \"type\": \"others\",\n                \"user\": {\n                  \"firstName\": \"John\",\n                  \"lastName\": \"Smith\",\n                  \"address\": \"\",\n                  \"city\": \"\",\n                  \"state\": \"\",\n                  \"countryCode\": \"US\"\n                },\n                \"editable\": false,\n                \"public\": true,\n                \"collaborative\": false,\n                \"url\": \"/johnsmith/list/fun\",\n                \"canonicalUrl\": \"https://foursquare.com/johnsmith/list/fun\",\n                \"createdAt\": 1363618379,\n                \"updatedAt\": 1659652684,\n                \"photo\": {\n                  \"id\": \"5145e2e4e4b0c10764168ad4\",\n                  \"createdAt\": 1363534564,\n                  \"prefix\": \"https://fastly.4sqi.net/img/general/\",\n                  \"suffix\": \"/22546s01_Hn532o-o83K4sVli4AS9V5HJ0UrTzRsGKHdoiDiob9c.jpg\",\n                  \"width\": 540,\n                  \"height\": 960,\n                  \"visibility\": \"public\"\n                },\n                \"followers\": {\n                  \"count\": 9\n                },\n                \"listItems\": {\n                  \"count\": 71,\n                  \"items\": [\n                    {\n                      \"id\": \"v5a187743ccad6b307315e6fe\",\n                      \"createdAt\": 1587756146\n                    }\n                  ]\n                }\n              },\n              {\n                \"id\": \"5b58d73a9411f2002c8a4fd9\",\n                \"name\": \"Places - Data Sample\",\n                \"description\": \"\",\n                \"type\": \"others\",\n                \"user\": {\n                  \"firstName\": \"John\",\n                  \"lastName\": \"Smith\",\n                  \"countryCode\": \"US\"\n                },\n                \"editable\": false,\n                \"public\": true,\n                \"collaborative\": true,\n                \"url\": \"/user/123456/list/places--data-sample\",\n                \"canonicalUrl\": \"https://foursquare.com/user/123456/list/places--data-sample\",\n                \"createdAt\": 1532548922,\n                \"updatedAt\": 1636566613,\n                \"photo\": {\n                  \"id\": \"5410f7dc498ea83a4fc2772e\",\n                  \"createdAt\": 1410398172,\n                  \"prefix\": \"https://fastly.4sqi.net/img/general/\",\n                  \"suffix\": \"/blank_boy.png\",\n                  \"width\": 720,\n                  \"height\": 792,\n                  \"visibility\": \"public\"\n                },\n                \"followers\": {\n                  \"count\": 9\n                },\n                \"listItems\": {\n                  \"count\": 95,\n                  \"items\": [\n                    {\n                      \"id\": \"v5a187743ccad6b307315e6fe\",\n                      \"user\": {\n                        \"firstName\": \"John\",\n                        \"lastName\": \"Smith\",\n                        \"address\": \"\",\n                        \"city\": \"\",\n                        \"state\": \"\",\n                        \"countryCode\": \"US\",\n                        \"tips\": {\n                          \"count\": 101\n                        },\n                        \"lists\": {\n                          \"groups\": [\n                            {\n                              \"type\": \"created\",\n                              \"count\": 9,\n                              \"items\": []\n                            }\n                          ]\n                        },\n                        \"bio\": \"\",\n                        \"superuser\": 9\n                      },\n                      \"createdAt\": 1532550368\n                    }\n                  ]\n                }\n              }\n            ]\n          }\n        ]\n      },\n      \"phrases\": [\n        {\n          \"phrase\": \"location intelligence\",\n          \"sample\": {\n            \"entities\": [\n              {\n                \"indices\": [\n                  4,\n                  25\n                ],\n                \"type\": \"keyPhrase\"\n              }\n            ],\n            \"text\": \"The location intelligence is great here.\"\n          },\n          \"count\": 2\n        },\n        {\n          \"phrase\": \"library\",\n          \"sample\": {\n            \"entities\": [\n              {\n                \"indices\": [\n                  4,\n                  11\n                ],\n                \"type\": \"keyPhrase\"\n              }\n            ],\n            \"text\": \"The Library is great for quiet work\"\n          },\n          \"count\": 3\n        }\n      ],\n      \"popular\": {\n        \"status\": \"Likely open\",\n        \"richStatus\": {\n          \"entities\": [],\n          \"text\": \"Likely open\"\n        },\n        \"isOpen\": true,\n        \"isLocalHoliday\": false,\n        \"timeframes\": [\n          {\n            \"days\": \"Today\",\n            \"includesToday\": true,\n            \"open\": [\n              {\n                \"renderedTime\": \"8:00 AM–5:00 PM\"\n              }\n            ],\n            \"segments\": []\n          },\n          {\n            \"days\": \"Sat–Sun\",\n            \"open\": [\n              {\n                \"renderedTime\": \"None\"\n              }\n            ],\n            \"segments\": []\n          },\n          {\n            \"days\": \"Mon\",\n            \"open\": [\n              {\n                \"renderedTime\": \"8:00 AM–5:00 PM\"\n              }\n            ],\n            \"segments\": []\n          },\n          {\n            \"days\": \"Tue\",\n            \"open\": [\n              {\n                \"renderedTime\": \"8:00 AM–8:00 PM\"\n              }\n            ],\n            \"segments\": []\n          },\n          {\n            \"days\": \"Wed\",\n            \"open\": [\n              {\n                \"renderedTime\": \"8:00 AM–6:00 PM\"\n              }\n            ],\n            \"segments\": []\n          },\n          {\n            \"days\": \"Thu\",\n            \"open\": [\n              {\n                \"renderedTime\": \"8:00 AM–7:00 PM\"\n              }\n            ],\n            \"segments\": []\n          }\n        ]\n      },\n      \"seasonalHours\": [],\n      \"pageUpdates\": {\n        \"count\": 0,\n        \"items\": []\n      },\n      \"inbox\": {\n        \"count\": 0,\n        \"items\": []\n      },\n      \"parent\": {\n        \"id\": \"5b30ed35c824ae002c74e557\",\n        \"name\": \"50 W 23rd Street\",\n        \"location\": {\n          \"address\": \"50 W 23rd St\",\n          \"lat\": 40.7421197888959,\n          \"lng\": -73.99177193641663,\n          \"labeledLatLngs\": [\n            {\n              \"label\": \"display\",\n              \"lat\": 40.7421197888959,\n              \"lng\": -73.99177193641663\n            }\n          ],\n          \"postalCode\": \"10010\",\n          \"cc\": \"US\",\n          \"neighborhood\": \"Flatiron District\",\n          \"city\": \"New York\",\n          \"state\": \"NY\",\n          \"country\": \"United States\",\n          \"formattedAddress\": [\n            \"50 W 23rd St\",\n            \"New York, NY 10010\",\n            \"United States\"\n          ]\n        },\n        \"categories\": [\n          {\n            \"id\": \"4bf58dd8d48988d130941735\",\n            \"name\": \"Building\",\n            \"pluralName\": \"Buildings\",\n            \"shortName\": \"Building\",\n            \"icon\": {\n              \"prefix\": \"https://ss3.4sqi.net/img/categories_v2/building/default_\",\n              \"suffix\": \".png\"\n            },\n            \"primary\": true\n          }\n        ],\n        \"createdAt\": 1529933109\n      },\n      \"hierarchy\": [\n        {\n          \"name\": \"50 W 23rd Street\",\n          \"lang\": \"en\",\n          \"id\": \"5b30ed35c824ae002c74e557\",\n          \"canonicalUrl\": \"https://foursquare.com/v/50-w-23rd-street/5b30ed35c824ae002c74e557\"\n        }\n      ],\n      \"attributes\": {\n        \"groups\": []\n      },\n      \"bestPhoto\": {\n        \"id\": \"5aeb7f7389ad460024c22206\",\n        \"createdAt\": 1525383027,\n        \"source\": {\n          \"name\": \"Swarm for iOS\",\n          \"url\": \"https://www.swarmapp.com\"\n        },\n        \"prefix\": \"https://fastly.4sqi.net/img/general/\",\n        \"suffix\": \"/5435652_tVudly9wn9jCMpn9N6qT54RBpyx-rc3BGWg9o4E1gOk.jpg\",\n        \"width\": 1440,\n        \"height\": 1828,\n        \"visibility\": \"public\"\n      },\n      \"colors\": {\n        \"highlightColor\": {\n          \"photoId\": \"5aeb7f7389ad460024c22206\",\n          \"value\": -7317408\n        },\n        \"highlightTextColor\": {\n          \"photoId\": \"5aeb7f7389ad460024c22206\",\n          \"value\": -1\n        },\n        \"algoVersion\": 3\n      }\n    }\n  }\n}\n"
                  }
                },
                "schema": {
                  "description": "Response object containing information about a specific venue.",
                  "properties": {
                    "description": "Response object containing the retrieved venue data.",
                    "meta": {
                      "description": "Response metadata for retrieving a specific venue's information.",
                      "properties": {
                        "code": {
                          "default": 0,
                          "description": "Status code indicating the result of the API request.",
                          "example": 200,
                          "type": "integer"
                        },
                        "description": "Response object containing metadata for a successful request to retrieve information about a specific venue.",
                        "requestId": {
                          "description": "Unique identifier for the API request.",
                          "example": "6414976cc061821472274e5e",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "response": {
                      "description": "Response object containing information about a specific venue.",
                      "properties": {
                        "description": "Response object containing information about a specific venue.",
                        "venue": {
                          "description": "Information about the specified venue.",
                          "properties": {
                            "attributes": {
                              "description": "Array of attributes for a specific venue.",
                              "properties": {
                                "description": "A specific venue's attributes.",
                                "groups": {
                                  "description": "Array of venue attribute groups for a specific venue.",
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            },
                            "beenHere": {
                              "description": "Number of times the authenticated user has visited the specified venue.",
                              "properties": {
                                "count": {
                                  "default": 0,
                                  "description": "The number of times a user has checked in at a specific venue.",
                                  "example": 0,
                                  "type": "integer"
                                },
                                "description": "Response containing information about the user's check-in status for the specified venue.",
                                "lastCheckinExpiredAt": {
                                  "default": 0,
                                  "description": "Last check-in expiration timestamp for the specified venue; UNIX timestamp in seconds since Epoch.",
                                  "example": 0,
                                  "type": "integer"
                                },
                                "marked": {
                                  "default": true,
                                  "description": "Flag indicating if the user has marked the venue as visited.",
                                  "example": false,
                                  "type": "boolean"
                                },
                                "unconfirmedCount": {
                                  "default": 0,
                                  "description": "Number of unconfirmed check-ins at a specific venue.",
                                  "example": 0,
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            },
                            "bestPhoto": {
                              "description": "The best photo for a given venue.",
                              "properties": {
                                "createdAt": {
                                  "default": 0,
                                  "description": "Timestamp indicating the creation date of the best photo for a given venue; UNIX timestamp in seconds since Epoch.",
                                  "example": 1525383027,
                                  "type": "integer"
                                },
                                "description": "Photo object for the best photo of the specified venue.",
                                "height": {
                                  "default": 0,
                                  "description": "Height of the best photo for a specific venue.",
                                  "example": 1828,
                                  "type": "integer"
                                },
                                "id": {
                                  "description": "The unique identifier for the best photo of a specific venue.",
                                  "example": "5aeb7f7389ad460024c22206",
                                  "type": "string"
                                },
                                "prefix": {
                                  "description": "The prefix for the best photo of the specified venue.",
                                  "example": "https://fastly.4sqi.net/img/general/",
                                  "type": "string"
                                },
                                "source": {
                                  "description": "The best photo source for a specific venue.",
                                  "properties": {
                                    "description": "The source of the best photo for a given venue.",
                                    "name": {
                                      "description": "The name of the source for the best photo of a specific venue.",
                                      "example": "Swarm for iOS",
                                      "type": "string"
                                    },
                                    "url": {
                                      "description": "Response object containing the best photo source URL for a specified venue.",
                                      "example": "https://www.swarmapp.com",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "suffix": {
                                  "description": "The suffix for the best photo of a specific venue.",
                                  "example": "/5435652_tVudly9wn9jCMpn9N6qT54RBpyx-rc3BGWg9o4E1gOk.jpg",
                                  "type": "string"
                                },
                                "visibility": {
                                  "description": "The visibility property of the best photo from a specific venue.",
                                  "example": "public",
                                  "type": "string"
                                },
                                "width": {
                                  "default": 0,
                                  "description": "Width of the best photo for a specific venue.",
                                  "example": 1440,
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            },
                            "canonicalUrl": {
                              "description": "The canonical URL for a specific venue.",
                              "example": "https://foursquare.com/v/foursquare-hq/5a187743ccad6b307315e6fe",
                              "type": "string"
                            },
                            "categories": {
                              "description": "Array of all categories applicable to the venue.",
                              "properties": {
                                "id": {
                                  "description": "The ID for the category.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "The full name of the category.",
                                  "type": "string"
                                },
                                "pluralName": {
                                  "description": "A plural name for the category.",
                                  "type": "string"
                                },
                                "shortName": {
                                  "description": "A short name for the category.",
                                  "type": "string"
                                },
                                "icon": {
                                  "description": "Icon for categories associated with a venue search response.",
                                  "properties": {
                                    "prefix": {
                                      "description": "The URL prefix for the icon.",
                                      "type": "string"
                                    },
                                    "suffix": {
                                      "description": "The URL suffix for the icon.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "categoryCode": {
                                  "description": "Unique 5-integer style code for the category associated with the given venue ID.",
                                  "example": 11180,
                                  "type": "string"
                                },
                                "categories": {
                                  "description": "Child categories.",
                                  "properties": {
                                    "id": {
                                      "description": "The ID for the category.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "The full name of the category.",
                                      "type": "string"
                                    },
                                    "pluralName": {
                                      "description": "A plural name for the category.",
                                      "type": "string"
                                    },
                                    "shortName": {
                                      "description": "A short name for the category.",
                                      "type": "string"
                                    },
                                    "icon": {
                                      "description": "Icon for categories associated with a venue search response.",
                                      "properties": {
                                        "prefix": {
                                          "description": "The URL prefix for the icon.",
                                          "type": "string"
                                        },
                                        "suffix": {
                                          "description": "The URL suffix for the icon.",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "categoryCode": {
                                      "description": "Unique 5-integer style code for the category associated with the given venue ID.",
                                      "example": 11180,
                                      "type": "string"
                                    }
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "colors": {
                              "description": "Object containing the colors associated with a specific venue.",
                              "properties": {
                                "algoVersion": {
                                  "default": 0,
                                  "description": "Version of the algorithm used to calculate the colors of a specific venue's properties in the response.",
                                  "example": 3,
                                  "type": "integer"
                                },
                                "description": "Array of color objects containing additional information about the venue's color palette.",
                                "highlightColor": {
                                  "description": "Color highlight for a specific venue.",
                                  "properties": {
                                    "description": "Highlight color of a venue's colors.",
                                    "photoId": {
                                      "description": "Unique identifier for the highlight photo of the specified venue.",
                                      "example": "5aeb7f7389ad460024c22206",
                                      "type": "string"
                                    },
                                    "value": {
                                      "default": 0,
                                      "description": "The highlight color value for a specific venue's colors.",
                                      "example": -7317408,
                                      "type": "integer"
                                    }
                                  },
                                  "type": "object"
                                },
                                "highlightTextColor": {
                                  "description": "The highlight text color of a specific venue's colors.",
                                  "properties": {
                                    "description": "Response object containing the colors of the highlighted text for a specific venue.",
                                    "photoId": {
                                      "description": "The photo ID of the highlighted text color of a specific venue.",
                                      "example": "5aeb7f7389ad460024c22206",
                                      "type": "string"
                                    },
                                    "value": {
                                      "default": 0,
                                      "description": "Highlight text color value for a specific venue.",
                                      "example": -1,
                                      "type": "integer"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            },
                            "contact": {
                              "description": "Contact information for the specified venue.",
                              "properties": {
                                "description": "Contact information for the specified venue.",
                                "formattedPhone": {
                                  "description": "Formatted phone number for a specific venue.",
                                  "example": "(646) 380-4813",
                                  "type": "string"
                                },
                                "instagram": {
                                  "description": "The Instagram contact information for a specific venue.",
                                  "example": "foursquare",
                                  "type": "string"
                                },
                                "phone": {
                                  "description": "Phone number for a specific venue.",
                                  "example": "6463804813",
                                  "type": "string"
                                },
                                "twitter": {
                                  "description": "Twitter account associated with a specific venue.",
                                  "example": "foursquare",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "createdAt": {
                              "default": 0,
                              "description": "The creation date of the specified venue; UNIX timestamp in seconds since Epoch.",
                              "example": 1511552835,
                              "type": "integer"
                            },
                            "description": {
                              "example": "Foursquare helps you find places you’ll love, anywhere in the world.",
                              "type": "string"
                            },
                            "dislike": {
                              "default": true,
                              "description": "Flag indicating if the user has disliked the specified venue.",
                              "example": false,
                              "type": "boolean"
                            },
                            "hereNow": {
                              "description": "Number of users currently checked in at the specified venue.",
                              "properties": {
                                "count": {
                                  "default": 0,
                                  "description": "Number of people currently checked in at the specified venue.",
                                  "example": 1,
                                  "type": "integer"
                                },
                                "description": "Properties of the 'hereNow' object for a specific venue.",
                                "groups": {
                                  "description": "Array of groups currently at the specified venue.",
                                  "items": {
                                    "description": "Array of groups containing information about the current people at the specified venue.",
                                    "properties": {
                                      "count": {
                                        "default": 0,
                                        "description": "Total number of users currently checked in at the specified venue.",
                                        "example": 1,
                                        "type": "integer"
                                      },
                                      "description": "Number of other people currently checked in at the specified venue.",
                                      "items": {
                                        "description": "Array of items representing currently checked-in users at a specific venue.",
                                        "type": "array"
                                      },
                                      "name": {
                                        "description": "The names of the groups currently at the specified venue.",
                                        "example": "Other people here",
                                        "type": "string"
                                      },
                                      "type": {
                                        "description": "Type of groups currently at the specified venue.",
                                        "example": "others",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "summary": {
                                  "description": "The summary of current check-ins at the specified venue.",
                                  "example": "One other person is here",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "hierarchy": {
                              "description": "Array of hierarchical properties for the specified venue.",
                              "items": {
                                "description": "Array of venue objects representing the hierarchy of parent venues for the specified venue.",
                                "properties": {
                                  "canonicalUrl": {
                                    "description": "The canonical URL for the venue's hierarchy items.",
                                    "example": "https://foursquare.com/v/50-w-23rd-street/5b30ed35c824ae002c74e557",
                                    "type": "string"
                                  },
                                  "description": "Array of venue hierarchy objects for the specified venue.",
                                  "id": {
                                    "description": "The unique identifier for a venue's hierarchy item.",
                                    "example": "5b30ed35c824ae002c74e557",
                                    "type": "string"
                                  },
                                  "lang": {
                                    "description": "The language property for the venue hierarchy items in the response for the given venue ID.",
                                    "example": "en",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name of the venue.",
                                    "example": "50 W 23rd Street",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "id": {
                              "description": "Unique identifier for the specified venue.",
                              "example": "5a187743ccad6b307315e6fe",
                              "type": "string"
                            },
                            "inbox": {
                              "description": "Object representing the inbox for a specific venue.",
                              "properties": {
                                "count": {
                                  "default": 0,
                                  "description": "The total number of messages in the venue's inbox.",
                                  "example": 0,
                                  "type": "integer"
                                },
                                "description": "Array of notification objects containing data about the venue's inbox.",
                                "items": {
                                  "description": "Array of inbox items for a specific venue.",
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            },
                            "likes": {
                              "description": "Venue likes response for a specific venue.",
                              "properties": {
                                "count": {
                                  "default": 0,
                                  "description": "Total number of likes for a specific venue.",
                                  "example": 141,
                                  "type": "integer"
                                },
                                "description": "Number of likes for a specific venue.",
                                "groups": {
                                  "description": "The list of groups that liked a specific venue.",
                                  "items": {
                                    "description": "Array of groups containing information about users who have liked the specified venue.",
                                    "properties": {
                                      "count": {
                                        "default": 0,
                                        "description": "The total number of users who have liked the specified venue.",
                                        "example": 141,
                                        "type": "integer"
                                      },
                                      "description": "An array of objects containing information about the users who have liked this venue.",
                                      "items": {
                                        "description": "List of users who have liked this venue.",
                                        "type": "array"
                                      },
                                      "type": {
                                        "description": "Type of the liked item at the specified venue.",
                                        "example": "others",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "summary": {
                                  "description": "Summary of likes for a specific venue. ",
                                  "example": "141 Likes",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "listed": {
                              "description": "Array of objects containing information about the lists that the venue is listed on.",
                              "properties": {
                                "count": {
                                  "default": 0,
                                  "description": "Total number of times the venue has been listed.",
                                  "example": 45,
                                  "type": "integer"
                                },
                                "description": "Array of listed items at the specified venue.",
                                "groups": {
                                  "description": "Array of groups containing lists where the specified venue has been listed.",
                                  "items": {
                                    "description": "List of groups associated with the specified venue.",
                                    "properties": {
                                      "count": {
                                        "default": 0,
                                        "description": "Number of groups the venue is listed in.",
                                        "example": 45,
                                        "type": "integer"
                                      },
                                      "description": "List of groups associated with a specific venue.",
                                      "items": {
                                        "description": "Array of items within groups listed at the specified venue.",
                                        "items": {
                                          "description": "An array of items containing lists of venues that match the specified venue ID.",
                                          "properties": {
                                            "canonicalUrl": {
                                              "description": "The canonical URL for the items within a specific venue's listed groups.",
                                              "example": "https://foursquare.com/foursquare/list/a-foursquare-history-tour-in-nyc",
                                              "type": "string"
                                            },
                                            "collaborative": {
                                              "default": true,
                                              "description": "Flag indicating if the venue is collaborative or not.",
                                              "example": false,
                                              "type": "boolean"
                                            },
                                            "createdAt": {
                                              "default": 0,
                                              "description": "Creation date for items associated with a specific venue's listed groups in the response; UNIX timestamp in seconds since Epoch.",
                                              "example": 1523638785,
                                              "type": "integer"
                                            },
                                            "description": {
                                              "example": "The places on this list hold a special place in the history of Foursquare. As we celebrate our 10th anniversary on 4SQDay - 2019, we share these ten places and their significance in our journey.",
                                              "type": "string"
                                            },
                                            "editable": {
                                              "default": true,
                                              "description": "Indicates whether the venue's listed groups are editable by the user.",
                                              "example": false,
                                              "type": "boolean"
                                            },
                                            "followers": {
                                              "description": "List of followers for a specific venue's listed items.",
                                              "properties": {
                                                "count": {
                                                  "default": 0,
                                                  "description": "Number of followers for a venue's listed item in a group.",
                                                  "example": 143,
                                                  "type": "integer"
                                                },
                                                "description": "Array of follower objects containing information about the users who have listed the specified venue in their lists."
                                              },
                                              "type": "object"
                                            },
                                            "guide": {
                                              "default": true,
                                              "description": "Whether information was provided by a guide.",
                                              "example": true,
                                              "type": "boolean"
                                            },
                                            "guideType": {
                                              "description": "The guide type for the items listed in the groups of the specified venue.",
                                              "example": "itinerary",
                                              "type": "string"
                                            },
                                            "id": {
                                              "description": "The unique identifier for each listed item.",
                                              "example": "5ad0e20146e1b61376729df3",
                                              "type": "string"
                                            },
                                            "listItems": {
                                              "description": "List items for a specific venue.",
                                              "properties": {
                                                "count": {
                                                  "default": 0,
                                                  "description": "Total number of list items for a given venue.",
                                                  "example": 10,
                                                  "type": "integer"
                                                },
                                                "description": "List of lists of items that are associated with the specified venue.",
                                                "items": {
                                                  "description": "Array of items within a list of user-generated content for a specific venue, including photos, check-ins, and other details.",
                                                  "items": {
                                                    "description": "Array of list items containing information about groups associated with the listed venue.",
                                                    "properties": {
                                                      "createdAt": {
                                                        "default": 0,
                                                        "description": "Creation date of items listed in a group within a venue's list; UNIX timestamp in seconds since Epoch.",
                                                        "example": 1523639587,
                                                        "type": "integer"
                                                      },
                                                      "description": "Array of list items for a specific venue, including the name, description, and other relevant information for each item.",
                                                      "id": {
                                                        "description": "The unique identifier for each listed item at a specific venue.",
                                                        "example": "t5ad0c435db3aef092af147a7",
                                                        "type": "string"
                                                      },
                                                      "photo": {
                                                        "description": "List of photos for a specific venue.",
                                                        "properties": {
                                                          "createdAt": {
                                                            "default": 0,
                                                            "description": "Creation date of a photo associated with a venue's list items; UNIX timestamp in seconds since Epoch.",
                                                            "example": 1516199310,
                                                            "type": "integer"
                                                          },
                                                          "description": "List of photos associated with a specific venue, including the user who uploaded the photo and the associated check-in information, if applicable.",
                                                          "height": {
                                                            "default": 0,
                                                            "description": "Height of the photo associated with the items in the list within the specified venue.",
                                                            "example": 1920,
                                                            "type": "integer"
                                                          },
                                                          "id": {
                                                            "description": "The unique identifier for the photo associated with the venue's listed items in the check-in response for the specified venue ID.",
                                                            "example": "5a5f5d8e0f013c577354cd0a",
                                                            "type": "string"
                                                          },
                                                          "prefix": {
                                                            "description": "Prefix for photos in a list of venues.",
                                                            "example": "https://fastly.4sqi.net/img/general/",
                                                            "type": "string"
                                                          },
                                                          "suffix": {
                                                            "description": "Photo suffix for the listed items associated with a specific venue.",
                                                            "example": "/118155043_p2nDhsjcvLgjn7zAjRvOTad9K28cOqekwBVaaYkxhU0.jpg",
                                                            "type": "string"
                                                          },
                                                          "visibility": {
                                                            "description": "Contains information about the visibility of photos associated with items in a venue's list.",
                                                            "example": "public",
                                                            "type": "string"
                                                          },
                                                          "width": {
                                                            "default": 0,
                                                            "description": "Width of the photo for a specific venue.",
                                                            "example": 1440,
                                                            "type": "integer"
                                                          }
                                                        },
                                                        "type": "object"
                                                      }
                                                    },
                                                    "type": "object"
                                                  },
                                                  "type": "array"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "logView": {
                                              "default": true,
                                              "description": "Array of items containing log views for the listed groups at the specified venue.",
                                              "example": true,
                                              "type": "boolean"
                                            },
                                            "name": {
                                              "description": "The name of the venue listed in the response for the specified venue ID.",
                                              "example": "A Foursquare history tour in NYC",
                                              "type": "string"
                                            },
                                            "photo": {
                                              "description": "List of photos for a specific venue.",
                                              "properties": {
                                                "createdAt": {
                                                  "default": 0,
                                                  "description": "Timestamp indicating when the photo was created; UNIX timestamp in seconds since Epoch.",
                                                  "example": 1336752358,
                                                  "type": "integer"
                                                },
                                                "description": "Array of photo objects associated with the listed groups at the specified venue.",
                                                "height": {
                                                  "default": 0,
                                                  "description": "Height of photos in a list of groups at a specific venue.",
                                                  "example": 540,
                                                  "type": "integer"
                                                },
                                                "id": {
                                                  "description": "The unique identifier for the photo associated with the listed group items for the given venue.",
                                                  "example": "4fad38e6e4b0348adb9a1f81",
                                                  "type": "string"
                                                },
                                                "prefix": {
                                                  "description": "The prefix for a photo associated with a venue's listed groups.",
                                                  "example": "https://fastly.4sqi.net/img/general/",
                                                  "type": "string"
                                                },
                                                "suffix": {
                                                  "description": "The URL suffix for the photo.",
                                                  "example": "/lzF1d7-k6UyfdeTG7OHoI3htft0ped1oObzkAuPZH1w.jpg",
                                                  "type": "string"
                                                },
                                                "visibility": {
                                                  "description": "The visibility status of photos.",
                                                  "example": "public",
                                                  "type": "string"
                                                },
                                                "width": {
                                                  "default": 0,
                                                  "description": "The width of the photo associated with an item in a list within a venue's groups.",
                                                  "example": 720,
                                                  "type": "integer"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "public": {
                                              "default": true,
                                              "description": "Boolean indicating if the item is publicly listed for the specified venue.",
                                              "example": true,
                                              "type": "boolean"
                                            },
                                            "type": {
                                              "description": "Type of items listed in a venue's groups.",
                                              "example": "others",
                                              "type": "string"
                                            },
                                            "updatedAt": {
                                              "default": 0,
                                              "description": "Updated timestamp for items in the listed groups at the specified venue; UNIX timestamp in seconds since Epoch.",
                                              "example": 1555356575,
                                              "type": "integer"
                                            },
                                            "url": {
                                              "description": "The URL for the listed items at the specified venue.",
                                              "example": "/foursquare/list/a-foursquare-history-tour-in-nyc",
                                              "type": "string"
                                            },
                                            "user": {
                                              "description": "User objects containing information about users who have been listed at a venue.",
                                              "properties": {
                                                "countryCode": {
                                                  "description": "A country code.",
                                                  "example": "US",
                                                  "type": "string"
                                                },
                                                "description": "User objects associated with items in the listed groups at a specific venue.",
                                                "firstName": {
                                                  "description": "First name of the user who created a list associated with a specific venue.",
                                                  "example": "Foursquare City Guide",
                                                  "type": "string"
                                                },
                                                "type": {
                                                  "description": "The type of user who has listed a specific venue in a list group.",
                                                  "example": "page",
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "type": "array"
                                      },
                                      "name": {
                                        "description": "The names of groups listed at a specific venue.",
                                        "example": "Lists from other people",
                                        "type": "string"
                                      },
                                      "type": {
                                        "description": "The type of list that the venue is listed under.",
                                        "example": "others",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            },
                            "location": {
                              "description": "Properties of the location for the specified venue.",
                              "properties": {
                                "address": {
                                  "description": "The address of the specified venue.",
                                  "example": "50 W 23rd St",
                                  "type": "string"
                                },
                                "cc": {
                                  "description": "The country code for the specified venue's location in the response.",
                                  "example": "US",
                                  "type": "string"
                                },
                                "city": {
                                  "description": "The city of a specific venue.",
                                  "example": "New York",
                                  "type": "string"
                                },
                                "country": {
                                  "description": "The country property for a specific venue.",
                                  "example": "United States",
                                  "type": "string"
                                },
                                "crossStreet": {
                                  "description": "The cross street for the venue.",
                                  "example": "btwn 5th & 6th Ave",
                                  "type": "string"
                                },
                                "description": "Location information for a specific venue.",
                                "formattedAddress": {
                                  "description": "List of formatted addresses for the specified venue.",
                                  "items": {
                                    "description": "Formatted address of the specified venue.",
                                    "example": "50 W 23rd St (btwn 5th & 6th Ave)",
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "labeledLatLngs": {
                                  "description": "Labeled latitude and longitude coordinates for a given venue, including label, latitude, and longitude.",
                                  "items": {
                                    "description": "Array of labeled latitude and longitude coordinates for a specific venue.",
                                    "properties": {
                                      "description": "Array of labeled latitude and longitude coordinates for the specified venue.",
                                      "label": {
                                        "description": "Labeled latitude and longitude coordinates for a specific venue.",
                                        "example": "display",
                                        "type": "string"
                                      },
                                      "lat": {
                                        "default": 0,
                                        "description": "Latitude coordinate of the specified venue's location.",
                                        "example": 40.742058823215544,
                                        "type": "number"
                                      },
                                      "lng": {
                                        "default": 0,
                                        "description": "Longitude coordinate of the labeled latitude and longitude coordinates for the specified venue.",
                                        "example": -73.9918041229248,
                                        "type": "number"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "lat": {
                                  "default": 0,
                                  "description": "Latitude coordinate of the specified venue.",
                                  "example": 40.742058823215544,
                                  "type": "number"
                                },
                                "lng": {
                                  "default": 0,
                                  "description": "Longitude coordinate for the specified venue.",
                                  "example": -73.9918041229248,
                                  "type": "number"
                                },
                                "postalCode": {
                                  "description": "The postal code for the specified venue.",
                                  "example": "10010",
                                  "type": "string"
                                },
                                "state": {
                                  "description": "The the state of the venue with the specified ID.",
                                  "example": "NY",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "name": {
                              "description": "ID of the venue's name.",
                              "example": "Foursquare HQ",
                              "type": "string"
                            },
                            "ok": {
                              "default": true,
                              "description": "Indicates if the venue data was successfully retrieved for the specified venue ID.",
                              "example": false,
                              "type": "boolean"
                            },
                            "page": {
                              "description": "Information about the specified venue's associated page.",
                              "properties": {
                                "description": "Properties for retrieving detailed information about a specific venue.",
                                "user": {
                                  "description": "Properties of the user associated with a specific venue page.",
                                  "properties": {
                                    "bio": {
                                      "description": "The user's biography for a specific venue.",
                                      "example": "",
                                      "type": "string"
                                    },
                                    "countryCode": {
                                      "description": "The country code for the user associated with the specified venue page.",
                                      "example": "US",
                                      "type": "string"
                                    },
                                    "description": "Unique identifier for the user who created the venue's page.",
                                    "firstName": {
                                      "description": "First name of the user who uploaded the photo associated with the specified venue ID.",
                                      "example": "Foursquare HQ",
                                      "type": "string"
                                    },
                                    "lists": {
                                      "description": "Array of lists created by the user who uploaded the photo associated with the specified venue.",
                                      "properties": {
                                        "description": "Array of lists created by the user associated with the specified venue.",
                                        "groups": {
                                          "description": "Array of user lists associated with the venue page for a specific venue.",
                                          "items": {
                                            "description": "List of groups containing the user's lists associated with a specific venue.",
                                            "properties": {
                                              "count": {
                                                "default": 0,
                                                "description": "Total number of lists that include the venue.",
                                                "example": 2,
                                                "type": "integer"
                                              },
                                              "description": "Lists of groups that the user has created for the specified venue.",
                                              "items": {
                                                "description": "List of lists containing groups of items associated with a specific venue, organized by users who have created them, within a page of the response for a successful request to retrieve a single venue.",
                                                "type": "array"
                                              },
                                              "type": {
                                                "description": "The type of lists associated with the user who created the specified venue's page.",
                                                "example": "created",
                                                "type": "string"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "type": "array"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "tips": {
                                      "description": "User tips for a specific venue.",
                                      "properties": {
                                        "count": {
                                          "default": 0,
                                          "description": "Number of tips for a specific venue.",
                                          "example": 0,
                                          "type": "integer"
                                        },
                                        "description": "Array of tips objects containing information about tips left by users who have visited the venue."
                                      },
                                      "type": "object"
                                    },
                                    "type": {
                                      "description": "A user's page type for a specific venue.",
                                      "example": "venuePage",
                                      "type": "string"
                                    },
                                    "venue": {
                                      "description": "Full details for a specific venue, including user and page information.",
                                      "properties": {
                                        "description": "Array of user objects containing information about the venue's page.",
                                        "id": {
                                          "description": "The unique identifier for the associated venue.",
                                          "example": "5a187743ccad6b307315e6fe",
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            },
                            "pageUpdates": {
                              "description": "Page updates for a specific venue.",
                              "properties": {
                                "count": {
                                  "default": 0,
                                  "description": "Number of page updates for a specific venue.",
                                  "example": 0,
                                  "type": "integer"
                                },
                                "description": "Response object containing the venue's page updates.",
                                "items": {
                                  "description": "Array of page updates for a specific venue.",
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            },
                            "parent": {
                              "description": "Object representing the parent venue of the specified venue.",
                              "properties": {
                                "categories": {
                                  "description": "Array of categories associated with the parent venue of the specified venue.",
                                  "items": {
                                    "description": "Array of categories associated with the parent venue of the specified venue.",
                                    "properties": {
                                      "description": "Array of category objects for the parent venue of the specified venue.",
                                      "icon": {
                                        "description": "Icon of the parent category of a specific venue.",
                                        "properties": {
                                          "description": "Icon objects for the categories of the parent venue.",
                                          "prefix": {
                                            "description": "The URL prefix for the icon associated with the categories of the parent venue of a specific venue.",
                                            "example": "https://ss3.4sqi.net/img/categories_v2/building/default_",
                                            "type": "string"
                                          },
                                          "suffix": {
                                            "description": "Icon suffix for the categories of the parent venue of the specified venue. ",
                                            "example": ".png",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "id": {
                                        "description": "The unique identifier for the parent category of the specified venue.",
                                        "example": "4bf58dd8d48988d130941735",
                                        "type": "string"
                                      },
                                      "name": {
                                        "description": "Name of the parent category for the specified venue.",
                                        "example": "Building",
                                        "type": "string"
                                      },
                                      "pluralName": {
                                        "description": "The plural names of the categories associated with the parent venue of a specific venue.",
                                        "example": "Buildings",
                                        "type": "string"
                                      },
                                      "primary": {
                                        "default": true,
                                        "description": "Primary categories for the parent venue of the specified venue.",
                                        "example": true,
                                        "type": "boolean"
                                      },
                                      "shortName": {
                                        "description": "Response object containing the parent venue's categories and their shortened names for a successful API request to retrieve a specific venue's information.",
                                        "example": "Building",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "createdAt": {
                                  "default": 0,
                                  "description": "Timestamp indicating when the parent venue was created; UNIX timestamp in seconds since Epoch.",
                                  "example": 1529933109,
                                  "type": "integer"
                                },
                                "description": "Parent venue information for a specific venue. ",
                                "id": {
                                  "description": "Unique identifier for the parent venue of the specified venue.",
                                  "example": "5b30ed35c824ae002c74e557",
                                  "type": "string"
                                },
                                "location": {
                                  "description": "The parent location of the specified venue.",
                                  "properties": {
                                    "address": {
                                      "description": "The address of the parent location for the specified venue.",
                                      "example": "50 W 23rd St",
                                      "type": "string"
                                    },
                                    "cc": {
                                      "description": "The country code (cc) for the venue's parent location for the specified venue ID.",
                                      "example": "US",
                                      "type": "string"
                                    },
                                    "city": {
                                      "description": "The city location of the parent venue associated with the specified venue ID.",
                                      "example": "New York",
                                      "type": "string"
                                    },
                                    "country": {
                                      "description": "Location information for the parent venue's country.",
                                      "example": "United States",
                                      "type": "string"
                                    },
                                    "description": "Location of the parent venue of the specified venue.",
                                    "formattedAddress": {
                                      "description": "Formatted address of the parent venue's location.",
                                      "items": {
                                        "description": "Information about the formatted address for the parent venue of the specified venue.",
                                        "example": "50 W 23rd St",
                                        "type": "string"
                                      },
                                      "type": "array"
                                    },
                                    "labeledLatLngs": {
                                      "description": "List of labeled latitude and longitude coordinates for the parent location of a venue.",
                                      "items": {
                                        "description": "Array of labeled latitude and longitude coordinates for the parent venue's location.",
                                        "properties": {
                                          "description": "Array of labeled latitude and longitude coordinates for the parent location of a specific venue.",
                                          "label": {
                                            "description": "The label for a specific venue's parent location's labeled latitude and longitude coordinates.\"",
                                            "example": "display",
                                            "type": "string"
                                          },
                                          "lat": {
                                            "default": 0,
                                            "description": "Latitude coordinate for the venue's parent location.",
                                            "example": 40.7421197888959,
                                            "type": "number"
                                          },
                                          "lng": {
                                            "default": 0,
                                            "description": "Longitude coordinate for the parent venue's labeled latitude and longitude coordinates associated with the specified venue.",
                                            "example": -73.99177193641663,
                                            "type": "number"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "type": "array"
                                    },
                                    "lat": {
                                      "default": 0,
                                      "description": "The latitude coordinate for the parent location of a specific venue.",
                                      "example": 40.7421197888959,
                                      "type": "number"
                                    },
                                    "lng": {
                                      "default": 0,
                                      "description": "Longitude coordinate of the parent venue's location.",
                                      "example": -73.99177193641663,
                                      "type": "number"
                                    },
                                    "neighborhood": {
                                      "description": "The neighborhood from the parent location of a specific venue.",
                                      "example": "Flatiron District",
                                      "type": "string"
                                    },
                                    "postalCode": {
                                      "description": "The postal code for the parent location of the specified venue.",
                                      "example": "10010",
                                      "type": "string"
                                    },
                                    "state": {
                                      "description": "The state location of the parent venue of the specified venue ID.",
                                      "example": "NY",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "name": {
                                  "description": "The name of the parent venue for the specified venue ID.",
                                  "example": "50 W 23rd Street",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "photos": {
                              "description": "Array of photo objects for the specified venue.",
                              "properties": {
                                "count": {
                                  "default": 0,
                                  "description": "Total number of photos for a specific venue.",
                                  "example": 476,
                                  "type": "integer"
                                },
                                "description": "Response object containing photo data for a specific venue.",
                                "groups": {
                                  "description": "Array of photo groups for a specific venue.",
                                  "items": {
                                    "description": "Array of photo objects for the specified venue.",
                                    "properties": {
                                      "count": {
                                        "default": 0,
                                        "description": "Total number of photos in the response for the specified venue.",
                                        "example": 476,
                                        "type": "integer"
                                      },
                                      "description": "Array of photos associated with the specified venue.",
                                      "items": {
                                        "description": "Array of photo objects for the specified venue.",
                                        "items": {
                                          "description": "Photo items for a specific venue, including information about the photo's source, dimensions, and uploader.",
                                          "properties": {
                                            "createdAt": {
                                              "default": 0,
                                              "description": "Timestamp indicating when the photo was created; UNIX timestamp in seconds since Epoch.",
                                              "example": 1525383027,
                                              "type": "integer"
                                            },
                                            "description": "Array of photo objects from the specified venue.",
                                            "height": {
                                              "default": 0,
                                              "description": "Height of a photo associated with a venue.",
                                              "example": 1828,
                                              "type": "integer"
                                            },
                                            "id": {
                                              "description": "The unique identifier for each photo associated with a specific venue.",
                                              "example": "5aeb7f7389ad460024c22206",
                                              "type": "string"
                                            },
                                            "prefix": {
                                              "description": "The prefix URL for photos for a specific venue.",
                                              "example": "https://fastly.4sqi.net/img/general/",
                                              "type": "string"
                                            },
                                            "source": {
                                              "description": "Properties of the source associated with photos of a specific venue.",
                                              "properties": {
                                                "description": "A list of photos associated with a specific venue.",
                                                "name": {
                                                  "description": "The name of the source for a photo associated with a specific venue.",
                                                  "example": "Swarm for iOS",
                                                  "type": "string"
                                                },
                                                "url": {
                                                  "description": "The URL of the source where the photo associated with the venue's group items is obtained for a specific venue.",
                                                  "example": "https://www.swarmapp.com",
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "suffix": {
                                              "description": "The suffixes for the photo URLs.",
                                              "example": "/5435652_tVudly9wn9jCMpn9N6qT54RBpyx-rc3BGWg9o4E1gOk.jpg",
                                              "type": "string"
                                            },
                                            "visibility": {
                                              "description": "The visibility property for the items within the items property of the groups array within the photos property of the venue object in the response for the specified venue ID.",
                                              "example": "public",
                                              "type": "string"
                                            },
                                            "width": {
                                              "default": 0,
                                              "description": "The width in pixels of the photo associated with the specified venue.",
                                              "example": 1440,
                                              "type": "integer"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "type": "array"
                                      },
                                      "name": {
                                        "description": "The name of the photo group for a specific venue.",
                                        "example": "Venue photos",
                                        "type": "string"
                                      },
                                      "type": {
                                        "description": "Response property for the type of photo group for the specified venue ID.",
                                        "example": "venue",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            },
                            "phrases": {
                              "description": "List of phrases associated with a particular venue.",
                              "items": {
                                "description": "Array of phrases associated with the specified venue.",
                                "properties": {
                                  "count": {
                                    "default": 0,
                                    "description": "Total number of phrases associated with the given venue.",
                                    "example": 2,
                                    "type": "integer"
                                  },
                                  "description": "Array of phrase objects for the specified venue.",
                                  "phrase": {
                                    "description": "A list of phrases associated with a specific venue.",
                                    "example": "location intelligence",
                                    "type": "string"
                                  },
                                  "sample": {
                                    "description": "Sample phrases associated with the specified venue.",
                                    "properties": {
                                      "description": "Array of sample phrases associated with the specified venue.",
                                      "entities": {
                                        "description": "Array of entities in the sample phrase for the specified venue.",
                                        "items": {
                                          "description": "Array of entities mentioned in sample phrases associated with the specified venue.",
                                          "properties": {
                                            "description": "Array of entities associated with the sample key phrase for the specified venue.",
                                            "indices": {
                                              "description": "Array of indices for entities in sample phrases for a specific venue.",
                                              "items": {
                                                "default": 0,
                                                "description": "An array of indices indicating the location of sample entities within the phrases of a venue's recommended phrases.",
                                                "example": 4,
                                                "type": "integer"
                                              },
                                              "type": "array"
                                            },
                                            "type": {
                                              "description": "Type of phrase used in the sample for the specified venue.",
                                              "example": "keyPhrase",
                                              "type": "string"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "type": "array"
                                      },
                                      "text": {
                                        "description": "Sample text for venue phrases at a specific venue.",
                                        "example": "The location intelligence is great here.",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "popular": {
                              "description": "Array of popular venues near the specified venue.",
                              "properties": {
                                "description": "Array of popular venue objects within the specified venue.",
                                "isLocalHoliday": {
                                  "default": true,
                                  "description": "Flag indicating if the venue is a local holiday.",
                                  "example": false,
                                  "type": "boolean"
                                },
                                "isOpen": {
                                  "default": true,
                                  "description": "Indicates if the venue is currently open.",
                                  "example": true,
                                  "type": "boolean"
                                },
                                "richStatus": {
                                  "description": "Venue's popular status with rich details for a specific venue. ",
                                  "properties": {
                                    "description": "Object containing information about the popular venues near the specified venue, including their rich status.",
                                    "entities": {
                                      "description": "List of featured entities at a popular venue.",
                                      "type": "array"
                                    },
                                    "text": {
                                      "description": "The rich status text for a popular venue.",
                                      "example": "Likely open",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "status": {
                                  "description": "Retrieve status information for popular venues at a specific venue.",
                                  "example": "Likely open",
                                  "type": "string"
                                },
                                "timeframes": {
                                  "description": "An array of popular timeframes for the specified venue.",
                                  "items": {
                                    "description": "An array of objects containing the popularity trend data for a specific venue, including the timeframes and associated data for each timeframe.",
                                    "properties": {
                                      "days": {
                                        "description": "A list of popular days for a specific venue.",
                                        "example": "Today",
                                        "type": "string"
                                      },
                                      "description": "Array of timeframes for the popular hours of the specified venue.",
                                      "includesToday": {
                                        "default": true,
                                        "description": "A boolean indicating if the popular timeframes for the specified venue include today.",
                                        "example": true,
                                        "type": "boolean"
                                      },
                                      "open": {
                                        "description": "Array of popular timeframes for the specified venue, including the opening hours for each timeframe.",
                                        "items": {
                                          "description": "Array of opening hours for popular times at the specified venue.",
                                          "properties": {
                                            "description": "Array of objects containing popular timeframes for the specified venue, including open hours for each timeframe.",
                                            "renderedTime": {
                                              "description": "Response object containing popular timeframes for a specific venue, with rendered time for each timeframe.",
                                              "example": "8:00 AM–5:00 PM",
                                              "type": "string"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "type": "array"
                                      },
                                      "segments": {
                                        "description": "Array of popular timeframes for a specific venue, each containing segments of popular hours.",
                                        "type": "array"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            },
                            "reasons": {
                              "description": "Reasons for why the venue was recommended, including user-generated reasons and reasons based on user behavior.",
                              "properties": {
                                "count": {
                                  "default": 0,
                                  "description": "Total number of reasons for the venue recommendation.",
                                  "example": 1,
                                  "type": "integer"
                                },
                                "description": "The venue's reasons for why it may or may not be a good recommendation in the response.",
                                "items": {
                                  "description": "Array of reasons for why the venue was recommended, including user-generated reasons and reasons based on user behavior.",
                                  "items": {
                                    "description": "Reasons for the popularity of a specific venue. ",
                                    "properties": {
                                      "description": "Array of reasons for the specified venue, each with additional information about the item, including the reason for the recommendation.",
                                      "reasonName": {
                                        "description": "Tastehe name of the reason.",
                                        "example": "rawLikesReason",
                                        "type": "string"
                                      },
                                      "summary": {
                                        "description": "The reason for the success of retrieving the details of a specific venue.",
                                        "example": "Lots of people like this place",
                                        "type": "string"
                                      },
                                      "type": {
                                        "description": "Type of reasons associated with a specific venue.",
                                        "example": "general",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            },
                            "seasonalHours": {
                              "description": "Venue's seasonal hours for a specific venue.",
                              "type": "array"
                            },
                            "shortUrl": {
                              "description": "A shortened URL for the specified venue.",
                              "example": "http://4sq.com/2n15dwb",
                              "type": "string"
                            },
                            "stats": {
                              "description": "Number of stats for a specific venue.",
                              "properties": {
                                "description": "Venue statistics for a specific venue identified by venue ID.",
                                "tipCount": {
                                  "default": 0,
                                  "description": "The total number of tips for a specific venue.",
                                  "example": 41,
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            },
                            "timeZone": {
                              "description": "The time zone of a specified venue.",
                              "example": "America/New_York",
                              "type": "string"
                            },
                            "tips": {
                              "description": "Array of tip objects for the specified venue.",
                              "properties": {
                                "count": {
                                  "default": 0,
                                  "description": "Total number of tips for the specified venue.",
                                  "example": 41,
                                  "type": "integer"
                                },
                                "description": "Properties of the tips associated with a specific venue.",
                                "groups": {
                                  "description": "Array of tip groups for a specific venue.",
                                  "items": {
                                    "description": "Array of tip group objects containing tips for the specified venue.",
                                    "properties": {
                                      "count": {
                                        "default": 0,
                                        "description": "The total number of tips for a specific venue.",
                                        "example": 41,
                                        "type": "integer"
                                      },
                                      "description": "An array of tip groups containing items for tips for the specified venue. ",
                                      "items": {
                                        "description": "Array of tips from groups associated with the specified venue.",
                                        "items": {
                                          "description": "Array of tips from the venue's groups.",
                                          "properties": {
                                            "agreeCount": {
                                              "default": 0,
                                              "description": "Number of users who agree with this tip for the specified venue.",
                                              "example": 1,
                                              "type": "integer"
                                            },
                                            "canonicalUrl": {
                                              "description": "The canonical URL for the tips associated with a specific venue identified by venue_id.",
                                              "example": "https://foursquare.com/item/5c6c99eab9b37b002c0a67a5",
                                              "type": "string"
                                            },
                                            "createdAt": {
                                              "default": 0,
                                              "description": "Timestamp indicating when the tip was created; UNIX timestamp in seconds since Epoch.",
                                              "example": 1550621162,
                                              "type": "integer"
                                            },
                                            "description": "List of tips for a specific venue.",
                                            "disagreeCount": {
                                              "default": 0,
                                              "description": "Number of users who have disagreed with this tip for the specified venue.",
                                              "example": 0,
                                              "type": "integer"
                                            },
                                            "id": {
                                              "description": "An array of tip objects for the specified venue, with each tip containing an ID.",
                                              "example": "5c6c99eab9b37b002c0a67a5",
                                              "type": "string"
                                            },
                                            "likes": {
                                              "description": "Number of likes for tips associated with a specific venue.",
                                              "properties": {
                                                "count": {
                                                  "default": 0,
                                                  "description": "Total number of likes for tips associated with a specific venue.",
                                                  "example": 0,
                                                  "type": "integer"
                                                },
                                                "description": "Number of likes for the tips associated with the given venue.",
                                                "groups": {
                                                  "description": "Array of user groups that have liked the tips associated with the specified venue.",
                                                  "type": "array"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "logView": {
                                              "default": true,
                                              "description": "Array of log views for tips associated with a specific venue.",
                                              "example": true,
                                              "type": "boolean"
                                            },
                                            "text": {
                                              "description": "The text of tips for a specific venue.",
                                              "example": "The people who work here are friendly.",
                                              "type": "string"
                                            },
                                            "todo": {
                                              "description": "List of to-dos for a specific venue based on user-generated tips.\" ",
                                              "properties": {
                                                "count": {
                                                  "default": 0,
                                                  "description": "Number of items in the to-do list for tips associated with the specified venue.",
                                                  "example": 0,
                                                  "type": "integer"
                                                },
                                                "description": "Array of todo objects containing information about tasks to complete at the specified venue."
                                              },
                                              "type": "object"
                                            },
                                            "type": {
                                              "description": "Type of tips given by users for a specific venue.",
                                              "example": "user",
                                              "type": "string"
                                            },
                                            "user": {
                                              "description": "Nested user object within the items array within the tips grouping within the venue object within the response object.",
                                              "properties": {
                                                "address": {
                                                  "description": "The address of the user who left a tip for a specific venue.",
                                                  "example": "",
                                                  "type": "string"
                                                },
                                                "city": {
                                                  "description": "The city of the user who posted the tip.",
                                                  "example": "",
                                                  "type": "string"
                                                },
                                                "countryCode": {
                                                  "description": "The country code for the user who created the tip associated with the venue.",
                                                  "example": "US",
                                                  "type": "string"
                                                },
                                                "description": "User-generated tips for a specific venue.",
                                                "firstName": {
                                                  "description": "The first name of the user who provided the tip for a specific venue.",
                                                  "example": "John",
                                                  "type": "string"
                                                },
                                                "lastName": {
                                                  "description": "The last name of the user who left a tip for a venue.",
                                                  "example": "Smith",
                                                  "type": "string"
                                                },
                                                "state": {
                                                  "description": "The state of the user who left the tips in a specific venue.",
                                                  "example": "",
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "type": "array"
                                      },
                                      "name": {
                                        "description": "The name of the groups associated with tips for the specified venue.",
                                        "example": "All tips",
                                        "type": "string"
                                      },
                                      "type": {
                                        "description": "The type of tip for a specific venue.",
                                        "example": "others",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            },
                            "url": {
                              "description": "A single venue's URL.",
                              "example": "https://foursquare.com",
                              "type": "string"
                            },
                            "venuePage": {
                              "description": "Object containing information about the page associated with a specific venue.",
                              "properties": {
                                "description": "Properties of the venue's page, including name, description, and website URL.",
                                "id": {
                                  "description": "Unique identifier for the venue's page.",
                                  "example": "489091283",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "venueRatingBlacklisted": {
                              "default": true,
                              "description": "Flag indicating if the venue's rating has been blacklisted.",
                              "example": true,
                              "type": "boolean"
                            },
                            "verified": {
                              "default": true,
                              "description": "Indicates whether the venue has been verified by the API.",
                              "example": true,
                              "type": "boolean"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "200"
          },
          "400": {
            "content": {
              "text/plain": {
                "examples": {
                  "Result": {
                    "value": "For full list of API error codes:\nhttps://location.foursquare.com/developer/reference/errors-v2"
                  }
                }
              }
            },
            "description": "400"
          }
        },
        "security": [
          {
            "ManagedUserTokenAuth": []
          }
        ],
        "summary": "Get Venue Details",
        "tags": [
          "Venues"
        ]
      }
    },
    "/venues/{venue_id}/attributes": {
      "get": {
        "deprecated": false,
        "description": "Get attributes - e.g. price, reservations, payment options - for the specified venue.",
        "operationId": "get-venue-attributes",
        "parameters": [
          {
            "in": "path",
            "name": "venue_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The API version date as documented [here](/reference/versioning); e.g. 20231010",
            "in": "query",
            "name": "v",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"meta\": {\n    \"code\": 200,\n    \"requestId\": \"6455603247dc644df09c9f51\"\n  },\n  \"notifications\": [\n    {\n      \"type\": \"notificationTray\",\n      \"item\": {\n        \"unreadCount\": 3\n      }\n    },\n    {\n      \"type\": \"unconfirmed\",\n      \"item\": {\n        \"unreadCount\": 0\n      }\n    }\n  ],\n  \"response\": {\n    \"attributes\": {\n      \"groups\": [\n        {\n          \"type\": \"price\",\n          \"name\": \"Price\",\n          \"summary\": \"$$\",\n          \"count\": 1,\n          \"items\": [\n            {\n              \"name\": \"price\",\n              \"availability\": \"unknown\",\n              \"displayName\": \"Price\",\n              \"displayValue\": \"it's moderately cheap\",\n              \"priceTier\": 2\n            }\n          ]\n        },\n        {\n          \"type\": \"reservations\",\n          \"name\": \"Reservations\",\n          \"count\": 3,\n          \"items\": [\n            {\n              \"name\": \"reservations\",\n              \"availability\": \"unknown\",\n              \"displayName\": \"Reservations\"\n            },\n            {\n              \"name\": \"onlineReservations\",\n              \"availability\": \"unknown\",\n              \"displayName\": \"Online Reservations\"\n            },\n            {\n              \"name\": \"groupsOnlyReservations\",\n              \"availability\": \"unknown\",\n              \"displayName\": \"Groups Only\"\n            }\n          ]\n        },\n        {\n          \"type\": \"payments\",\n          \"name\": \"Credit Cards\",\n          \"summary\": \"Visa, MasterCard & more\",\n          \"count\": 7,\n          \"items\": [\n            {\n              \"name\": \"creditCards\",\n              \"availability\": \"yes\",\n              \"displayName\": \"Credit Cards\",\n              \"displayValue\": \"Yes (incl. Discover & Visa)\"\n            },\n            {\n              \"name\": \"visa\",\n              \"availability\": \"yes\",\n              \"displayName\": \"Visa\"\n            },\n            {\n              \"name\": \"masterCard\",\n              \"availability\": \"yes\",\n              \"displayName\": \"MasterCard\"\n            },\n            {\n              \"name\": \"americanExpress\",\n              \"availability\": \"yes\",\n              \"displayName\": \"American Express\"\n            },\n            {\n              \"name\": \"discover\",\n              \"availability\": \"yes\",\n              \"displayName\": \"Discover\"\n            },\n            {\n              \"name\": \"nfc\",\n              \"availability\": \"unknown\",\n              \"displayName\": \"Apple Pay\"\n            },\n            {\n              \"name\": \"takesDinersClub\",\n              \"availability\": \"unknown\",\n              \"displayName\": \"Diners Club\"\n            }\n          ]\n        },\n        {\n          \"type\": \"outdoorSeating\",\n          \"name\": \"Outdoor Seating\",\n          \"count\": 1,\n          \"items\": [\n            {\n              \"name\": \"outdoorSeating\",\n              \"availability\": \"no\",\n              \"displayName\": \"Outdoor Seating\",\n              \"displayValue\": \"No\"\n            }\n          ]\n        },\n        {\n          \"type\": \"privateRoom\",\n          \"name\": \"Private Room\",\n          \"count\": 1,\n          \"items\": [\n            {\n              \"name\": \"privateRoom\",\n              \"availability\": \"unknown\",\n              \"displayName\": \"Private Room\"\n            }\n          ]\n        },\n        {\n          \"type\": \"music\",\n          \"name\": \"Music\",\n          \"count\": 3,\n          \"items\": [\n            {\n              \"name\": \"hasMusic\",\n              \"availability\": \"unknown\",\n              \"displayName\": \"Music\"\n            },\n            {\n              \"name\": \"liveMusic\",\n              \"availability\": \"unknown\",\n              \"displayName\": \"Live Music\"\n            },\n            {\n              \"name\": \"jukeboxMusic\",\n              \"availability\": \"unknown\",\n              \"displayName\": \"Jukebox\"\n            }\n          ]\n        },\n        {\n          \"type\": \"wifi\",\n          \"name\": \"Wi-Fi\",\n          \"count\": 1,\n          \"items\": [\n            {\n              \"name\": \"wifi\",\n              \"availability\": \"unknown\",\n              \"displayName\": \"Wi-Fi\"\n            }\n          ]\n        },\n        {\n          \"type\": \"serves\",\n          \"name\": \"Menus\",\n          \"count\": 8,\n          \"items\": [\n            {\n              \"name\": \"breakfast\",\n              \"availability\": \"unknown\",\n              \"displayName\": \"Breakfast\"\n            },\n            {\n              \"name\": \"brunch\",\n              \"availability\": \"no\",\n              \"displayName\": \"Brunch\"\n            },\n            {\n              \"name\": \"lunch\",\n              \"availability\": \"unknown\",\n              \"displayName\": \"Lunch\"\n            },\n            {\n              \"name\": \"dinner\",\n              \"availability\": \"unknown\",\n              \"displayName\": \"Dinner\"\n            },\n            {\n              \"name\": \"dessert\",\n              \"availability\": \"unknown\",\n              \"displayName\": \"Dessert\"\n            },\n            {\n              \"name\": \"happyHour\",\n              \"availability\": \"unknown\",\n              \"displayName\": \"Happy Hour\"\n            },\n            {\n              \"name\": \"servesBarSnacks\",\n              \"availability\": \"unknown\",\n              \"displayName\": \"Bar Snacks\"\n            },\n            {\n              \"name\": \"servesTastingMenu\",\n              \"availability\": \"unknown\",\n              \"displayName\": \"Tasting Menu\"\n            }\n          ]\n        },\n        {\n          \"type\": \"drinks\",\n          \"name\": \"Drinks\",\n          \"count\": 5,\n          \"items\": [\n            {\n              \"name\": \"beer\",\n              \"availability\": \"unknown\",\n              \"displayName\": \"Beer\"\n            },\n            {\n              \"name\": \"wine\",\n              \"availability\": \"unknown\",\n              \"displayName\": \"Wine\"\n            },\n            {\n              \"name\": \"fullBar\",\n              \"availability\": \"unknown\",\n              \"displayName\": \"Full Bar\"\n            },\n            {\n              \"name\": \"cocktails\",\n              \"availability\": \"unknown\",\n              \"displayName\": \"Cocktails\"\n            },\n            {\n              \"name\": \"byo\",\n              \"availability\": \"unknown\",\n              \"displayName\": \"BYO\"\n            }\n          ]\n        },\n        {\n          \"type\": \"diningOptions\",\n          \"name\": \"Dining Options\",\n          \"count\": 5,\n          \"items\": [\n            {\n              \"name\": \"sitDownDining\",\n              \"availability\": \"unknown\",\n              \"displayName\": \"Table Service\"\n            },\n            {\n              \"name\": \"barService\",\n              \"availability\": \"unknown\",\n              \"displayName\": \"Bar Service\"\n            },\n            {\n              \"name\": \"takeout\",\n              \"availability\": \"yes\",\n              \"displayName\": \"Take-out\"\n            },\n            {\n              \"name\": \"delivery\",\n              \"availability\": \"yes\",\n              \"displayName\": \"Delivery\"\n            },\n            {\n              \"name\": \"driveThrough\",\n              \"availability\": \"unknown\",\n              \"displayName\": \"Drive-thru\"\n            }\n          ]\n        },\n        {\n          \"type\": \"parking\",\n          \"name\": \"Parking\",\n          \"count\": 5,\n          \"items\": [\n            {\n              \"name\": \"hasParking\",\n              \"availability\": \"unknown\",\n              \"displayName\": \"Parking\"\n            },\n            {\n              \"name\": \"streetParking\",\n              \"availability\": \"unknown\",\n              \"displayName\": \"Street Parking\"\n            },\n            {\n              \"name\": \"publicLot\",\n              \"availability\": \"unknown\",\n              \"displayName\": \"Public Lot\"\n            },\n            {\n              \"name\": \"privateLot\",\n              \"availability\": \"unknown\",\n              \"displayName\": \"Private Lot\"\n            },\n            {\n              \"name\": \"valetParking\",\n              \"availability\": \"unknown\",\n              \"displayName\": \"Valet Parking\"\n            }\n          ]\n        },\n        {\n          \"type\": \"coatCheck\",\n          \"name\": \"Coat Check\",\n          \"count\": 1,\n          \"items\": [\n            {\n              \"name\": \"coatCheck\",\n              \"availability\": \"unknown\",\n              \"displayName\": \"Coat Check\"\n            }\n          ]\n        },\n        {\n          \"type\": \"restroom\",\n          \"name\": \"Restroom\",\n          \"count\": 1,\n          \"items\": [\n            {\n              \"name\": \"restroom\",\n              \"availability\": \"unknown\",\n              \"displayName\": \"Restroom\"\n            }\n          ]\n        },\n        {\n          \"type\": \"wheelchairAccessible\",\n          \"name\": \"Wheelchair Accessible\",\n          \"count\": 1,\n          \"items\": [\n            {\n              \"name\": \"wheelchairAccessible\",\n              \"availability\": \"unknown\",\n              \"displayName\": \"Wheelchair Accessible\"\n            }\n          ]\n        },\n        {\n          \"type\": \"tvs\",\n          \"name\": \"TVs\",\n          \"count\": 1,\n          \"items\": [\n            {\n              \"name\": \"tvs\",\n              \"availability\": \"no\",\n              \"displayName\": \"TVs\"\n            }\n          ]\n        },\n        {\n          \"type\": \"atm\",\n          \"name\": \"ATM\",\n          \"count\": 1,\n          \"items\": [\n            {\n              \"name\": \"atm\",\n              \"availability\": \"unknown\",\n              \"displayName\": \"ATM\"\n            }\n          ]\n        },\n        {\n          \"type\": \"smoking\",\n          \"name\": \"Smoking\",\n          \"count\": 1,\n          \"items\": [\n            {\n              \"name\": \"smoking\",\n              \"availability\": \"unknown\",\n              \"displayName\": \"Smoking\"\n            }\n          ]\n        },\n        {\n          \"type\": \"vegetarian\",\n          \"name\": \"Vegetarian Options\",\n          \"count\": 1,\n          \"items\": [\n            {\n              \"name\": \"vegetarian\",\n              \"displayName\": \"Vegetarian Options\",\n              \"quality\": \"unknown\"\n            }\n          ]\n        },\n        {\n          \"type\": \"vegan\",\n          \"name\": \"Vegan Options\",\n          \"count\": 1,\n          \"items\": [\n            {\n              \"name\": \"vegan\",\n              \"displayName\": \"Vegan Options\",\n              \"quality\": \"unknown\"\n            }\n          ]\n        },\n        {\n          \"type\": \"glutenFree\",\n          \"name\": \"Gluten-Free Options\",\n          \"count\": 1,\n          \"items\": [\n            {\n              \"name\": \"glutenFree\",\n              \"displayName\": \"Gluten-Free Options\",\n              \"quality\": \"unknown\"\n            }\n          ]\n        },\n        {\n          \"type\": \"healthy\",\n          \"name\": \"Healthy Options\",\n          \"count\": 1,\n          \"items\": [\n            {\n              \"name\": \"healthy\",\n              \"displayName\": \"Healthy Options\",\n              \"quality\": \"unknown\"\n            }\n          ]\n        },\n        {\n          \"type\": \"service\",\n          \"name\": \"Service\",\n          \"count\": 1,\n          \"items\": [\n            {\n              \"name\": \"service\",\n              \"displayName\": \"Service\",\n              \"quality\": \"unknown\"\n            }\n          ]\n        },\n        {\n          \"type\": \"dates\",\n          \"name\": \"Date Spot\",\n          \"count\": 1,\n          \"items\": [\n            {\n              \"name\": \"dates\",\n              \"displayName\": \"Date Spot\",\n              \"quality\": \"unknown\"\n            }\n          ]\n        },\n        {\n          \"type\": \"groups\",\n          \"name\": \"Good for Groups\",\n          \"count\": 1,\n          \"items\": [\n            {\n              \"name\": \"groups\",\n              \"displayName\": \"Good for Groups\",\n              \"quality\": \"unknown\"\n            }\n          ]\n        },\n        {\n          \"type\": \"singles\",\n          \"name\": \"Singles Scene\",\n          \"count\": 1,\n          \"items\": [\n            {\n              \"name\": \"singles\",\n              \"displayName\": \"Singles Scene\"\n            }\n          ]\n        },\n        {\n          \"type\": \"families\",\n          \"name\": \"Kid-Friendly\",\n          \"count\": 1,\n          \"items\": [\n            {\n              \"name\": \"families\",\n              \"displayName\": \"Kid-Friendly\",\n              \"quality\": \"unknown\"\n            }\n          ]\n        },\n        {\n          \"type\": \"valueForMoney\",\n          \"name\": \"Value\",\n          \"count\": 1,\n          \"items\": [\n            {\n              \"name\": \"valueForMoney\",\n              \"displayName\": \"Value\",\n              \"quality\": \"unknown\"\n            }\n          ]\n        },\n        {\n          \"type\": \"romantic\",\n          \"name\": \"Romantic\",\n          \"count\": 1,\n          \"items\": [\n            {\n              \"name\": \"romantic\",\n              \"displayName\": \"Romantic\",\n              \"quality\": \"unknown\"\n            }\n          ]\n        },\n        {\n          \"type\": \"trendy\",\n          \"name\": \"Trendy\",\n          \"count\": 1,\n          \"items\": [\n            {\n              \"name\": \"trendy\",\n              \"displayName\": \"Trendy\",\n              \"quality\": \"unknown\"\n            }\n          ]\n        },\n        {\n          \"type\": \"dressy\",\n          \"name\": \"Dress Code\",\n          \"count\": 1,\n          \"items\": [\n            {\n              \"name\": \"dressy\",\n              \"displayName\": \"Dressy\",\n              \"quality\": \"unknown\"\n            }\n          ]\n        },\n        {\n          \"type\": \"noisy\",\n          \"name\": \"Noise Level\",\n          \"count\": 1,\n          \"items\": [\n            {\n              \"name\": \"noisy\",\n              \"displayName\": \"Noisy\",\n              \"quality\": \"unknown\"\n            }\n          ]\n        },\n        {\n          \"type\": \"clean\",\n          \"name\": \"Cleanliness\",\n          \"count\": 1,\n          \"items\": [\n            {\n              \"name\": \"clean\",\n              \"displayName\": \"Clean\",\n              \"quality\": \"unknown\"\n            }\n          ]\n        },\n        {\n          \"type\": \"lateNight\",\n          \"name\": \"Late Night\",\n          \"count\": 1,\n          \"items\": [\n            {\n              \"name\": \"lateNight\",\n              \"displayName\": \"Late Night\",\n              \"quality\": \"unknown\"\n            }\n          ]\n        },\n        {\n          \"type\": \"occasions\",\n          \"name\": \"Special Occasion\",\n          \"count\": 1,\n          \"items\": [\n            {\n              \"name\": \"occasions\",\n              \"displayName\": \"Special Occasion\",\n              \"quality\": \"unknown\"\n            }\n          ]\n        },\n        {\n          \"type\": \"quickBite\",\n          \"name\": \"Quick Bite\",\n          \"count\": 1,\n          \"items\": [\n            {\n              \"name\": \"quickBite\",\n              \"displayName\": \"Quick Bite\",\n              \"quality\": \"unknown\"\n            }\n          ]\n        },\n        {\n          \"type\": \"meetings\",\n          \"name\": \"Business Meeting\",\n          \"count\": 1,\n          \"items\": [\n            {\n              \"name\": \"meetings\",\n              \"displayName\": \"Business Meeting\",\n              \"quality\": \"unknown\"\n            }\n          ]\n        },\n        {\n          \"type\": \"dogFriendly\",\n          \"name\": \"Dog-Friendly\",\n          \"count\": 1,\n          \"items\": [\n            {\n              \"name\": \"dogFriendly\",\n              \"displayName\": \"Dog-Friendly\",\n              \"quality\": \"unknown\"\n            }\n          ]\n        }\n      ]\n    },\n    \"attributeSections\": [\n      {\n        \"section\": \"People Say\",\n        \"displayType\": \"subjective\",\n        \"machineName\": \"subjective\",\n        \"items\": [\n          {\n            \"name\": \"price\",\n            \"type\": \"price\",\n            \"displayName\": \"Price\",\n            \"summary\": \"$$\",\n            \"detail\": \"it's moderately cheap\",\n            \"lineItems\": [\n              {\n                \"name\": \"price\",\n                \"availability\": \"unknown\",\n                \"displayName\": \"Price\",\n                \"displayValue\": \"it's moderately cheap\",\n                \"priceTier\": 2\n              }\n            ],\n            \"entities\": [\n              {\n                \"indices\": [\n                  5,\n                  21\n                ],\n                \"type\": \"bold\"\n              }\n            ]\n          },\n          {\n            \"name\": \"singles\",\n            \"type\": \"singles\",\n            \"displayName\": \"Singles Scene\",\n            \"lineItems\": [\n              {\n                \"name\": \"singles\",\n                \"displayName\": \"Singles Scene\",\n                \"qualityType\": \"great\"\n              }\n            ],\n            \"sourceDetail\": \"3/3 votes\"\n          },\n          {\n            \"name\": \"vegetarian\",\n            \"type\": \"vegetarian\",\n            \"displayName\": \"Vegetarian Options\",\n            \"lineItems\": [\n              {\n                \"name\": \"vegetarian\",\n                \"displayName\": \"Vegetarian Options\",\n                \"quality\": \"unknown\",\n                \"qualityType\": \"yes\"\n              }\n            ]\n          },\n          {\n            \"name\": \"vegan\",\n            \"type\": \"vegan\",\n            \"displayName\": \"Vegan Options\",\n            \"lineItems\": [\n              {\n                \"name\": \"vegan\",\n                \"displayName\": \"Vegan Options\",\n                \"quality\": \"unknown\",\n                \"qualityType\": \"yes\"\n              }\n            ]\n          },\n          {\n            \"name\": \"glutenFree\",\n            \"type\": \"glutenFree\",\n            \"displayName\": \"Gluten-Free Options\",\n            \"lineItems\": [\n              {\n                \"name\": \"glutenFree\",\n                \"displayName\": \"Gluten-Free Options\",\n                \"quality\": \"unknown\",\n                \"qualityType\": \"yes\"\n              }\n            ]\n          },\n          {\n            \"name\": \"healthy\",\n            \"type\": \"healthy\",\n            \"displayName\": \"Healthy Options\",\n            \"lineItems\": [\n              {\n                \"name\": \"healthy\",\n                \"displayName\": \"Healthy Options\",\n                \"quality\": \"unknown\",\n                \"qualityType\": \"yes\"\n              }\n            ]\n          },\n          {\n            \"name\": \"service\",\n            \"type\": \"service\",\n            \"displayName\": \"Service\",\n            \"lineItems\": [\n              {\n                \"name\": \"service\",\n                \"displayName\": \"Service\",\n                \"quality\": \"unknown\",\n                \"qualityType\": \"great\"\n              }\n            ]\n          },\n          {\n            \"name\": \"dates\",\n            \"type\": \"dates\",\n            \"displayName\": \"Date Spot\",\n            \"lineItems\": [\n              {\n                \"name\": \"dates\",\n                \"displayName\": \"Date Spot\",\n                \"quality\": \"unknown\",\n                \"qualityType\": \"great\"\n              }\n            ]\n          },\n          {\n            \"name\": \"groups\",\n            \"type\": \"groups\",\n            \"displayName\": \"Good for Groups\",\n            \"lineItems\": [\n              {\n                \"name\": \"groups\",\n                \"displayName\": \"Good for Groups\",\n                \"quality\": \"unknown\",\n                \"qualityType\": \"great\"\n              }\n            ]\n          },\n          {\n            \"name\": \"families\",\n            \"type\": \"families\",\n            \"displayName\": \"Kid-Friendly\",\n            \"lineItems\": [\n              {\n                \"name\": \"families\",\n                \"displayName\": \"Kid-Friendly\",\n                \"quality\": \"unknown\",\n                \"qualityType\": \"very\"\n              }\n            ]\n          },\n          {\n            \"name\": \"valueForMoney\",\n            \"type\": \"valueForMoney\",\n            \"displayName\": \"Value\",\n            \"lineItems\": [\n              {\n                \"name\": \"valueForMoney\",\n                \"displayName\": \"Value\",\n                \"quality\": \"unknown\",\n                \"qualityType\": \"great\"\n              }\n            ]\n          },\n          {\n            \"name\": \"romantic\",\n            \"type\": \"romantic\",\n            \"displayName\": \"Romantic\",\n            \"lineItems\": [\n              {\n                \"name\": \"romantic\",\n                \"displayName\": \"Romantic\",\n                \"quality\": \"unknown\",\n                \"qualityType\": \"very\"\n              }\n            ]\n          },\n          {\n            \"name\": \"trendy\",\n            \"type\": \"trendy\",\n            \"displayName\": \"Trendy\",\n            \"lineItems\": [\n              {\n                \"name\": \"trendy\",\n                \"displayName\": \"Trendy\",\n                \"quality\": \"unknown\",\n                \"qualityType\": \"very\"\n              }\n            ]\n          },\n          {\n            \"name\": \"dressy\",\n            \"type\": \"dressy\",\n            \"displayName\": \"Dress Code\",\n            \"lineItems\": [\n              {\n                \"name\": \"dressy\",\n                \"displayName\": \"Dressy\",\n                \"quality\": \"unknown\",\n                \"qualityType\": \"very\"\n              }\n            ]\n          },\n          {\n            \"name\": \"noisy\",\n            \"type\": \"noisy\",\n            \"displayName\": \"Noise Level\",\n            \"lineItems\": [\n              {\n                \"name\": \"noisy\",\n                \"displayName\": \"Noisy\",\n                \"quality\": \"unknown\",\n                \"qualityType\": \"very\"\n              }\n            ]\n          },\n          {\n            \"name\": \"clean\",\n            \"type\": \"clean\",\n            \"displayName\": \"Cleanliness\",\n            \"lineItems\": [\n              {\n                \"name\": \"clean\",\n                \"displayName\": \"Clean\",\n                \"quality\": \"unknown\",\n                \"qualityType\": \"very\"\n              }\n            ]\n          },\n          {\n            \"name\": \"lateNight\",\n            \"type\": \"lateNight\",\n            \"displayName\": \"Late Night\",\n            \"lineItems\": [\n              {\n                \"name\": \"lateNight\",\n                \"displayName\": \"Late Night\",\n                \"quality\": \"unknown\",\n                \"qualityType\": \"great\"\n              }\n            ]\n          },\n          {\n            \"name\": \"occasions\",\n            \"type\": \"occasions\",\n            \"displayName\": \"Special Occasion\",\n            \"lineItems\": [\n              {\n                \"name\": \"occasions\",\n                \"displayName\": \"Special Occasion\",\n                \"quality\": \"unknown\",\n                \"qualityType\": \"yes\"\n              }\n            ]\n          },\n          {\n            \"name\": \"quickBite\",\n            \"type\": \"quickBite\",\n            \"displayName\": \"Quick Bite\",\n            \"lineItems\": [\n              {\n                \"name\": \"quickBite\",\n                \"displayName\": \"Quick Bite\",\n                \"quality\": \"unknown\",\n                \"qualityType\": \"yes\"\n              }\n            ]\n          },\n          {\n            \"name\": \"meetings\",\n            \"type\": \"meetings\",\n            \"displayName\": \"Business Meeting\",\n            \"lineItems\": [\n              {\n                \"name\": \"meetings\",\n                \"displayName\": \"Business Meeting\",\n                \"quality\": \"unknown\",\n                \"qualityType\": \"yes\"\n              }\n            ]\n          },\n          {\n            \"name\": \"dogFriendly\",\n            \"type\": \"dogFriendly\",\n            \"displayName\": \"Dog-Friendly\",\n            \"lineItems\": [\n              {\n                \"name\": \"dogFriendly\",\n                \"displayName\": \"Dog-Friendly\",\n                \"quality\": \"unknown\",\n                \"qualityType\": \"yes\"\n              }\n            ]\n          }\n        ]\n      },\n      {\n        \"section\": \"Food & Drink\",\n        \"displayType\": \"standard\",\n        \"machineName\": \"foodAndDrink\",\n        \"items\": [\n          {\n            \"name\": \"serves\",\n            \"type\": \"serves\",\n            \"displayName\": \"Menus\",\n            \"lineItems\": [\n              {\n                \"name\": \"breakfast\",\n                \"availability\": \"unknown\",\n                \"displayName\": \"Breakfast\"\n              },\n              {\n                \"name\": \"brunch\",\n                \"availability\": \"no\",\n                \"displayName\": \"Brunch\"\n              },\n              {\n                \"name\": \"lunch\",\n                \"availability\": \"unknown\",\n                \"displayName\": \"Lunch\"\n              },\n              {\n                \"name\": \"dinner\",\n                \"availability\": \"unknown\",\n                \"displayName\": \"Dinner\"\n              },\n              {\n                \"name\": \"dessert\",\n                \"availability\": \"unknown\",\n                \"displayName\": \"Dessert\"\n              },\n              {\n                \"name\": \"happyHour\",\n                \"availability\": \"unknown\",\n                \"displayName\": \"Happy Hour\"\n              },\n              {\n                \"name\": \"servesBarSnacks\",\n                \"availability\": \"unknown\",\n                \"displayName\": \"Bar Snacks\"\n              },\n              {\n                \"name\": \"servesTastingMenu\",\n                \"availability\": \"unknown\",\n                \"displayName\": \"Tasting Menu\"\n              }\n            ]\n          },\n          {\n            \"name\": \"drinks\",\n            \"type\": \"drinks\",\n            \"displayName\": \"Drinks\",\n            \"defaultSummary\": \"Beer, Cocktails & more\",\n            \"lineItems\": [\n              {\n                \"name\": \"beer\",\n                \"availability\": \"unknown\",\n                \"displayName\": \"Beer\"\n              },\n              {\n                \"name\": \"wine\",\n                \"availability\": \"unknown\",\n                \"displayName\": \"Wine\"\n              },\n              {\n                \"name\": \"fullBar\",\n                \"availability\": \"unknown\",\n                \"displayName\": \"Full Bar\"\n              },\n              {\n                \"name\": \"cocktails\",\n                \"availability\": \"unknown\",\n                \"displayName\": \"Cocktails\"\n              },\n              {\n                \"name\": \"byo\",\n                \"availability\": \"unknown\",\n                \"displayName\": \"BYO\"\n              }\n            ]\n          },\n          {\n            \"name\": \"diningOptions\",\n            \"type\": \"diningOptions\",\n            \"displayName\": \"Dining Options\",\n            \"defaultSummary\": \"Delivery, Take-out & more\",\n            \"lineItems\": [\n              {\n                \"name\": \"sitDownDining\",\n                \"availability\": \"unknown\",\n                \"displayName\": \"Table Service\"\n              },\n              {\n                \"name\": \"barService\",\n                \"availability\": \"unknown\",\n                \"displayName\": \"Bar Service\"\n              },\n              {\n                \"name\": \"takeout\",\n                \"availability\": \"yes\",\n                \"displayName\": \"Take-out\"\n              },\n              {\n                \"name\": \"delivery\",\n                \"availability\": \"yes\",\n                \"displayName\": \"Delivery\"\n              },\n              {\n                \"name\": \"driveThrough\",\n                \"availability\": \"unknown\",\n                \"displayName\": \"Drive-thru\"\n              }\n            ]\n          }\n        ]\n      },\n      {\n        \"section\": \"Features\",\n        \"displayType\": \"standard\",\n        \"machineName\": \"features\",\n        \"items\": [\n          {\n            \"name\": \"reservations\",\n            \"type\": \"reservations\",\n            \"displayName\": \"Reservations\",\n            \"defaultSummary\": \"Groups Only\",\n            \"lineItems\": [\n              {\n                \"name\": \"reservations\",\n                \"availability\": \"unknown\",\n                \"displayName\": \"Reservations\",\n                \"displayQuestion\": \"Does this place take reservations?\"\n              },\n              {\n                \"name\": \"onlineReservations\",\n                \"availability\": \"unknown\",\n                \"displayName\": \"Online Reservations\",\n                \"prerequisite\": \"reservations\"\n              },\n              {\n                \"name\": \"groupsOnlyReservations\",\n                \"availability\": \"unknown\",\n                \"displayName\": \"Groups Only\",\n                \"prerequisite\": \"reservations\"\n              }\n            ]\n          },\n          {\n            \"name\": \"payments\",\n            \"type\": \"payments\",\n            \"displayName\": \"Credit Cards\",\n            \"summary\": \"Credit Cards\",\n            \"editingSummary\": \"Visa, MasterCard & more\",\n            \"defaultSummary\": \"Visa, MasterCard & more\",\n            \"detail\": \"Yes (incl. Discover & Visa)\",\n            \"lineItems\": [\n              {\n                \"name\": \"creditCards\",\n                \"availability\": \"yes\",\n                \"displayName\": \"Credit Cards\",\n                \"displayValue\": \"Yes (incl. Discover & Visa)\",\n                \"displayQuestion\": \"Does this place accept credit cards?\"\n              },\n              {\n                \"name\": \"visa\",\n                \"availability\": \"yes\",\n                \"displayName\": \"Visa\",\n                \"prerequisite\": \"creditCards\"\n              },\n              {\n                \"name\": \"masterCard\",\n                \"availability\": \"yes\",\n                \"displayName\": \"MasterCard\",\n                \"prerequisite\": \"creditCards\"\n              },\n              {\n                \"name\": \"americanExpress\",\n                \"availability\": \"yes\",\n                \"displayName\": \"American Express\",\n                \"prerequisite\": \"creditCards\"\n              },\n              {\n                \"name\": \"discover\",\n                \"availability\": \"yes\",\n                \"displayName\": \"Discover\",\n                \"prerequisite\": \"creditCards\"\n              },\n              {\n                \"name\": \"nfc\",\n                \"availability\": \"unknown\",\n                \"displayName\": \"Apple Pay\",\n                \"prerequisite\": \"creditCards\"\n              },\n              {\n                \"name\": \"takesDinersClub\",\n                \"availability\": \"unknown\",\n                \"displayName\": \"Diners Club\",\n                \"prerequisite\": \"creditCards\"\n              }\n            ]\n          },\n          {\n            \"name\": \"outdoorSeating\",\n            \"type\": \"outdoorSeating\",\n            \"displayName\": \"Outdoor Seating\",\n            \"detail\": \"No\",\n            \"lineItems\": [\n              {\n                \"name\": \"outdoorSeating\",\n                \"availability\": \"no\",\n                \"displayName\": \"Outdoor Seating\",\n                \"displayValue\": \"No\",\n                \"displayQuestion\": \"Does this place have outdoor seating?\"\n              }\n            ]\n          },\n          {\n            \"name\": \"privateRoom\",\n            \"type\": \"privateRoom\",\n            \"displayName\": \"Private Room\",\n            \"lineItems\": [\n              {\n                \"name\": \"privateRoom\",\n                \"availability\": \"unknown\",\n                \"displayName\": \"Private Room\"\n              }\n            ]\n          },\n          {\n            \"name\": \"music\",\n            \"type\": \"music\",\n            \"displayName\": \"Music\",\n            \"defaultSummary\": \"Live Music or Jukebox\",\n            \"lineItems\": [\n              {\n                \"name\": \"hasMusic\",\n                \"availability\": \"unknown\",\n                \"displayName\": \"Music\"\n              },\n              {\n                \"name\": \"liveMusic\",\n                \"availability\": \"unknown\",\n                \"displayName\": \"Live Music\",\n                \"prerequisite\": \"hasMusic\"\n              },\n              {\n                \"name\": \"jukeboxMusic\",\n                \"availability\": \"unknown\",\n                \"displayName\": \"Jukebox\",\n                \"prerequisite\": \"hasMusic\"\n              }\n            ]\n          },\n          {\n            \"name\": \"wifi\",\n            \"type\": \"wifi\",\n            \"displayName\": \"Wi-Fi\",\n            \"lineItems\": [\n              {\n                \"name\": \"wifi\",\n                \"availability\": \"unknown\",\n                \"displayName\": \"Wi-Fi\",\n                \"displayQuestion\": \"Does this place have Wi-Fi?\"\n              }\n            ]\n          },\n          {\n            \"name\": \"parking\",\n            \"type\": \"parking\",\n            \"displayName\": \"Parking\",\n            \"defaultSummary\": \"Street, Valet & more\",\n            \"lineItems\": [\n              {\n                \"name\": \"hasParking\",\n                \"availability\": \"unknown\",\n                \"displayName\": \"Parking\",\n                \"displayQuestion\": \"Does this place offer parking?\"\n              },\n              {\n                \"name\": \"streetParking\",\n                \"availability\": \"unknown\",\n                \"displayName\": \"Street Parking\",\n                \"prerequisite\": \"hasParking\"\n              },\n              {\n                \"name\": \"publicLot\",\n                \"availability\": \"unknown\",\n                \"displayName\": \"Public Lot\",\n                \"prerequisite\": \"hasParking\"\n              },\n              {\n                \"name\": \"privateLot\",\n                \"availability\": \"unknown\",\n                \"displayName\": \"Private Lot\",\n                \"prerequisite\": \"hasParking\"\n              },\n              {\n                \"name\": \"valetParking\",\n                \"availability\": \"unknown\",\n                \"displayName\": \"Valet Parking\",\n                \"prerequisite\": \"hasParking\"\n              }\n            ]\n          },\n          {\n            \"name\": \"coatCheck\",\n            \"type\": \"coatCheck\",\n            \"displayName\": \"Coat Check\",\n            \"lineItems\": [\n              {\n                \"name\": \"coatCheck\",\n                \"availability\": \"unknown\",\n                \"displayName\": \"Coat Check\",\n                \"displayQuestion\": \"Does this place have a coat check?\"\n              }\n            ]\n          },\n          {\n            \"name\": \"restroom\",\n            \"type\": \"restroom\",\n            \"displayName\": \"Restroom\",\n            \"lineItems\": [\n              {\n                \"name\": \"restroom\",\n                \"availability\": \"unknown\",\n                \"displayName\": \"Restroom\",\n                \"displayQuestion\": \"Does this place have a restroom?\"\n              }\n            ]\n          },\n          {\n            \"name\": \"wheelchairAccessible\",\n            \"type\": \"wheelchairAccessible\",\n            \"displayName\": \"Wheelchair Accessible\",\n            \"lineItems\": [\n              {\n                \"name\": \"wheelchairAccessible\",\n                \"availability\": \"unknown\",\n                \"displayName\": \"Wheelchair Accessible\",\n                \"displayQuestion\": \"Is this place wheelchair accessible?\"\n              }\n            ]\n          },\n          {\n            \"name\": \"tvs\",\n            \"type\": \"tvs\",\n            \"displayName\": \"TVs\",\n            \"lineItems\": [\n              {\n                \"name\": \"tvs\",\n                \"availability\": \"no\",\n                \"displayName\": \"TVs\",\n                \"displayQuestion\": \"Does this place have TVs?\"\n              }\n            ]\n          },\n          {\n            \"name\": \"atm\",\n            \"type\": \"atm\",\n            \"displayName\": \"ATM\",\n            \"lineItems\": [\n              {\n                \"name\": \"atm\",\n                \"availability\": \"unknown\",\n                \"displayName\": \"ATM\",\n                \"displayQuestion\": \"Does this place have an ATM?\"\n              }\n            ]\n          },\n          {\n            \"name\": \"smoking\",\n            \"type\": \"smoking\",\n            \"displayName\": \"Smoking\",\n            \"lineItems\": [\n              {\n                \"name\": \"smoking\",\n                \"availability\": \"unknown\",\n                \"displayName\": \"Smoking\",\n                \"displayQuestion\": \"Can you smoke at this place?\"\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  }\n}"
                  }
                },
                "schema": {
                  "description": "A successful response with venue attributes for the specified venue ID.",
                  "properties": {
                    "description": "Properties of a successful response when retrieving attributes for a specific venue.",
                    "meta": {
                      "description": "Metadata object for the response containing information about the venue's attributes.",
                      "properties": {
                        "code": {
                          "default": 0,
                          "description": "Status code indicating the result of the attributes get API request for a specific venue.",
                          "example": 200,
                          "type": "integer"
                        },
                        "description": "Metadata about the response from retrieving venue attributes for a specific venue.",
                        "requestId": {
                          "description": "The unique identifier for the API request.",
                          "example": "6455603247dc644df09c9f51",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "notifications": {
                      "description": "Array of notification objects.",
                      "items": {
                        "description": "Array of notification objects for the specified venue.",
                        "properties": {
                          "description": "An array of notification objects containing the type and number of unread items for the specified venue.",
                          "item": {
                            "description": "Notification objects for the specified venue ID.",
                            "properties": {
                              "description": "An array of notification objects containing information about the number of unread items in the notification.",
                              "unreadCount": {
                                "default": 0,
                                "description": "Number of unread items in the notification associated with the specified venue.",
                                "example": 3,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": {
                            "description": "Type of notifications for a specific venue.",
                            "example": "notificationTray",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "response": {
                      "description": "The response object containing the retrieved attributes for the specified venue.",
                      "properties": {
                        "attributeSections": {
                          "description": "Array of attribute sections for the specified venue.",
                          "items": {
                            "description": "Array of attribute sections for the specified venue, containing information about the attributes associated with that venue.",
                            "properties": {
                              "description": "Array of attribute sections for a specific venue.",
                              "displayType": {
                                "description": "The display type for each attribute section of a specific venue, as indicated in the response properties.",
                                "example": "subjective",
                                "type": "string"
                              },
                              "items": {
                                "description": "Array of attribute items for a specific venue.",
                                "items": {
                                  "description": "Response object for retrieving a list of attribute items for a specific venue.",
                                  "properties": {
                                    "description": "Array of items containing attributes for the specified venue.",
                                    "detail": {
                                      "description": "Detailed attribute information for a specific venue.",
                                      "example": "it's moderately cheap",
                                      "type": "string"
                                    },
                                    "displayName": {
                                      "description": "The display name for the items associated with the attribute sections for the specified venue.",
                                      "example": "Price",
                                      "type": "string"
                                    },
                                    "entities": {
                                      "description": "Array of entities within items.",
                                      "items": {
                                        "description": "Objects containing a list of entities associated with the items.",
                                        "properties": {
                                          "description": "Response containing a list of entities for the items of the attribute section for the specified venue.",
                                          "indices": {
                                            "description": "The indices of the entities within the items of the attribute sections.",
                                            "items": {
                                              "default": 0,
                                              "description": "A list of indices within the entity items for the attributes of a specific venue.",
                                              "example": 5,
                                              "type": "integer"
                                            },
                                            "type": "array"
                                          },
                                          "type": {
                                            "description": "The type of entities associated with the items in a venue's attribute sections.",
                                            "example": "bold",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "type": "array"
                                    },
                                    "lineItems": {
                                      "description": "Array of line items for attribute sections in the response for getting venue attributes for a specific venue.",
                                      "items": {
                                        "description": "List of line items for the attribute sections of a specific venue.",
                                        "properties": {
                                          "availability": {
                                            "description": "Response object containing the availability of line items for a specific venue attribute.",
                                            "example": "unknown",
                                            "type": "string"
                                          },
                                          "description": "An array of line items for the specified attribute section of a venue.",
                                          "displayName": {
                                            "description": "Attribute display names for items in a specific venue.",
                                            "example": "Price",
                                            "type": "string"
                                          },
                                          "displayValue": {
                                            "description": "The display value for individual line items within a response object for venue attributes.",
                                            "example": "it's moderately cheap",
                                            "type": "string"
                                          },
                                          "name": {
                                            "description": "The name of the line items.",
                                            "example": "price",
                                            "type": "string"
                                          },
                                          "priceTier": {
                                            "default": 0,
                                            "description": "The price tier of items in a response for a venue's attributes.",
                                            "example": 2,
                                            "type": "integer"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "type": "array"
                                    },
                                    "name": {
                                      "description": "Attribute sections for a specific venue's attributes.",
                                      "example": "price",
                                      "type": "string"
                                    },
                                    "summary": {
                                      "description": "A summary of the attributes.",
                                      "example": "$$",
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "The type of items in the attribute section of the response for a specific venue.",
                                      "example": "price",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "machineName": {
                                "description": "A list of machine names for the attribute sections of the specified venue.",
                                "example": "subjective",
                                "type": "string"
                              },
                              "section": {
                                "description": "The attribute sections for the specified venue as an array of objects, with each object containing properties for the section name, type, and items.",
                                "example": "People Say",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "attributes": {
                          "description": "Response object containing the retrieved attributes for the specified venue.",
                          "properties": {
                            "description": "A list of attributes for a specific venue.",
                            "groups": {
                              "description": "Array of attribute groups for the specified venue.",
                              "items": {
                                "description": "List of attribute groups associated with a specific venue.",
                                "properties": {
                                  "count": {
                                    "default": 0,
                                    "description": "Response containing the count of attributes groups for a specific venue ID.",
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "description": "Venue attributes response for specified venue ID.",
                                  "items": {
                                    "description": "List of attributes associated with a specific venue, including group details and individual attributes.",
                                    "items": {
                                      "description": "Attributes associated with a specific venue, including groups and items, from the successful response for getting venue attributes.",
                                      "properties": {
                                        "availability": {
                                          "description": "The availability of attributes for a specific venue.",
                                          "example": "unknown",
                                          "type": "string"
                                        },
                                        "description": "A list of attributes for a specific venue, including groups and individual items.",
                                        "displayName": {
                                          "description": "The display name of the venue's attributes from the specified venue ID.",
                                          "example": "Price",
                                          "type": "string"
                                        },
                                        "displayValue": {
                                          "description": "Venue display values.",
                                          "example": "it's moderately cheap",
                                          "type": "string"
                                        },
                                        "name": {
                                          "description": "The name of each attribute.",
                                          "example": "price",
                                          "type": "string"
                                        },
                                        "priceTier": {
                                          "default": 0,
                                          "description": "Price tier of the attributes for a specific venue.",
                                          "example": 2,
                                          "type": "integer"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "name": {
                                    "description": "The name of the attribute groups.",
                                    "example": "Price",
                                    "type": "string"
                                  },
                                  "summary": {
                                    "description": "The summary property for the groups items within the attributes response for a given venue ID.",
                                    "example": "$$",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "The type of attribute.",
                                    "example": "price",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "description": "Response object containing the retrieved attributes of the specified venue."
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "200"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "description": "Returns a 400 response if the request to retrieve venue attributes is invalid or incorrect.",
                  "properties": {
                    "description": "Response for retrieving attributes of a specific venue with a status code of 400."
                  },
                  "type": "object"
                }
              }
            },
            "description": "400"
          }
        },
        "security": [
          {
            "ManagedUserTokenAuth": []
          }
        ],
        "summary": "Get Venue Attributes",
        "tags": [
          "Venues"
        ]
      }
    },
    "/venues/{venue_id}/hours": {
      "get": {
        "deprecated": false,
        "description": "Get the operating hours for the specified venue.",
        "operationId": "get-venue-hours",
        "parameters": [
          {
            "description": "The venue you want photos for; e.g., Foursquare HQ's venue_id = 5a187743ccad6b307315e6fe",
            "in": "path",
            "name": "venue_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The API version date as documented [here](/reference/versioning); e.g. 20231010",
            "in": "query",
            "name": "v",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "12 or 24",
            "in": "query",
            "name": "hourFormat",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"meta\": {\n    \"code\": 200,\n    \"requestId\": \"59a04e6fdd579714214cddc0\"\n  },\n  \"response\": {\n    \"hours\": {\n      \"timeframes\": [\n        {\n          \"days\": [1, 2, 3, 4, 5],\n          \"includesToday\": true,\n          \"open\": [\n            {\n              \"start\": \"1600\",\n              \"end\": \"+0100\"\n            }\n          ],\n          \"segments\": []\n        },\n        {\n          \"days\": [6, 7],\n          \"open\": [\n            {\n              \"start\": \"1400\",\n              \"end\": \"+0000\"\n            }\n          ],\n          \"segments\": []\n        }\n      ]\n    },\n    \"popular\": {\n      \"timeframes\": [\n        {\n          \"days\": [5],\n          \"includesToday\": true,\n          \"open\": [\n            {\n              \"start\": \"1700\",\n              \"end\": \"+0000\"\n            }\n          ],\n          \"segments\": []\n        },\n        {\n          \"days\": [6],\n          \"open\": [\n            {\n              \"start\": \"1600\",\n              \"end\": \"+0000\"\n            }\n          ],\n          \"segments\": []\n        },\n        {\n          \"days\": [7],\n          \"open\": [\n            {\n              \"start\": \"1500\",\n              \"end\": \"2300\"\n            }\n          ],\n          \"segments\": []\n        },\n        {\n          \"days\": [1, 2, 3],\n          \"open\": [\n            {\n              \"start\": \"1800\",\n              \"end\": \"2300\"\n            }\n          ],\n          \"segments\": []\n        },\n        {\n          \"days\": [4],\n          \"open\": [\n            {\n              \"start\": \"1800\",\n              \"end\": \"+0000\"\n            }\n          ],\n          \"segments\": []\n        }\n      ]\n    }\n  }\n}"
                  }
                },
                "schema": {
                  "description": "The hours of operation for a specific venue.",
                  "properties": {
                    "description": "Array of properties for the hours of operation for a specific venue.",
                    "meta": {
                      "description": "Metadata object containing additional information about the response.",
                      "properties": {
                        "code": {
                          "default": 0,
                          "description": "Status code indicating the result of retrieving the hours for a specific venue.",
                          "example": 200,
                          "type": "integer"
                        },
                        "description": "Metadata object containing additional information about the successful response for retrieving hours for a specific venue.",
                        "requestId": {
                          "description": "The unique request identifier for a successful response to a request for venue hours information for a specific venue.",
                          "example": "59a04e6fdd579714214cddc0",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "response": {
                      "description": "Response object containing the retrieved hours data for a specific venue.",
                      "properties": {
                        "description": "Response object containing the hours data for a specific venue.",
                        "hours": {
                          "description": "Venues' hours of operation for a specific venue.",
                          "properties": {
                            "description": "The hours of operation for a specific venue.",
                            "timeframes": {
                              "description": "Array of timeframes for the hours of operation for a specific venue.",
                              "items": {
                                "description": "Array of timeframes for the specified venue's hours of operation.",
                                "properties": {
                                  "days": {
                                    "description": "Array of days of the week for the hours of operation for a specific venue.",
                                    "items": {
                                      "default": 0,
                                      "description": "Days of the week for which the venue's hours are valid.",
                                      "example": 1,
                                      "type": "integer"
                                    },
                                    "type": "array"
                                  },
                                  "description": "Response object containing the operating hours for a specific venue. ",
                                  "includesToday": {
                                    "default": true,
                                    "description": "Indicates whether or not the current day's hours are included in the response for a specific venue's hours.",
                                    "example": true,
                                    "type": "boolean"
                                  },
                                  "open": {
                                    "description": "Array of objects containing the open hours for the specified venue.",
                                    "items": {
                                      "description": "A list of the open hours for a specific venue, including the timeframe and opening times for each day.",
                                      "properties": {
                                        "description": "Response containing information about the open hours of a specific venue.",
                                        "end": {
                                          "description": "The end time for each timeframe of a venue's hours, in response to a successful request.",
                                          "example": "+0100",
                                          "type": "string"
                                        },
                                        "start": {
                                          "description": "The response contains the start time for the open hours of a specific venue.",
                                          "example": "1600",
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "segments": {
                                    "description": "List of time segments for the specified venue's hours of operation.",
                                    "type": "array"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "popular": {
                          "description": "Contains information about the most popular hours of operation for a specific venue. ",
                          "properties": {
                            "description": "Properties of the popular response from the hours endpoint for a specific venue.",
                            "timeframes": {
                              "description": "An array of timeframes indicating popular hours for the specified venue.",
                              "items": {
                                "description": "List of popular timeframes for a specific venue, as part of the response from a successful request for the hours endpoint.",
                                "properties": {
                                  "days": {
                                    "description": "Array of days representing the timeframes for popular hours at the specified venue.",
                                    "items": {
                                      "default": 0,
                                      "description": "Popular days for venue hours at specified venue.",
                                      "example": 5,
                                      "type": "integer"
                                    },
                                    "type": "array"
                                  },
                                  "description": "Response object containing popular timeframes for the specified venue.\n\nResponse object containing popular timeframes for the specified venue.",
                                  "includesToday": {
                                    "default": true,
                                    "description": "Boolean indicating whether the timeframe includes today.",
                                    "example": true,
                                    "type": "boolean"
                                  },
                                  "open": {
                                    "description": "Array of popular timeframes for the specified venue, including the opening times for each timeframe.",
                                    "items": {
                                      "description": "Array of objects containing popular opening hours for the specified venue.",
                                      "properties": {
                                        "description": "Information about the popular opening times for a specific venue.",
                                        "end": {
                                          "description": "Response object containing the end time for popular timeframes for a specific venue.",
                                          "example": "+0000",
                                          "type": "string"
                                        },
                                        "start": {
                                          "description": "The start time of the popular hours for a specific venue.",
                                          "example": "1700",
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "segments": {
                                    "description": "An array of segments within the popular timeframe for the specified venue's hours of operation.",
                                    "type": "array"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "200"
          },
          "400": {
            "content": {
              "text/plain": {
                "examples": {
                  "Result": {
                    "value": "For full list of API error codes:\nhttps://location.foursquare.com/developer/reference/errors-v2"
                  }
                }
              }
            },
            "description": "400"
          }
        },
        "security": [
          {
            "ManagedUserTokenAuth": []
          }
        ],
        "summary": "Get Venue Hours",
        "tags": [
          "Venues"
        ]
      }
    },
    "/venues/{venue_id}/photos": {
      "get": {
        "deprecated": false,
        "description": "Get the photos associated with the specified venue.",
        "operationId": "get-venue-photos",
        "parameters": [
          {
            "description": "The venue you want photos for; e.g., Foursquare HQ's venue_id = 5a187743ccad6b307315e6fe",
            "in": "path",
            "name": "venue_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The API version date as documented [here](/reference/versioning); e.g. 20231010",
            "in": "query",
            "name": "v",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Number of results to return, up to 200.",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Used to page through results, up to 50.",
            "in": "query",
            "name": "offset",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"meta\": {\n    \"code\": 200,\n    \"requestId\": \"642cab46eea295646176faba\"\n  },\n  \"notifications\": [\n    {\n      \"type\": \"notificationTray\",\n      \"item\": {\n        \"unreadCount\": 3\n      }\n    },\n    {\n      \"type\": \"unconfirmed\",\n      \"item\": {\n        \"unreadCount\": 0\n      }\n    }\n  ],\n  \"response\": {\n    \"photos\": {\n      \"count\": 3,\n      \"items\": [\n        {\n          \"id\": \"5aeb7f7389ad460024c22206\",\n          \"createdAt\": 1525383027,\n          \"source\": {\n            \"name\": \"Swarm for iOS\",\n            \"url\": \"https://www.swarmapp.com\"\n          },\n          \"prefix\": \"https://fastly.4sqi.net/img/general/\",\n          \"suffix\": \"/5435652_tVudly9wn9jCMpn9N6qT54RBpyx-rc3BGWg9o4E1gOk.jpg\",\n          \"width\": 1440,\n          \"height\": 1828,\n          \"user\": {\n            \"id\": \"12345\",\n            \"firstName\": \"John\",\n            \"lastName\": \"Smith\",\n            \"gender\": \"male\",\n            \"countryCode\": \"US\",\n            \"photo\": {\n              \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n              \"suffix\": \"/blank_boy.png\"\n            },\n            \"isAnonymous\": false\n          },\n          \"checkin\": {\n            \"id\": \"5aeb7f67db1d81002c461c7e\",\n            \"createdAt\": 1525383015,\n            \"type\": \"checkin\",\n            \"timeZoneOffset\": -240\n          },\n          \"visibility\": \"public\"\n        },\n        {\n          \"id\": \"5ae8dd16029a550039b83f03\",\n          \"createdAt\": 1525210390,\n          \"source\": {\n            \"name\": \"Swarm for iOS\",\n            \"url\": \"https://www.swarmapp.com\"\n          },\n          \"prefix\": \"https://fastly.4sqi.net/img/general/\",\n          \"suffix\": \"/386427136_I5e039H76JppC17htf_W1O024KONpSL6cjmJVsjqps0.jpg\",\n          \"width\": 1440,\n          \"height\": 1920,\n          \"user\": {\n            \"id\": \"12345\",\n            \"firstName\": \"John\",\n            \"lastName\": \"Smith\",\n            \"gender\": \"male\",\n            \"countryCode\": \"US\",\n            \"photo\": {\n              \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n              \"suffix\": \"/blank_boy.png\"\n            },\n            \"isAnonymous\": false\n          },\n          \"checkin\": {\n            \"id\": \"5ae8dcefd0a149002c67da84\",\n            \"createdAt\": 1525210351,\n            \"type\": \"checkin\",\n            \"timeZoneOffset\": -240\n          },\n          \"visibility\": \"public\"\n        },\n        {\n          \"id\": \"5ae87ec28496ca002c036bb0\",\n          \"createdAt\": 1525186242,\n          \"source\": {\n            \"name\": \"Swarm for iOS\",\n            \"url\": \"https://www.swarmapp.com\"\n          },\n          \"prefix\": \"https://fastly.4sqi.net/img/general/\",\n          \"suffix\": \"/47321_be2z7K5ZLWO4wOs5wBuyzrKCTlNf0HWNvuskWcie8tI.jpg\",\n          \"width\": 1440,\n          \"height\": 1920,\n          \"user\": {\n            \"id\": \"12345\",\n            \"firstName\": \"John\",\n            \"lastName\": \"Smith\",\n            \"gender\": \"male\",\n            \"countryCode\": \"US\",\n            \"photo\": {\n              \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n              \"suffix\": \"/blank_boy.png\"\n            },\n            \"isAnonymous\": false\n          },\n          \"checkin\": {\n            \"id\": \"5ae8741eb1538e002ce6762b\",\n            \"createdAt\": 1525183518,\n            \"type\": \"checkin\",\n            \"timeZoneOffset\": -240\n          },\n          \"visibility\": \"public\"\n        }\n      ],\n      \"dupesRemoved\": 0\n    }\n  }\n}"
                  }
                },
                "schema": {
                  "description": "A list of photos for the specified venue.",
                  "properties": {
                    "description": "Properties for retrieving photos from a specific venue.",
                    "meta": {
                      "description": "Response meta data for retrieving photos associated with a specific venue.",
                      "properties": {
                        "code": {
                          "default": 0,
                          "description": "Response status code for successful retrieval of photo metadata for a specified venue.",
                          "example": 200,
                          "type": "integer"
                        },
                        "description": "Metadata object containing additional information about the success of retrieving photos for a specific venue.",
                        "requestId": {
                          "description": "Unique identifier for the API request.",
                          "example": "642cab46eea295646176faba",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "notifications": {
                      "description": "Array of notification objects for the response to the request for photos of a specific venue.",
                      "items": {
                        "description": "An array of notification objects containing information about unread items related to a specific venue's photos.",
                        "properties": {
                          "description": "Array of notification objects for photos obtained from a specific venue.",
                          "item": {
                            "description": "Array of notification objects containing the number of unread items for a particular venue.",
                            "properties": {
                              "description": "An array of notification objects with information about the number of unread items for a specific venue's photos on a successful API request.",
                              "unreadCount": {
                                "default": 0,
                                "description": "Number of unread items in the notification for a specific venue.",
                                "example": 3,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": {
                            "description": "Type of notification for a specific venue's photos.",
                            "example": "notificationTray",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "response": {
                      "description": "Response object for retrieving photos for a specific venue.",
                      "properties": {
                        "description": "Array of photo objects for the specified venue.",
                        "photos": {
                          "description": "An array of photo objects retrieved from the specified venue, including information such as the photo's unique identifier, creation timestamp, source, URL, and user who uploaded it.",
                          "properties": {
                            "count": {
                              "default": 0,
                              "description": "The number of photos in the response for a specific venue.",
                              "example": 3,
                              "type": "integer"
                            },
                            "description": "Array of photo objects associated with the specified venue.",
                            "dupesRemoved": {
                              "default": 0,
                              "description": "Number of duplicate photos removed from the response for a specific venue's photos.",
                              "example": 0,
                              "type": "integer"
                            },
                            "items": {
                              "description": "Array of photo objects for a specific venue.",
                              "items": {
                                "description": "Array of photo objects associated with the specified venue.",
                                "properties": {
                                  "checkin": {
                                    "description": "This object provides a list of photos associated with the specified venue, including the check-in information for each photo.",
                                    "properties": {
                                      "createdAt": {
                                        "default": 0,
                                        "description": "Timestamp indicating when the associated check-in for a photo was created; UNIX timestamp in seconds since Epoch.",
                                        "example": 1525383015,
                                        "type": "integer"
                                      },
                                      "description": "Response object containing an array of check-ins associated with photos from a specific venue.",
                                      "id": {
                                        "description": "Unique identifier for the check-in associated with the photo at the specified venue.",
                                        "example": "5aeb7f67db1d81002c461c7e",
                                        "type": "string"
                                      },
                                      "timeZoneOffset": {
                                        "default": 0,
                                        "description": "This integer is the time zone offset of the associated check-in for a photo retrieved from a specific venue.",
                                        "example": -240,
                                        "type": "integer"
                                      },
                                      "type": {
                                        "description": "Response properties for photos associated with a specific venue, including the type of associated check-in.",
                                        "example": "checkin",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "createdAt": {
                                    "default": 0,
                                    "description": "Timestamp indicating when the photo was created; UNIX timestamp in seconds since Epoch.",
                                    "example": 1525383027,
                                    "type": "integer"
                                  },
                                  "description": "Array of photo objects associated with the specified venue.",
                                  "height": {
                                    "default": 0,
                                    "description": "The height of photos for a specific venue.",
                                    "example": 1828,
                                    "type": "integer"
                                  },
                                  "id": {
                                    "description": "Unique identifiers of photos associated with a specific venue.",
                                    "example": "5aeb7f7389ad460024c22206",
                                    "type": "string"
                                  },
                                  "prefix": {
                                    "description": "The prefix property for photos retrieved from a specific venue.",
                                    "example": "https://fastly.4sqi.net/img/general/",
                                    "type": "string"
                                  },
                                  "source": {
                                    "description": "The source of photos associated with a specific venue.",
                                    "properties": {
                                      "description": "Array of photo objects from the specified venue, including information on the source of the photo.",
                                      "name": {
                                        "description": "The name of the source where the photo was obtained.",
                                        "example": "Swarm for iOS",
                                        "type": "string"
                                      },
                                      "url": {
                                        "description": "The source URL for photos associated with a specific venue.",
                                        "example": "https://www.swarmapp.com",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "suffix": {
                                    "description": "URL suffix for the image.",
                                    "example": "/5435652_tVudly9wn9jCMpn9N6qT54RBpyx-rc3BGWg9o4E1gOk.jpg",
                                    "type": "string"
                                  },
                                  "user": {
                                    "description": "Array of photo objects containing information about the users who uploaded the photos.",
                                    "properties": {
                                      "countryCode": {
                                        "description": "The country code for the user who uploaded the photos for a specific venue.",
                                        "example": "US",
                                        "type": "string"
                                      },
                                      "description": "Array of user objects associated with photos from a specific venue.",
                                      "firstName": {
                                        "description": "Response containing the first names of users who uploaded photos for a specific venue.",
                                        "example": "John",
                                        "type": "string"
                                      },
                                      "gender": {
                                        "description": "Gender information for user who uploaded photos associated with a specific venue.",
                                        "example": "male",
                                        "type": "string"
                                      },
                                      "id": {
                                        "description": "Unique identifier for the user who uploaded photos for a specific venue.",
                                        "example": "12345",
                                        "type": "string"
                                      },
                                      "isAnonymous": {
                                        "default": true,
                                        "description": "Indicates if the user who uploaded the photo is anonymous.",
                                        "example": false,
                                        "type": "boolean"
                                      },
                                      "lastName": {
                                        "description": "Last name of the user who uploaded the photo for the specified venue.",
                                        "example": "Smith",
                                        "type": "string"
                                      },
                                      "photo": {
                                        "description": "User profile photo for photos retrieved from a specific venue on Foursquare.",
                                        "properties": {
                                          "description": "Array of photo objects with details about the user's profile photo.",
                                          "prefix": {
                                            "description": "URL prefix for the image.",
                                            "example": "https://fastly.4sqi.net/img/user/",
                                            "type": "string"
                                          },
                                          "suffix": {
                                            "description": "URL suffix for the image.",
                                            "example": "/blank_boy.png",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "visibility": {
                                    "description": "Array of photos from a specific venue, including visibility information.",
                                    "example": "public",
                                    "type": "string"
                                  },
                                  "width": {
                                    "default": 0,
                                    "description": "Width of photo in pixels.",
                                    "example": 1440,
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "200"
          },
          "400": {
            "content": {
              "text/plain": {
                "examples": {
                  "Result": {
                    "value": "For full list of API error codes:\nhttps://location.foursquare.com/developer/reference/errors-v2"
                  }
                }
              }
            },
            "description": "400"
          }
        },
        "security": [
          {
            "ManagedUserTokenAuth": []
          }
        ],
        "summary": "Get Venue Photos",
        "tags": [
          "Venues"
        ]
      }
    },
    "/venues/{venue_id}/rate": {
      "post": {
        "deprecated": false,
        "description": "Allow a user to rate a venue; i.e. dislike/average/like.",
        "operationId": "rate-a-venue",
        "parameters": [
          {
            "in": "path",
            "name": "venue_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The API version date as documented [here](/reference/versioning); e.g. 20231010",
            "in": "query",
            "name": "v",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "1 = dislike, 2 = average, 3 = like",
            "in": "query",
            "name": "value",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"meta\": {\n    \"code\": 200,\n    \"requestId\": \"65131b0c3bb3f84b79e80f57\"\n  },\n  \"notifications\": [\n    {\n      \"type\": \"notificationTray\",\n      \"item\": {\n        \"unreadCount\": 3\n      }\n    },\n    {\n      \"type\": \"unconfirmed\",\n      \"item\": {\n        \"unreadCount\": 0\n      }\n    }\n  ],\n  \"response\": {}\n}"
                  }
                },
                "schema": {
                  "description": "A response object detailing the rating and the associated venue.",
                  "properties": {
                    "description": "The response for a successful rate post for a specific venue.",
                    "meta": {
                      "description": "Response metadata for the rate post endpoint for a specific venue.",
                      "properties": {
                        "code": {
                          "default": 0,
                          "description": "Status code indicating the result of the rate post request for a specific venue.",
                          "example": 200,
                          "type": "integer"
                        },
                        "description": "Properties of the metadata object for a successful response to the rate a venue endpoint.",
                        "requestId": {
                          "description": "The unique identifier for the API request for rating a specific venue.",
                          "example": "65131b0c3bb3f84b79e80f57",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "notifications": {
                      "description": "Array of notification objects containing information about the success of the API request to rate a venue.",
                      "items": {
                        "description": "Array of notification objects for a successful POST request to rate a specific venue.",
                        "properties": {
                          "description": "Array of notification objects for the specified venue's rate post response.",
                          "item": {
                            "description": "Array of notification objects containing information about the number of unread items in the response for the specified venue.",
                            "properties": {
                              "description": "Array of notification objects containing the number of unread items for a specific venue.",
                              "unreadCount": {
                                "default": 0,
                                "description": "Number of unread notifications for a specific venue.",
                                "example": 3,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": {
                            "description": "Response object containing notification types for a rated venue.",
                            "example": "notificationTray",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "response": {
                      "description": "Properties of the response object for a successful rate post to a specific venue.",
                      "properties": {
                        "description": "Properties of the response object for the successful POST request to rate a specific venue."
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "200"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "description": "Validation error when attempting to rate a specific venue.",
                  "properties": {
                    "description": "Invalid request body."
                  },
                  "type": "object"
                }
              }
            },
            "description": "400"
          }
        },
        "security": [
          {
            "ManagedUserTokenAuth": []
          }
        ],
        "summary": "Rate Venue",
        "tags": [
          "Venues"
        ]
      }
    },
    "/venues/{venue_id}/related": {
      "get": {
        "deprecated": false,
        "description": "Return a list of venues near the current location with the most people currently checked in.",
        "operationId": "get-related-venues",
        "parameters": [
          {
            "in": "path",
            "name": "venue_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The API version date as documented [here](/reference/versioning); e.g. 20231010",
            "in": "query",
            "name": "v",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"meta\": {\n    \"code\": 200,\n    \"requestId\": \"644c26bc95a7917df4431cb6\"\n  },\n  \"notifications\": [\n    {\n      \"type\": \"notificationTray\",\n      \"item\": {\n        \"unreadCount\": 3\n      }\n    },\n    {\n      \"type\": \"unconfirmed\",\n      \"item\": {\n        \"unreadCount\": 0\n      }\n    }\n  ],\n  \"response\": {\n    \"related\": [\n      {\n        \"count\": 3,\n        \"summary\": \"child_venues\",\n        \"items\": [\n          {\n            \"venue\": {\n              \"id\": \"5ae86b42fe3740002ca5c615\",\n              \"name\": \"Fat Denny’s Cafeteria\",\n              \"contact\": {},\n              \"location\": {\n                \"address\": \"50 W 23rd St\",\n                \"crossStreet\": \"btwn 5th & 6th Ave\",\n                \"lat\": 40.74189756982552,\n                \"lng\": -73.99199674964586,\n                \"labeledLatLngs\": [\n                  {\n                    \"label\": \"display\",\n                    \"lat\": 40.74189756982552,\n                    \"lng\": -73.99199674964586\n                  }\n                ],\n                \"postalCode\": \"10010\",\n                \"cc\": \"US\",\n                \"neighborhood\": \"Flatiron District\",\n                \"city\": \"New York\",\n                \"state\": \"NY\",\n                \"country\": \"United States\",\n                \"contextLine\": \"New York, NY\",\n                \"contextGeoId\": 72057594043056510,\n                \"formattedAddress\": {\n                  \"text\": \"50 W 23rd St\\n(btwn 5th & 6th Ave)\\nNew York, NY 10010\",\n                  \"entities\": [\n                    {\n                      \"indices\": [\n                        13,\n                        33\n                      ],\n                      \"type\": \"crossStreet\"\n                    }\n                  ]\n                }\n              },\n              \"categories\": [\n                {\n                  \"id\": \"54f4ba06498e2cf5561da814\",\n                  \"name\": \"Corporate Cafeteria\",\n                  \"pluralName\": \"Corporate Cafeterias\",\n                  \"shortName\": \"Corporate Cafeteria\",\n                  \"icon\": {\n                    \"prefix\": \"https://ss3.4sqi.net/img/categories_v2/education/cafeteria_\",\n                    \"suffix\": \".png\"\n                  },\n                  \"primary\": true\n                }\n              ],\n              \"verified\": true,\n              \"stats\": {\n                \"tipCount\": 23,\n                \"usersCount\": 581,\n                \"checkinsCount\": 4401\n              },\n              \"url\": \"https://foursquare.com\",\n              \"venueRatingBlacklisted\": true,\n              \"beenHere\": {\n                \"lastCheckinExpiredAt\": 0\n              },\n              \"photos\": {\n                \"count\": 0,\n                \"groups\": [\n                  {\n                    \"type\": \"venue\",\n                    \"name\": \"Venue photos\",\n                    \"count\": 0,\n                    \"items\": [\n                      {\n                        \"id\": \"5b18796b3fcee8002c6fbfcf\",\n                        \"createdAt\": 1528330603,\n                        \"prefix\": \"https://fastly.4sqi.net/img/general/\",\n                        \"suffix\": \"/2630044_V8zvT__IoEOMnrARuuGUU2kDsPVisKFsJpGo8CzmnaI.jpg\",\n                        \"width\": 1920,\n                        \"height\": 1440,\n                        \"user\": {\n                          \"id\": \"123456\",\n                          \"firstName\": \"John\",\n                          \"lastName\": \"Smith\",\n                          \"gender\": \"male\",\n                          \"countryCode\": \"US\",\n                          \"photo\": {\n                            \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n                            \"suffix\": \"/blank_boy.png\"\n                          },\n                          \"isAnonymous\": false\n                        },\n                        \"visibility\": \"public\"\n                      }\n                    ]\n                  }\n                ]\n              },\n              \"venuePage\": {\n                \"id\": \"520907526\"\n              },\n              \"createdAt\": 1525181250,\n              \"popularityByGeo\": 0.9963835046181866,\n              \"saves\": {\n                \"count\": 0,\n                \"groups\": []\n              },\n              \"like\": false,\n              \"ok\": false,\n              \"dislike\": false\n            }\n          },\n          {\n            \"venue\": {\n              \"id\": \"5d5afcf2011df00008f79a94\",\n              \"name\": \"PDS Island\",\n              \"contact\": {},\n              \"location\": {\n                \"address\": \"50 W 23rd St\",\n                \"lat\": 40.742058823215544,\n                \"lng\": -73.9918041229248,\n                \"labeledLatLngs\": [\n                  {\n                    \"label\": \"display\",\n                    \"lat\": 40.742058823215544,\n                    \"lng\": -73.9918041229248\n                  }\n                ],\n                \"postalCode\": \"10010\",\n                \"cc\": \"US\",\n                \"neighborhood\": \"Flatiron District\",\n                \"city\": \"New York\",\n                \"state\": \"NY\",\n                \"country\": \"United States\",\n                \"contextLine\": \"New York, NY\",\n                \"contextGeoId\": 72057594043056510,\n                \"formattedAddress\": {\n                  \"text\": \"50 W 23rd St\\nNew York, NY 10010\",\n                  \"entities\": []\n                }\n              },\n              \"categories\": [\n                {\n                  \"id\": \"4bf58dd8d48988d124941735\",\n                  \"name\": \"Office\",\n                  \"pluralName\": \"Offices\",\n                  \"shortName\": \"Office\",\n                  \"icon\": {\n                    \"prefix\": \"https://ss3.4sqi.net/img/categories_v2/building/default_\",\n                    \"suffix\": \".png\"\n                  },\n                  \"primary\": true\n                }\n              ],\n              \"verified\": true,\n              \"stats\": {\n                \"tipCount\": 6,\n                \"usersCount\": 28,\n                \"checkinsCount\": 492\n              },\n              \"venueRatingBlacklisted\": true,\n              \"beenHere\": {\n                \"lastCheckinExpiredAt\": 0\n              },\n              \"photos\": {\n                \"count\": 0,\n                \"groups\": [\n                  {\n                    \"type\": \"venue\",\n                    \"name\": \"Venue photos\",\n                    \"count\": 0,\n                    \"items\": [\n                      {\n                        \"id\": \"5daf279cbfb9f2000858272a\",\n                        \"createdAt\": 1571760028,\n                        \"prefix\": \"https://fastly.4sqi.net/img/general/\",\n                        \"suffix\": \"/554191238_vih9Tmu6YU1geq_cFtfc1qrTGOJrZp6cK8scGYCNfQw.jpg\",\n                        \"width\": 1440,\n                        \"height\": 1920,\n                        \"user\": {\n                          \"id\": \"123456\",\n                          \"firstName\": \"John\",\n                          \"lastName\": \"Smith\",\n                          \"gender\": \"male\",\n                          \"countryCode\": \"US\",\n                          \"photo\": {\n                            \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n                            \"suffix\": \"/blank_boy.png\"\n                          },\n                          \"isAnonymous\": false\n                        },\n                        \"visibility\": \"public\"\n                      }\n                    ]\n                  }\n                ]\n              },\n              \"venuePage\": {\n                \"id\": \"550371248\"\n              },\n              \"createdAt\": 1566244082,\n              \"popularityByGeo\": 0.9145310264082217,\n              \"saves\": {\n                \"count\": 0,\n                \"groups\": []\n              },\n              \"like\": false,\n              \"ok\": false,\n              \"dislike\": false\n            }\n          },\n          {\n            \"venue\": {\n              \"id\": \"5bcf50fedeb4950025b9cad5\",\n              \"name\": \"The Library\",\n              \"contact\": {},\n              \"location\": {\n                \"address\": \"50 W 23rd St\",\n                \"lat\": 40.741835,\n                \"lng\": -73.991916,\n                \"labeledLatLngs\": [\n                  {\n                    \"label\": \"display\",\n                    \"lat\": 40.741835,\n                    \"lng\": -73.991916\n                  }\n                ],\n                \"postalCode\": \"10010\",\n                \"cc\": \"US\",\n                \"neighborhood\": \"Flatiron District\",\n                \"city\": \"New York\",\n                \"state\": \"NY\",\n                \"country\": \"United States\",\n                \"contextLine\": \"New York, NY\",\n                \"contextGeoId\": 72057594043056510,\n                \"formattedAddress\": {\n                  \"text\": \"50 W 23rd St\\nNew York, NY 10010\",\n                  \"entities\": []\n                }\n              },\n              \"categories\": [\n                {\n                  \"id\": \"4bf58dd8d48988d12f941735\",\n                  \"name\": \"Library\",\n                  \"pluralName\": \"Libraries\",\n                  \"shortName\": \"Library\",\n                  \"icon\": {\n                    \"prefix\": \"https://ss3.4sqi.net/img/categories_v2/building/library_\",\n                    \"suffix\": \".png\"\n                  },\n                  \"primary\": true\n                }\n              ],\n              \"verified\": false,\n              \"stats\": {\n                \"tipCount\": 2,\n                \"usersCount\": 29,\n                \"checkinsCount\": 157\n              },\n              \"beenHere\": {\n                \"lastCheckinExpiredAt\": 0\n              },\n              \"photos\": {\n                \"count\": 0,\n                \"groups\": [\n                  {\n                    \"type\": \"venue\",\n                    \"name\": \"Venue photos\",\n                    \"count\": 0,\n                    \"items\": [\n                      {\n                        \"id\": \"5e556505e4d5ff000731bf03\",\n                        \"createdAt\": 1582654725,\n                        \"prefix\": \"https://fastly.4sqi.net/img/general/\",\n                        \"suffix\": \"/private_content_2.png\",\n                        \"width\": 400,\n                        \"height\": 400,\n                        \"user\": {\n                          \"id\": \"123456\",\n                          \"firstName\": \"John\",\n                          \"lastName\": \"Smith\",\n                          \"gender\": \"male\",\n                          \"address\": \"\",\n                          \"city\": \"\",\n                          \"state\": \"\",\n                          \"countryCode\": \"US\",\n                          \"photo\": {\n                            \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n                            \"suffix\": \"/blank_boy.png\"\n                          },\n                          \"isAnonymous\": false\n                        },\n                        \"visibility\": \"public\"\n                      }\n                    ]\n                  }\n                ]\n              },\n              \"createdAt\": 1540313342,\n              \"popularityByGeo\": 0.025883132088413734,\n              \"saves\": {\n                \"count\": 0,\n                \"groups\": []\n              },\n              \"like\": false,\n              \"ok\": false,\n              \"dislike\": false\n            }\n          }\n        ],\n        \"title\": \"Places inside Foursquare HQ\",\n        \"seeAllPath\": {\n          \"type\": \"path\",\n          \"object\": {\n            \"url\": \"/search/recommendations?superVenueId=5a187743ccad6b307315e6fe\"\n          }\n        },\n        \"seeAllText\": \"See all places\"\n      }\n    ]\n  }\n}"
                  }
                },
                "schema": {
                  "description": "A list of related venues for the specified venue ID.",
                  "properties": {
                    "description": "Properties related to a successful response for retrieving information about venues related to a specific venue.",
                    "meta": {
                      "description": "Metadata object containing additional information about the response.",
                      "properties": {
                        "code": {
                          "default": 0,
                          "description": "Status code indicating the result of the related venues API request.",
                          "example": 200,
                          "type": "integer"
                        },
                        "description": "Metadata object containing additional information about the response for retrieving related venues at a specific venue ID.",
                        "requestId": {
                          "description": "The request ID for related venues for a specific venue.",
                          "example": "644c26bc95a7917df4431cb6",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "notifications": {
                      "description": "Array of notification objects for the specified venue.",
                      "items": {
                        "description": "Array of notification objects containing information about related venues. ",
                        "properties": {
                          "description": "Array of notification objects containing unread counts for a specific venue's related items, obtained from the notification tray.",
                          "item": {
                            "description": "Array of notification objects containing information about the related venues for the specified venue ID.",
                            "properties": {
                              "description": "Array of notification items containing unread count for a given venue.",
                              "unreadCount": {
                                "default": 0,
                                "description": "Number of unread items in notifications for the specified venue.",
                                "example": 3,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": {
                            "description": "The type of notification for a given venue's related items.",
                            "example": "notificationTray",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "response": {
                      "description": "Array of related venues for the specified venue.",
                      "properties": {
                        "description": "Array of related venues and their properties, including unique identifier, name, location, and distance from the user's location, for a given venue ID.",
                        "related": {
                          "description": "Array of related venues for the specified venue ID.",
                          "items": {
                            "description": "Array of related venues associated with the specified venue.",
                            "properties": {
                              "count": {
                                "default": 0,
                                "description": "Number of related items associated with the specified venue.",
                                "example": 3,
                                "type": "integer"
                              },
                              "description": "Array of related venue objects for the specified venue ID.",
                              "items": {
                                "description": "Array of related items associated with the specified venue.",
                                "items": {
                                  "description": "List of related venues for a given venue ID.",
                                  "properties": {
                                    "description": "Array of related items for the specified venue.",
                                    "venue": {
                                      "description": "The related venues for a specific venue.",
                                      "properties": {
                                        "beenHere": {
                                          "description": "Venue related items for the specified venue, including information on whether the user has been to each related venue.",
                                          "properties": {
                                            "description": "An array of venues that have been visited by the user, with information on the check-in and location.",
                                            "lastCheckinExpiredAt": {
                                              "default": 0,
                                              "description": "Unique identifier for the last expired check-in associated with the related venues retrieved from the specified venue; UNIX timestamp in seconds since Epoch.",
                                              "example": 0,
                                              "type": "integer"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "categories": {
                                          "description": "An array of categories for related venues associated with the specified venue.",
                                          "items": {
                                            "description": "Array of categories associated with the related venue items retrieved for the specified venue ID.",
                                            "properties": {
                                              "description": "Array of category objects for related venues.",
                                              "icon": {
                                                "description": "Array of category icons for related venues.",
                                                "properties": {
                                                  "description": "Array of category icons for venues related to the specified venue.",
                                                  "prefix": {
                                                    "description": "URL prefix.",
                                                    "example": "https://ss3.4sqi.net/img/categories_v2/education/cafeteria_",
                                                    "type": "string"
                                                  },
                                                  "suffix": {
                                                    "description": "Image suffix.",
                                                    "example": ".png",
                                                    "type": "string"
                                                  }
                                                },
                                                "type": "object"
                                              },
                                              "id": {
                                                "description": "A unique identifer.",
                                                "example": "54f4ba06498e2cf5561da814",
                                                "type": "string"
                                              },
                                              "name": {
                                                "description": "Related venues' category names for a specific venue.",
                                                "example": "Corporate Cafeteria",
                                                "type": "string"
                                              },
                                              "pluralName": {
                                                "description": "Plural category names related to the specified venue.",
                                                "example": "Corporate Cafeterias",
                                                "type": "string"
                                              },
                                              "primary": {
                                                "default": true,
                                                "description": "Primary categories of related venues for a given venue ID.",
                                                "example": true,
                                                "type": "boolean"
                                              },
                                              "shortName": {
                                                "description": "Related venues' categories' short names from a specific venue.",
                                                "example": "Corporate Cafeteria",
                                                "type": "string"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "type": "array"
                                        },
                                        "contact": {
                                          "description": "Contact information for related venues to the specified venue.",
                                          "properties": {
                                            "description": "Response for retrieving related venues for a given venue, including contact information."
                                          },
                                          "type": "object"
                                        },
                                        "createdAt": {
                                          "default": 0,
                                          "description": "Timestamp of when the related venue was created; UNIX timestamp in seconds since Epoch.",
                                          "example": 1525181250,
                                          "type": "integer"
                                        },
                                        "description": "Array of venue objects for related venues associated with the specified venue.",
                                        "dislike": {
                                          "default": true,
                                          "description": "Venue dislike status for related venues.",
                                          "example": false,
                                          "type": "boolean"
                                        },
                                        "id": {
                                          "description": "Related venues for a specific venue ID.",
                                          "example": "5ae86b42fe3740002ca5c615",
                                          "type": "string"
                                        },
                                        "like": {
                                          "default": true,
                                          "description": "Boolean indicating whether the venue has been liked by the user.",
                                          "example": false,
                                          "type": "boolean"
                                        },
                                        "location": {
                                          "description": "Metadata object containing information about the related venues for a given venue, including their locations.",
                                          "properties": {
                                            "address": {
                                              "description": "The addresses of related venues for a specific venue, given its ID.",
                                              "example": "50 W 23rd St",
                                              "type": "string"
                                            },
                                            "cc": {
                                              "description": "The related venues for a specific venue, including the country code for each venue's location.",
                                              "example": "US",
                                              "type": "string"
                                            },
                                            "city": {
                                              "description": "The venue's city.",
                                              "example": "New York",
                                              "type": "string"
                                            },
                                            "contextGeoId": {
                                              "default": 0,
                                              "description": "Related venues near a specific venue by its ID, including their location and context geo ID.",
                                              "example": 72057594043056510,
                                              "type": "integer"
                                            },
                                            "contextLine": {
                                              "description": "Location and context information.",
                                              "example": "New York, NY",
                                              "type": "string"
                                            },
                                            "country": {
                                              "description": "The country of the venue.",
                                              "example": "United States",
                                              "type": "string"
                                            },
                                            "crossStreet": {
                                              "description": "The cross street of a related venue from the response data.",
                                              "example": "btwn 5th & 6th Ave",
                                              "type": "string"
                                            },
                                            "description": " Response object containing an array of related venues near the specified venue, with location data for each.",
                                            "formattedAddress": {
                                              "description": "Formatted address of the related venue associated with the specified venue ID.",
                                              "properties": {
                                                "description": "Array of venue objects containing the formatted street addresses for related venues.",
                                                "entities": {
                                                  "description": "Formatted address entities for related venues in the response for a specific venue.",
                                                  "items": {
                                                    "description": "Array of entities found in the formatted address of a related venue, including labels, latitude and longitude coordinates, and distance from the user's location, for an array of venues related to the specified venue ID.",
                                                    "properties": {
                                                      "description": "An array of labeled latitude and longitude coordinates for the venues related to the specified venue, including the formatted street address, cross street, and coordinates for each.",
                                                      "indices": {
                                                        "description": "Array of related venues' formatted addresses indices.",
                                                        "items": {
                                                          "default": 0,
                                                          "description": "List of indices for the formatted address of a venue's related items.",
                                                          "example": 13,
                                                          "type": "integer"
                                                        },
                                                        "type": "array"
                                                      },
                                                      "type": {
                                                        "description": "A list of related venues with formatted addresses and associated location entities.",
                                                        "example": "crossStreet",
                                                        "type": "string"
                                                      }
                                                    },
                                                    "type": "object"
                                                  },
                                                  "type": "array"
                                                },
                                                "text": {
                                                  "description": "Related venues for a specified venue, including their formatted addresses.",
                                                  "example": "50 W 23rd St\n(btwn 5th & 6th Ave)\nNew York, NY 10010",
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "labeledLatLngs": {
                                              "description": "Array of labeled latitude and longitude coordinates for related venues near the specified venue, including label, latitude, and longitude properties.",
                                              "items": {
                                                "description": "Array of labeled latitude and longitude coordinates for related venues to the specified '{venue_id}' with labeled coordinates for the venue's location.",
                                                "properties": {
                                                  "description": "Venue related items with labeled latitude and longitude coordinates for a given venue's location.",
                                                  "label": {
                                                    "description": "Labeled latitude and longitude coordinates for related venues in the response.",
                                                    "example": "display",
                                                    "type": "string"
                                                  },
                                                  "lat": {
                                                    "default": 0,
                                                    "description": "Array of labeled latitude coordinates of related venues for the specified venue.",
                                                    "example": 40.74189756982552,
                                                    "type": "number"
                                                  },
                                                  "lng": {
                                                    "default": 0,
                                                    "description": "An array of labeled longitude coordinates for the venues related to the specified venue.",
                                                    "example": -73.99199674964586,
                                                    "type": "number"
                                                  }
                                                },
                                                "type": "object"
                                              },
                                              "type": "array"
                                            },
                                            "lat": {
                                              "default": 0,
                                              "description": "Latitude coordinate for the related venue.",
                                              "example": 40.74189756982552,
                                              "type": "number"
                                            },
                                            "lng": {
                                              "default": 0,
                                              "description": "Longitude coordinate of the related venue's location.",
                                              "example": -73.99199674964586,
                                              "type": "number"
                                            },
                                            "neighborhood": {
                                              "description": "The related venue's neighborhood.",
                                              "example": "Flatiron District",
                                              "type": "string"
                                            },
                                            "postalCode": {
                                              "description": "The postal code of related venues based on the specified venue ID.",
                                              "example": "10010",
                                              "type": "string"
                                            },
                                            "state": {
                                              "description": "The related venue's state.",
                                              "example": "NY",
                                              "type": "string"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "name": {
                                          "description": "The names of each related venue.",
                                          "example": "Fat Denny’s Cafeteria",
                                          "type": "string"
                                        },
                                        "ok": {
                                          "default": true,
                                          "description": "Flag indicating if the response from the related venues endpoint for a specific venue was successful.",
                                          "example": false,
                                          "type": "boolean"
                                        },
                                        "photos": {
                                          "description": "Response of photos related to a specific venue.",
                                          "properties": {
                                            "count": {
                                              "default": 0,
                                              "description": "Total number of photos associated with related venues.",
                                              "example": 0,
                                              "type": "integer"
                                            },
                                            "description": "Photos of related venues for a given venue ID.",
                                            "groups": {
                                              "description": "Array of photo groups for related venues.",
                                              "items": {
                                                "description": "Contains an array of photo objects retrieved from the related venues of the specified venue.",
                                                "properties": {
                                                  "count": {
                                                    "default": 0,
                                                    "description": "Total number of photos in the response for related venues.",
                                                    "example": 0,
                                                    "type": "integer"
                                                  },
                                                  "description": "Array of photo objects for a related venue.",
                                                  "items": {
                                                    "description": "Array of photo objects associated with related venues for a given venue ID.",
                                                    "items": {
                                                      "description": "Array of photos associated with related venues.",
                                                      "properties": {
                                                        "createdAt": {
                                                          "default": 0,
                                                          "description": "Timestamp for related photos associated with a specific venue; UNIX timestamp in seconds since Epoch.",
                                                          "example": 1528330603,
                                                          "type": "integer"
                                                        },
                                                        "description": "Array of photo objects for the photos associated with venues related to the requested venue.",
                                                        "height": {
                                                          "default": 0,
                                                          "description": "Height of photos for related venues.",
                                                          "example": 1440,
                                                          "type": "integer"
                                                        },
                                                        "id": {
                                                          "description": "Response object containing an array of related venue photos for the specified venue ID.",
                                                          "example": "5b18796b3fcee8002c6fbfcf",
                                                          "type": "string"
                                                        },
                                                        "prefix": {
                                                          "description": "Photo URL prefix.",
                                                          "example": "https://fastly.4sqi.net/img/general/",
                                                          "type": "string"
                                                        },
                                                        "suffix": {
                                                          "description": "Photo URL suffix.",
                                                          "example": "/2630044_V8zvT__IoEOMnrARuuGUU2kDsPVisKFsJpGo8CzmnaI.jpg",
                                                          "type": "string"
                                                        },
                                                        "user": {
                                                          "description": "Photos of users who have visited a related venue.",
                                                          "properties": {
                                                            "countryCode": {
                                                              "description": "Retrieve the country code for the user associated with the photos of related venues for a specific venue.",
                                                              "example": "US",
                                                              "type": "string"
                                                            },
                                                            "description": "Array of photo objects for related venues.",
                                                            "firstName": {
                                                              "description": "The first name related to the related venue photo.",
                                                              "example": "John",
                                                              "type": "string"
                                                            },
                                                            "gender": {
                                                              "description": "User gender information.",
                                                              "example": "male",
                                                              "type": "string"
                                                            },
                                                            "id": {
                                                              "description": "Unique identifier.",
                                                              "example": "123456",
                                                              "type": "string"
                                                            },
                                                            "isAnonymous": {
                                                              "default": true,
                                                              "description": "Get anonymous user information for related photos at a specific venue.",
                                                              "example": false,
                                                              "type": "boolean"
                                                            },
                                                            "lastName": {
                                                              "description": "Last name of the user who uploaded the photos.",
                                                              "example": "Smith",
                                                              "type": "string"
                                                            },
                                                            "photo": {
                                                              "description": "Venue's related photos grouped by user.",
                                                              "properties": {
                                                                "description": "Related venues with associated photos for a specific venue.",
                                                                "prefix": {
                                                                  "description": "Photo URL prefix.",
                                                                  "example": "https://fastly.4sqi.net/img/user/",
                                                                  "type": "string"
                                                                },
                                                                "suffix": {
                                                                  "description": "Photo URL suffix.",
                                                                  "example": "/blank_boy.png",
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "type": "object"
                                                            }
                                                          },
                                                          "type": "object"
                                                        },
                                                        "visibility": {
                                                          "description": "The visibility of the photos associated with the related venues for the specified venue ID.",
                                                          "example": "public",
                                                          "type": "string"
                                                        },
                                                        "width": {
                                                          "default": 0,
                                                          "description": "The width of the photo within the specified venue's related items.",
                                                          "example": 1920,
                                                          "type": "integer"
                                                        }
                                                      },
                                                      "type": "object"
                                                    },
                                                    "type": "array"
                                                  },
                                                  "name": {
                                                    "description": "Name for related photos for a specific venue.",
                                                    "example": "Venue photos",
                                                    "type": "string"
                                                  },
                                                  "type": {
                                                    "description": "",
                                                    "example": "venue",
                                                    "type": "string"
                                                  }
                                                },
                                                "type": "object"
                                              },
                                              "type": "array"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "popularityByGeo": {
                                          "default": 0,
                                          "description": "Venue popularity by geographical location for related venues of a specific venue.",
                                          "example": 0.9963835046181866,
                                          "type": "number"
                                        },
                                        "saves": {
                                          "description": "Number of saves for related venues for the specified venue.",
                                          "properties": {
                                            "count": {
                                              "default": 0,
                                              "description": "Number of users who have saved this venue.",
                                              "example": 0,
                                              "type": "integer"
                                            },
                                            "description": "Array of venue objects representing related venues that have been saved by users.",
                                            "groups": {
                                              "description": "Array of groups containing information about the saved venues for a specific venue.",
                                              "type": "array"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "stats": {
                                          "description": "Venue statistics for related venues.",
                                          "properties": {
                                            "checkinsCount": {
                                              "default": 0,
                                              "description": "Number of check-ins at venues related to the specified venue.",
                                              "example": 4401,
                                              "type": "integer"
                                            },
                                            "description": "An array of related venues with their corresponding statistics for a given venue ID.",
                                            "tipCount": {
                                              "default": 0,
                                              "description": "Number of tips for a related venue.",
                                              "example": 23,
                                              "type": "integer"
                                            },
                                            "usersCount": {
                                              "default": 0,
                                              "description": "Total number of users associated with a venue's related items.",
                                              "example": 581,
                                              "type": "integer"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "url": {
                                          "description": "Related venues for a specified venue ID.",
                                          "example": "https://foursquare.com",
                                          "type": "string"
                                        },
                                        "venuePage": {
                                          "description": "Array of related venues for the specified venue ID, including venue information and a link to the venue's page.",
                                          "properties": {
                                            "description": "A list of related venues for the specified venue ID.",
                                            "id": {
                                              "description": "The unique identifier for the venue's related items on the venue page.",
                                              "example": "520907526",
                                              "type": "string"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "venueRatingBlacklisted": {
                                          "default": true,
                                          "description": "Flag indicating if the venue has been blacklisted for its rating.",
                                          "example": true,
                                          "type": "boolean"
                                        },
                                        "verified": {
                                          "default": true,
                                          "description": "Indicates if the venue related to the specified venue ID is verified.",
                                          "example": true,
                                          "type": "boolean"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "seeAllPath": {
                                "description": "See all paths for related items associated with the specified venue.",
                                "properties": {
                                  "description": "See all paths for related venues for a specific venue.",
                                  "object": {
                                    "description": "Information about the path to see all related venues for a specific venue.",
                                    "properties": {
                                      "description": "A list of related venues for the specified venue ID.",
                                      "url": {
                                        "description": "The see all URL for related venues for the specified venue ID.",
                                        "example": "/search/recommendations?superVenueId=5a187743ccad6b307315e6fe",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": {
                                    "description": "The see all path type for the related venues associated with the specified venue ID.",
                                    "example": "path",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "seeAllText": {
                                "description": "The text for \"See All\" button.",
                                "example": "See all places",
                                "type": "string"
                              },
                              "summary": {
                                "description": "A summary of related venues for a given venue ID.",
                                "example": "child_venues",
                                "type": "string"
                              },
                              "title": {
                                "description": "The titles of related items for a specific venue.",
                                "example": "Places inside Foursquare HQ",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "200"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "description": "Invalid request.",
                  "properties": {
                    "description": "Properties associated with a 400 response for retrieving related venues for a specific venue."
                  },
                  "type": "object"
                }
              }
            },
            "description": "400"
          }
        },
        "security": [
          {
            "ManagedUserTokenAuth": []
          }
        ],
        "summary": "Get Related Venues",
        "tags": [
          "Venues"
        ]
      }
    },
    "/venues/{venue_id}/tips": {
      "get": {
        "deprecated": false,
        "description": "Get the tips (i.e. reviews) of the specified venue.",
        "operationId": "get-venue-tips",
        "parameters": [
          {
            "description": "The venue you want tips for; e.g., Foursquare HQ's venue_id = 5a187743ccad6b307315e6fe",
            "in": "path",
            "name": "venue_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The API version date as documented [here](/reference/versioning); e.g. 20231010",
            "in": "query",
            "name": "v",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "One of `friends`, `recent`, or `popular`.",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Number of results to return, up to 500.",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Used to page through results.",
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"meta\": {\n    \"code\": 200,\n    \"requestId\": \"642da1d79767565035060f83\"\n  },\n  \"notifications\": [\n    {\n      \"type\": \"notificationTray\",\n      \"item\": {\n        \"unreadCount\": 3\n      }\n    },\n    {\n      \"type\": \"unconfirmed\",\n      \"item\": {\n        \"unreadCount\": 0\n      }\n    }\n  ],\n  \"response\": {\n    \"tips\": {\n      \"count\": 40,\n      \"items\": [\n        {\n          \"id\": \"5ad0c435db3aef092af147a7\",\n          \"createdAt\": 1523631157,\n          \"text\": \"First! :)  Behold our new Corporate HQ... the \\\"appropriate amount of fancy\\\" for a biz 9 yrs in the marking that's been inventing the future of location tech every step of the way! Welcome everyone!\",\n          \"type\": \"user\",\n          \"canonicalUrl\": \"https://foursquare.com/item/5ad0c435db3aef092af147a7\",\n          \"likes\": {\n            \"count\": 0,\n            \"groups\": []\n          },\n          \"like\": false,\n          \"logView\": true,\n          \"editedAt\": 1523631169,\n          \"agreeCount\": 102,\n          \"disagreeCount\": 0,\n          \"lastVoteText\": \"Upvoted Feb 15\",\n          \"lastUpvoteTimestamp\": 1676487032,\n          \"todo\": {\n            \"count\": 2\n          },\n          \"user\": {\n            \"id\": \"12345\",\n            \"firstName\": \"John\",\n            \"lastName\": \"Smith\",\n            \"gender\": \"male\",\n            \"address\": \"\",\n            \"city\": \"\",\n            \"state\": \"\",\n            \"countryCode\": \"US\",\n            \"photo\": {\n              \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n              \"suffix\": \"/blank_boy.png\"\n            },\n            \"isAnonymous\": false\n          }\n        },\n        {\n          \"id\": \"5b18217dd69ed0002c57ffaf\",\n          \"createdAt\": 1528308093,\n          \"text\": \"The Library is great for quiet work\",\n          \"type\": \"user\",\n          \"canonicalUrl\": \"https://foursquare.com/item/5b18217dd69ed0002c57ffaf\",\n          \"photo\": {\n            \"id\": \"5b18217ebcbf7a002c99a621\",\n            \"createdAt\": 1528308094,\n            \"source\": {\n              \"name\": \"4sq for iOS (internal)\",\n              \"url\": \"http://developer.foursquare.com\"\n            },\n            \"prefix\": \"https://fastly.4sqi.net/img/general/\",\n            \"suffix\": \"/457553503_u8u_U7IrJxmBTB9RalzKvCcgG6dbT5aizAnMiG6m184.jpg\",\n            \"width\": 1440,\n            \"height\": 1920,\n            \"visibility\": \"public\"\n          },\n          \"photourl\": \"https://fastly.4sqi.net/img/general/original/457553503_u8u_U7IrJxmBTB9RalzKvCcgG6dbT5aizAnMiG6m184.jpg\",\n          \"likes\": {\n            \"count\": 0,\n            \"groups\": []\n          },\n          \"like\": false,\n          \"logView\": true,\n          \"agreeCount\": 56,\n          \"disagreeCount\": 0,\n          \"todo\": {\n            \"count\": 0\n          },\n          \"user\": {\n            \"id\": \"123456\",\n            \"firstName\": \"John\",\n            \"lastName\": \"Smith\",\n            \"gender\": \"male\",\n            \"countryCode\": \"US\",\n            \"photo\": {\n              \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n              \"suffix\": \"/blank_boy.png\"\n            },\n            \"isAnonymous\": false\n          },\n          \"authorInteractionType\": \"liked\"\n        },\n        {\n          \"id\": \"5b6cc5756fd626002db9b7c6\",\n          \"createdAt\": 1533855093,\n          \"text\": \"The location intelligence is great here.\",\n          \"type\": \"user\",\n          \"canonicalUrl\": \"https://foursquare.com/item/5b6cc5756fd626002db9b7c6\",\n          \"likes\": {\n            \"count\": 0,\n            \"groups\": []\n          },\n          \"like\": false,\n          \"logView\": true,\n          \"agreeCount\": 55,\n          \"disagreeCount\": 0,\n          \"todo\": {\n            \"count\": 0\n          },\n          \"user\": {\n            \"id\": \"12345\",\n            \"firstName\": \"John\",\n            \"lastName\": \"Smith\",\n            \"gender\": \"male\",\n            \"address\": \"\",\n            \"city\": \"\",\n            \"state\": \"\",\n            \"countryCode\": \"US\",\n            \"photo\": {\n              \"prefix\": \"https://fastly.4sqi.net/img/user/\",\n              \"suffix\": \"/blank_boy.png\"\n            },\n            \"isAnonymous\": false\n          }\n        }\n      ]\n    }\n  }\n}"
                  }
                },
                "schema": {
                  "description": "Get tips for a specific venue.",
                  "properties": {
                    "description": "Properties for retrieving tips for a specific venue.",
                    "meta": {
                      "description": "Metadata object containing additional information about the response.",
                      "properties": {
                        "code": {
                          "default": 0,
                          "description": "Status code indicating the result of retrieving tips for a specific venue.",
                          "example": 200,
                          "type": "integer"
                        },
                        "description": "Metadata object containing additional information about the response for retrieving tips for a specific venue.",
                        "requestId": {
                          "description": "Request ID.",
                          "example": "642da1d79767565035060f83",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "notifications": {
                      "description": "Array of notification objects for the specified venue.",
                      "items": {
                        "description": "Array of notification objects for a successful response when retrieving tips for a specific venue.",
                        "properties": {
                          "description": "Array of notification objects for the specified venue.",
                          "item": {
                            "description": "Array of notification objects containing information about unread items for the specified venue.",
                            "properties": {
                              "description": "Array of notification items for the specified venue, including unread count.",
                              "unreadCount": {
                                "default": 0,
                                "description": "Number of unread items in notifications for a specific venue.",
                                "example": 3,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": {
                            "description": "Array of notification objects with type as a property for the specified venue's tips.",
                            "example": "notificationTray",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "response": {
                      "description": "Response object containing tips for the specified venue.",
                      "properties": {
                        "description": "Response object containing the retrieved data for tips associated with a specific venue.",
                        "tips": {
                          "description": "Array of tip objects for the specified venue.",
                          "properties": {
                            "count": {
                              "default": 0,
                              "description": "Number of tips for a specific venue.",
                              "example": 40,
                              "type": "integer"
                            },
                            "description": "Array of tip objects for a specific venue.",
                            "items": {
                              "description": "Array of tips for a specific venue.",
                              "items": {
                                "description": "Array of tips associated with the specified venue.",
                                "properties": {
                                  "agreeCount": {
                                    "default": 0,
                                    "description": "Number of \"agree\" reactions for tips associated with a specific venue.",
                                    "example": 102,
                                    "type": "integer"
                                  },
                                  "canonicalUrl": {
                                    "description": "The canonical URL for each tip.",
                                    "example": "https://foursquare.com/item/5ad0c435db3aef092af147a7",
                                    "type": "string"
                                  },
                                  "createdAt": {
                                    "default": 0,
                                    "description": "Timestamp indicating when the tip was created.",
                                    "example": 1523631157,
                                    "type": "integer"
                                  },
                                  "description": "Array of tip objects for a specific venue, including the user who left the tip.",
                                  "disagreeCount": {
                                    "default": 0,
                                    "description": "Number of users who have disagreed with a tip about a specific venue.",
                                    "example": 0,
                                    "type": "integer"
                                  },
                                  "editedAt": {
                                    "default": 0,
                                    "description": "List of timestamps for when tips were edited for a specific venue; UNIX timestamp in seconds since Epoch.",
                                    "example": 1523631169,
                                    "type": "integer"
                                  },
                                  "id": {
                                    "description": "The tip's ID.",
                                    "example": "5ad0c435db3aef092af147a7",
                                    "type": "string"
                                  },
                                  "lastUpvoteTimestamp": {
                                    "default": 0,
                                    "description": "Last upvote timestamp for tips retrieved from a specific venue.",
                                    "example": 1676487032,
                                    "type": "integer"
                                  },
                                  "lastVoteText": {
                                    "description": "The last vote text.",
                                    "example": "Upvoted Feb 15",
                                    "type": "string"
                                  },
                                  "like": {
                                    "default": true,
                                    "description": "Number of likes for tips associated with a specific venue.",
                                    "example": false,
                                    "type": "boolean"
                                  },
                                  "likes": {
                                    "description": "Number of likes for tips associated with a specific venue.",
                                    "properties": {
                                      "count": {
                                        "default": 0,
                                        "description": "Number of likes for all tips associated with a specific venue. ",
                                        "example": 0,
                                        "type": "integer"
                                      },
                                      "description": "Number of likes for a specific tip at a given venue.",
                                      "groups": {
                                        "description": "Array of groups containing information about likes for tips associated with a specific venue.",
                                        "type": "array"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "logView": {
                                    "default": true,
                                    "description": "Response object containing a list of tips for the specified venue.",
                                    "example": true,
                                    "type": "boolean"
                                  },
                                  "text": {
                                    "description": "Tips for a specific venue.",
                                    "example": "First! :)  Behold our new Corporate HQ... the \"appropriate amount of fancy\" for a biz 9 yrs in the marking that's been inventing the future of location tech every step of the way! Welcome everyone!",
                                    "type": "string"
                                  },
                                  "todo": {
                                    "description": "Array of to-do items associated with tips for the specified venue.",
                                    "properties": {
                                      "count": {
                                        "default": 0,
                                        "description": "Total number of to-do items for tips associated with a specific venue.",
                                        "example": 2,
                                        "type": "integer"
                                      },
                                      "description": "Array of to-do objects for tips associated with the specified venue."
                                    },
                                    "type": "object"
                                  },
                                  "type": {
                                    "description": "The type of tips for the specified venue.",
                                    "example": "user",
                                    "type": "string"
                                  },
                                  "user": {
                                    "description": "Response object containing an array of tip objects for the specified venue, with information about the user who created each tip.",
                                    "properties": {
                                      "address": {
                                        "description": "The user's address.",
                                        "example": "",
                                        "type": "string"
                                      },
                                      "city": {
                                        "description": "The city for the user who posted the tips associated with the specified venue ID.",
                                        "example": "",
                                        "type": "string"
                                      },
                                      "countryCode": {
                                        "description": "The country code for the user who posted the tips associated with the specified venue ID.",
                                        "example": "US",
                                        "type": "string"
                                      },
                                      "description": "Array of users who have left tips for a specific venue.",
                                      "firstName": {
                                        "description": "A user's first name from a list of tips for a specific venue.",
                                        "example": "John",
                                        "type": "string"
                                      },
                                      "gender": {
                                        "description": "The gender of the user who uploaded the tips associated with a specific venue.",
                                        "example": "male",
                                        "type": "string"
                                      },
                                      "id": {
                                        "description": "The user ID from the tips associated with a specific venue.",
                                        "example": "12345",
                                        "type": "string"
                                      },
                                      "isAnonymous": {
                                        "default": true,
                                        "description": "Flag indicating if the user who uploaded the tip is anonymous.",
                                        "example": false,
                                        "type": "boolean"
                                      },
                                      "lastName": {
                                        "description": "Last names for the tips associated with a specific venue.",
                                        "example": "Smith",
                                        "type": "string"
                                      },
                                      "photo": {
                                        "description": "User profile photo information for tips retrieved from a specific venue.",
                                        "properties": {
                                          "description": "User's profile photo for tips associated with a specific venue.",
                                          "prefix": {
                                            "description": "Response object containing photo prefix for the user's profile photo in tips associated with the specified venue.",
                                            "example": "https://fastly.4sqi.net/img/user/",
                                            "type": "string"
                                          },
                                          "suffix": {
                                            "description": "Photo suffix.",
                                            "example": "/blank_boy.png",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "state": {
                                        "description": "User state.",
                                        "example": "",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "200"
          },
          "400": {
            "content": {
              "text/plain": {
                "examples": {
                  "Result": {
                    "value": "For full list of API error codes:\nhttps://location.foursquare.com/developer/reference/errors-v2"
                  }
                }
              }
            },
            "description": "400"
          }
        },
        "security": [
          {
            "ManagedUserTokenAuth": []
          }
        ],
        "summary": "Get Venue Tips",
        "tags": [
          "Venues"
        ]
      }
    }
  },
  "security": [
    {
      "sec0": []
    }
  ],
  "servers": [
    {
      "url": "https://api.foursquare.com/v2/"
    }
  ],
  "tags": [
    {
      "description": "Returns places based on user-submitted keywords. Matches against names, categories, tips & tastes.",
      "name": "Venues"
    },
    {
      "description": "Discover and explore new venues based on where you’ve been or what’s popular in your area.",
      "name": "Search"
    },
    {
      "description": "Let users \"check-in\" to a venue to increase their engagement while you develop stronger customer profiling.",
      "name": "Checkins"
    },
    {
      "description": "Make it easy for users to curate custom lists of Places, like travel wishlists, trip itineraries, and local favorites.",
      "name": "Lists"
    },
    {
      "description": "Retrieve additional information about photos associated with a venue.",
      "name": "Photos"
    },
    {
      "description": "Let users choose their own Tastes in order to jump-start personalization with our unique and extensive Tastes taxonomy.",
      "name": "Tastes"
    },
    {
      "description": "Provide users with millions of venue-specific reviews and enable them to share their own experiences.",
      "name": "Tips"
    },
    {
      "description": "Get all information about a user, as well as their activity, checkins, lists, tips, and tastes.",
      "name": "Users"
    },
    {
      "description": "Create Foursquare managed users and comply with global data and privacy regulations with simplified deletion and export options for end user data.",
      "name": "User Management"
    }
  ],
  "x-readme": {
    "explorer-enabled": true,
    "headers": [],
    "proxy-enabled": true,
    "samples-enabled": true
  },
  "x-readme-fauxas": true
}